The manuscript “PanFunPro: PAN‐genome analysis based on FUNctional PROfiles” by Oksana Lukjancenko et al. presents a standalone application and a web server designed for the task of i) estimating the protein domain composition of proteomes and ii) the calculation of core and pangenomes inferred from the resulting functional profiles of those proteomes. The title and the abstract simply describe these features, which then they apply to test sets of Lactobacillus and Streptococcus genomes. I think the general idea behind the manuscript is appealing, in the sense that this approach could in theory circumvent the need for BLAST reciprocal hits (BRHs), which are present in the majority of alternative software choices that can be applied to the same problem, and are known to have issues. However, in my view the authors should have done more to convince the readers of the performance of their solution, thoroughly comparing their results to those based on the de facto standard BRHs, which are reported in their own reference 17 and summarized in a very short paragraph. I believe that part of the work required when introducing new software is to do a critical analysis of the potential benefits and drawbacks of the new solution, and unfortunately this was not satisfactorily accomplished in this paper. I further elaborate on these and other points in the following list of comments: Why are functional profiles made by alphabetically sorting domains? I can see that this choice clearly reduces the numbers of architectures, but aren’t the authors assuming that domain order along the sequence is not important? Surely they can think of example proteins where the ordering of domains is indeed important. For proteins with no matches in Pfam, InterPro or Superfamily, CDHIT was used for clustering sequences, with a fixed %60 sequence identity cut‐off. Have the authors benchmarked this cut‐off to make sure it replicates the equivalent clustering based on HMM matches? Or perhaps was this value taken based on previous work? This should have been clearly stated in the text. I invite the authors to further expand the most important part of the work in my opinion, in particular the paragraph: “ Comparison of core‐ and pan‐genome analyses, performed by BLAST‐based and PanFunPro‐based approaches, found that typically HMM‐based grouping of homologous sequences is more sensitive than BLAST‐based grouping, and result in significantly reduced number of pan‐genome families, 7,009 compared to 13,069 for the genus Lactobacillus, and 6,263 compared to 9,785 in the genus Streptococcus. Furthermore, the number of shared profiles increased fo the r Lactobacillus genus (363 to 467); however the core of Streptococcus genus did not follow the expansion tendency, and yielded 576 compared to 638 profiles. ” These numbers indeed suggest that pangenomes are greatly reduced, but the conclusion is less obvious for coregenomes. The manuscript would benefit if the authors select and discuss a few protein clusters produced by both BRH and PanFunPro to show what kind of proteins are merged together, to check and discuss whether the merging always make sense. Until this analysis is carried out it would not be possible to fairly evaluate PanFunPro. Please make sure that the standalone version can effectively be downloaded from http://www.cbs.dtu.dk/~oksana/PhD_Thesis/PanFunPro/ (it does nevertheless work OK from the other provided URL). In addition, please make sure that the PanFunPro_v1.0.tar file contains binaries for all target architectures. The version I could examine only contained prodigal for Mac OS, so it currently does NOT work on Linux systems, as claimed in the text. Please make available the raw data used in this work so that users can reproduce these results using the standalone version of the software. Alternatively, demo buttons with these datasets could be added to the web tool. 