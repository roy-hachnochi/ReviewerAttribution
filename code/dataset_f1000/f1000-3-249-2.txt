I tried JSAV in a few browsers including Opera, Chrome and Konqueror and in all browsers the alignment was well displayed. The tool is fast even when alignments with 40 sequences and more are submitted. It is a clean, robust and simple solution for displaying alignments in web pages. With JSAV, it is very easy to include rendered alignments in web pages. Innovative is the sequence sorter which allows sorting sequences by local sequence similarity. The row header runs out of the screen if the alignment is scrolled horizontally. Also there is no wrapping of long sequences as in Jalview. This matters only in case of sequences comprising more than about 100 residues. Sequence and residue annotations known from Jalview, Pfaat and CLC seem not to be implemented in JSAV. There are some minor issues concerning the GUI: The leading greater-than signs from the fasta header is written in front of the sequence name. The check-box Do-not-color-dots could be deactivated if the check-box Dotify is not activated. The sequences are selected/deselected for deletion or export using check-boxes. Multiple selection of a range of sequences via Shift-left-click does not work. For alignments comprising only a few sequences, however, this does not matter. The text is well written and the advantage of JSAV over other tools becomes clear: It is a simple Java script library for basic alignment visualization which does not require any other server program. The table 1 compares existing tools and is very informative. Interesting is the last table row telling that SnipViz allows long sequences. This could be discussed more in the text since this exemplifies a general performance problem of JS compared to C++ or Java: I assume that in all cited JS based tools with the exception of SnipViz, document-object-model-elements (DOM elements) are created for all residues. For large alignments, ten thousands of elements need to be created which takes long time and uses up much memory. With Java, however, only the visible part of the alignment needs to be drawn (Cinema, Pfaat, Strap) which is much faster and has a minimal footprint. I assume that SnipViz only renders the visible portion of the alignment? This would explain why the alignment cannot be scrolled softly. This kind of discussion would help the reader to understand that using JS for alignment visualization is still technical challenge and one cannot expect the full functionality of CLC workbench or Jalview in a JavaScript library like JSAV. Alignment-Editor should read "Alignment-Annotator". This tool should have a mark in the table rows Phylogenetic-tree and Submission-to-another-site. The authors emphasized the program feature of annotations in various cited tools and could provide a row in the table for this important feature. It would be great if annotations could be implemented in future releases of JSAV.