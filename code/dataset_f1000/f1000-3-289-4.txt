 Summary of the Paper This article summarizes arguments in support of reproducibility for scientific research, specifically with respect to computational science. It raises important issues about scholarly communication and reproducibility of previous research work, and it presents ActivePapers as a solution to many problems associated with reproducibility. Reaction Upon reading the article, our reaction is twofold. First, we do not understand the authors primary purpose. Is this a review article or a research article? Is this an article summarizing arguments in support of reproducibility? Is it making the case for ActivePapers? Second, regardless of the primary purpose, we believe the work misses key existing technologies and practices. Structural Issues Is this a review article or a research article? If this is a review article, replicability and reproducibility should be discussed in more detail, and ActivePapers in less. If this is a research article, we suggest less review of the ActivePapers platform, and more on its contribution and the ways it addresses problems that other systems do not. The introduction states, "the work presented in this article takes the opposite approach of starting from the requirements of the scientific record and exploring how software and electronic datasets need to be prepared in order to become useful parts of this record." What are the requirements of the scientific record? They seem scattered throughout the next few sections, such as " the most basic requirement for building confidence in computational results is total transparency" (p. 3). The philosophy of science literature might be helpful in summarizing the basic requirements. Based on our reading, we do not think the main contributions of this paper are the bulleted items in the introduction, but rather the ideal platform requirements on page six. These logically flow from a discussion of the requirements of the scientific record followed by a discussion of tools for reproducible and replicable research. On Data Reuse There are preservation practices and tools, which follow the approach widely used in Libraries, that help to make a dataset reusable in the longer term: First, researchers are encouraged to use and share datasets in formats commonly used by their discipline, and when possible, formats that do not depend on proprietary software. When the data file format depends on a specific software (or is not considered a preservation format), there exist software tools that convert the proprietary format to a preservation format. For example, for tabular data in SPSS and STATA format which depend on a specific statistical package, the files can be converted to a plain text (tab-delimited or CSV file) plus a metadata file (in XML or JSON format) that contains information about the columns in the original tabular data file. Information is not lost and it can be re-combine to generate an SPSS or STATA file. This preservation feature can be found in public data repositories such as the Dataverse repository software ( dataverse.org ). There are software projects that focus on other similar automated preservation tools to re-format data files into preservation formats and provide additional preservation metadata. One example is Archivematica. These preservation tools are important for data repositories if they want to make their data accessible and reusable in the future, when the original software might be obsolete. On Methods/Code/Software One approach on sharing the code used to model/analyze a research work is by using an open-source language like R, where the models and packages are shared and disseminated through a common R package repository (CRAN). Some R packages have explored solutions for reproducibility by tracking the detailed information on what model/code ran and the computing configuration (see http://arxiv.org/pdf/1501.02284.pdf ). Also, there are on-going efforts in reproducibility that support hosting code and provide executable functionality to run in the cloud ( http://researchcompendia.org/ ). Minor Issues The word conservation should be replaced with preservation . Conservation generally implies the careful maintenance of a finite resource, while preservation implies the protection of a thing in order to keep that thing as is. We recommend reviewing the work and guidelines provided by the Data Citation Principles: https://www.force11.org/datacitation which can apply to software as well, and should help towards giving due importance to software and providing formal long term access and reuse, if the principles are followed. In the conclusion: "the main reason is that most of the computing technology used by scientists was developed outside of scientific research, for domains of application where replicability is not important." Is this statement supported? Indexability This article requires considerable work to be indexed. First, clarify the type of article that is being written, and restructure accordingly. Second, the author misses some key existing technologies and practices that should be discussed.