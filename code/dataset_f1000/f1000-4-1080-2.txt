This article From reads to regions: a Bioconductor workflow to detect differential binding in ChIP-seq data clearly describes a comprehensive computational workflow of Differential Binding (DB) analysis of ChIP-seq data set, based primarily on R software packages from the open-source Bioconductor project. It provides readers with practical usage examples of DB analyses of two typical types of ChIP-seq data sets, that covers all steps of the analysis pipeline, from alignment of read sequences, normalization, DB identification, annotation to interpretation and visualization of putative DB regions. We believe that this well-written paper will greatly help users to apply the workflow to their own DB analysis of ChIP-seq data sets. In the following section, please explicitly explain that the two data sets were chosen to represent two common ChIP-seq use cases, one data set for dealing with wider peaks while the other data set is for working with sharp peaks "The application of the methods in this article will be demonstrated on two publicly available ChIP-seq data sets. The first data set studies changes in H3K9ac marking between pro-B and mature B cells (Revilla-I-Domingo et al. , 2012). The second data set studies changes in CREB-binding protein (CBP) binding between wild-type and CBP knock-out cells (Kasper et al. , 2014). " According to the Rsubread documentation about parameter type at http://bioconductor.org/packages/release/bioc/manuals/Rsubread/man/Rsubread.pdf, type is an integer giving the type of sequencing data. Possible values include 0 (RNA- seq data) and 1 (genomic DNA-seq data such as WGS, WES, ChIP-seq data etc.). By default, it is set to 0. Therefore, please set type to 1 in the following section. " library(Rsubread) bam.files - paste0(names(by.group), ".bam") align(index=index/mm10", readfile1=group.fastq, TH1=2, input_format=FASTQ", output_file=bam.files) " "align(index="index/mm10", readfile1=all.fastq, phredOffset=64, input_format="FASTQ", output_file=bam.files)" Suggest adding file.exists check to see if temp.dir exists already before dir.create(temp.dir). For system call to fastq-dump and MarkDuplicates, suggest to add path information to these programs in case the path to these programs are not in the search path. "For this analysis, reads are only used if they have a mapping quality score above 50." 50 is pretty high although we understand that this is for illustration purposes. To prevent readers from getting the idea that 50 is the recommended cutoff, could you please also provide a quality score threshold commonly used in the field? "The filter threshold is defined based on the assumption that most regions in the genome are not marked by H3K9ac. Reads are counted into large bins and the median coverage across those bins is used as an estimate of the background abundance. Windows are only retained if they have abundances 3-fold higher than the background." In the example, the window size (width) for calculating background (bg) coverage is set to 2000 bp, and the width is set to 150 bp for win.data. When calculating fold enrichment over background, is the bg coverage scaled down using the ratio of the window size (2000 vs. 150)? "The implicit assumption of non-linear methods is that most windows at each abundance are not DB. Any systematic difference between libraries is attributed to bias and is removed. This is not appropriate in situations where large-scale DB is expected, as removal of the difference would result in loss of genuine DB. However, there is no indication that such changes are present in this data set, so non-linear methods can be applied without too much concern." Could you please suggest a normalization method for situations where large-scale DB is expected (perhaps TMM as mentioned in the later section)? "Note that only the trended dispersion will be used here the common and tagwise values are only shown for diagnostic purposes" Could you please comment on how common and tag wise values help with diagnosis of the data set? "Determining the direction of DB is more complicated, as clusters could potentially contain windows that are changing in opposite directions." How about controlling this by allowing nearby windows to merge only if the changing directions are the same? "The behaviour of ChIPpeakAnno complements that of detailRanges. The latter reports all overlapping and flanking genes, while the former reports only the closest gene (but in greater detail). Which is preferable depends on the proclivities of the user and the purpose of the annotation." Actually, ChIPpeakAnno can also report all overlapping and flanking genes by setting output="both" (or output ="overlapping") and maxgap. For example, it outputs all overlapping and flanking genes within 5kb if set maxgap = 5000L and output ="overlapping". Here is an example using Txdb annotation data. library(TxDb.Mmusculus.UCSC.mm10.knownGene) ucsc.mm10.knownGene - genes(TxDb.Mmusculus.UCSC.mm10.knownGene) anno.peaks - annotatePeakInBatch(minimal, annotationData=ucsc.mm10.knownGene, output="overlapping", maxgap=5000L) "Reads are then counted into sliding windows. For TF data analyses, smaller windows are necessary to capture sharp binding sites. A large window size will be suboptimal as the count for a particular site will be by non-specific background in the neighbouring regions. In this case, a window size of 10 bp is used. win.data - windowCounts(bam.files, param=param, width=10, ext=frag.len)" It seems that space is set to 50bp for both sharp peaks and broad peaks. Could you please comment on this? We notice that the width for local background is set to 2kb for broad peaks and 10kb for sharp peaks. Could you please justify? Would adding a fitted line in Figure 3 and Figure 4 help with the visualization? In addition, it would be great if you could provide recommendations on how to evaluate the quality of the BCV in Figure 5. Is there a range or specific shape we are targeting?