The authors present a Cytoscape app that turns it into a REST server. Most core functionality of Cytoscape can now be triggered by external agents using HTTP requests, rather than by point-and-clicking UI. This enables workflow automation and distribution that was hardly possible before. The fact that the protocol is HTTP based, allows working with it programmatically using any modern language. CyREST comes with libraries for Python and R that make the communication with Cytoscape through REST API even simpler, by enveloping the calls in methods and wrapping the returning JSON in objects. Perhaps in the future work section the authors could shed some light on the plans to allow users extending the set of REST handlers. The virtues of Cytsocape are beyond the core functionality and currently there is no way for a Cyto-app developer to map her own functions to REST (those are hard-wired in the code of CyREST app). A simple registry for binding 3rd party Cyto-app functions to URLs at runtime could bring the community to bring their on plug-in REST. Possible typos page 6: The default HTTP port for cyREST is 1234, which can be changed by creating or modify the Cytoscape rest.port property page 7: This workflow is simple to do with Cytoscape the alternative would be a custom program or manual, file based operations that are hard to reproduce.