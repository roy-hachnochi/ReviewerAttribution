My understanding of this article is that NGSeasy pipeline aims to simplify the distribution of common tools used in sequencing analysis. A still significant problem in bioinformatics is getting the third-party tools installed and working, by using Docker containers as described in this article, the authors will make this process easier. The code is available on github as described and they provide extensive documentation. Major One concern is the install instructions in the article. Specifically: sudo make INTSALLDIR="/media/scratch" all sudo make intsall I am wary of using to install. I know that using tools like require however for most bioinformatics software I prefer to install in my user directory simply to avoid any possible security problems. I took a look at the Makefile and I believe that sudo is not necessarily required to install, only the the INSTALLDIR and TARGET_BIN are owned by the user. Also there is typo here in The project doesnt include any NGS tools related to assembly or transcriptomics. Though not stated specifically, the tools and data described here leads me to believe this project is focused around clinical applications and human genomics. If that is the case perhaps this should be clarified in the article and the title. The Docker security issue at the end feels tagged-on. This, I think, is a pressing concern that prevents many people from using Docker on HPC machines as opposed to on-demand computing such as AWS. This is the case at the JGI where I currently work. I would suggest expanding on this point a little more to describe why it is an issue. I think a short paragraph would be useful to end the article with. This would summarise the points described above and potential impact of the work. I think Figure 1 could be expanded upon. It currently assumes a familiarity with Docker that could make it difficult to interpret without a good understanding of containers and volumes. Minor The scripts installed from https://github.com/KHP-Informatics/ngseasy/tree/master/bin The scripts here are very large (400-800 line) bash scripts. My concern is these scripts may be difficult to maintain or debug. Writing from my own experience, when projects get larger it is worth considering if code can be refactored or made more modular to make it more maintainable. Inconsistent use of Dockerized / Dockerised between the article and the documentation I believe Docker have deprecated boot2docker and now recommend docker-toolkit. This is their recommended way of installing Docker. All data is available from the AWS EU region. This may take much longer to download outside of this region. Im not sure if the authors can do anything about this however as using a CDN may be prohibitive. The URL https://registry.hub.docker.com/repos/compbio requires the creation of a DockerHub account to view. This is not the developers fault, however having to register is likely to result in some users not following up. 