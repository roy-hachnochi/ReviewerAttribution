Chen et al. propose a novel use of negative binomial generalized linear models (GLMs), as implemented in the edgeR software, to test for differential methylation from bisulfite-sequencing data, particularly reduced representation bisulfite-sequencing (RRBS). By leveraging the existing edgeR software, a popular tool in the analysis of diffential gene expression analysis from RNA-seq data, this method is immediately able to handle complex experimental designs and integrates with downstream analysis tools such as gene set tests provided by the limma software. The paper is well-written and I was able to reproduce the authors’ analysis. It will be a useful workflow for people needing to develop an analysis of RRBS data. Like Simon Andrews, I initially struggled a little with some of the detail of the method itself. The method’s elegance and power, like all those based on (generalized) linear models, is driven by careful formulation of the design matrix and the choice of contrasts. Necessarily, the design matrix for analysing bisulfite-sequencing data is more complex than that used to analyse RNA-seq data from an identical experimental design. As I know the authors are well aware, getting the design matrix and contrasts correct is 95% of the battle for most people analysing data with edgeR and limma . I will explain my concerns below (many are the same as raised by Simon in his review). Main points p4: The initial example has no replicates. Since the method is designed for “any BS-seq data that includes some replication”, should this example include replicates? I appreciate the desire to keep the initial example simple (especially in light of my next comment). p4: I initially found the design matrix confusing. In fact, I had the same reaction/interpretation as Simon Andrews 4th comment: “In the small example description you say that A_MvsU estimates the log ratio for Sample1, but it wasn’t clear to me why this would apply to only Sample 1 since the factor has a 1 against the meth count for both samples 1 and 2”. I had to manually check a few quantities to convince myself, e.g., to rounding error, `coef(fit)[, "A_MvsU"]` is `logit((2 + prior.count) / (2 + prior.count + 12 + prior.count)`, where `prior.count = 0.125`. Because so much depends on constructing the appropriate design matrix, this description/section may warrant further explanation (e.g., comparing to some manually computed quantities). Like James MacDonald, although the code was clearly written, I was a little surprised that it didn’t use more consistent integration with existing Bioconductor packages and data structures. To add to his example, almost all the work in the section ‘Reading in the data’ can be achieved with `bsseq::read.bismark(fn)`, which will: read in an arbitrary number of Bismark `.cov.gz` files, appropriately combine samples with different sets of CpGs, and return a SummarizedExperiment -derived object (a BSseq instance) which could readily be used to construct the DGEList used in the analysis. In my experience, loading the data and combining different sets of loci is a step fraught with danger of hard-to-track-down errors, so it may be better to advise workflow users to use a fairly well-tested function. Full disclosure: I am the author of `bsseq::read.bismark()`. p14: The aggregation of CpGs to promoters may lead to surprising results. An (extreme) example: the first half of a promoter is methylated in one condition and unmethylated in the other, and vice versa for the second half of the promoter. In aggregate over the promoter the proportion of methylated CpGs may be similar in both conditions, yet this promoter is clearly differentially methylated. I think a note encouraging workflow users to think carefully about their hypothesis when doing this form of aggregation is warranted. Minor points p1: “The most commonly used technology of studying DNA methylation is bisulfite sequencing (BS-seq)”. The Illumina 27k/450k/EPIC microarrays are the most commonly used ‘genome-wide’ assays for studying DNA methylation. However, (whole genome) BS-seq is arguably the gold standard genome-wide assay. p3: I think there’s some confusion about CpGs and CpG islands (CGI). Approximately 0.9% of dinucleotides in the human genome (hg19) are CpGs, and approximately 0.7% of the genome is a CGI (using UCSC CGIs, which is not the only definition but perhaps the standard); see code below: ```R library(BSgenome.Hsapiens.UCSC.hg19) hg19_size - sum(as.numeric(seqlengths(BSgenome.Hsapiens.UCSC.hg19)[ paste0("chr", c(1:22, "X", "Y"))])) # CpGs on chr1-22,chrX,chrY in hg19 n_CpGs - Reduce(sum, bsapply(BSParams = new("BSParams", X = BSgenome.Hsapiens.UCSC.hg19, FUN = countPattern, exclude = c("M", "_")), pattern = "CG")) 100 * n_CpGs / hg19_size # CGIs in hg19 library(rtracklayer) my_session - browserSession("UCSC") genome(my_session) - "hg19" cgi - track(ucscTableQuery(my_session, track = "cpgIslandExt")) sum(width(cgi)) / hg19_size ``` p3: Possible type, “with a large genome” p3: “WGBS is more suitable for studies where all CpG islands or promoters across the entire genome are of interest.” Might also add ‘distal regulatory elements’ and CG-poor regions (RRBS targets CG-rich regions of the genome). p3: BSmooth (implemented in bsseq ) doesn’t use Empirical Bayes although it does use limma for linear regression p4: Missing a `library(edgeR)` in order for the code to work p4: There’s an extra parenthesis at the end of line 2 when constructing `dimnames(counts)` p4: The authors note that the method is “especially appropriate for RRBS data”. Is the main challenge for running on WGBS data that of computational resources? p5: Typo, “mythlyated” should be “methylated” Table 1: Condition should be ‘A’ or ‘B’ instead of ‘1’ or ‘2’ p6: Was Bowtie1 or Bowtie2 used as the Bismark backend for the mouse data? p8: The filtering step removes almost 90% of CpGs. Is this unavoidable, e.g., due to low sequencing coverage of these samples, or might the filtering be relaxed? Figure 1: Any thoughts for why the P8_6 sample is rather separated from the other Basal samples along dim2 of the MDS plot? Figure 2: What is the meaning of ‘average abundance of each CpG site’? Is ‘abundance’ interpretable as ‘sequencing depth’? p16: Possible typo, “Suppose the comparison of interest is the same as before” p22: In the DNA methylation literature, ‘up-methylated’ is typically called ‘hypermethylated’ and ‘down-methylated’ is typically called ‘hypomethylated’. 15 th July 2019: The competing interests section has been updated to reflect Dr Hickey’s previous University of Melbourne affiliation. 