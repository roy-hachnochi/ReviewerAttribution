This paper presents an extension of the BioNSi modeling software with two aims: (i) kickstart model construction by integrating KEGG pathways and (ii) use experimental expression data as initial states for the simulation. These aims make sense: facilitating the initial construction and evaluation of dynamical models is an important challenge in systems biology. However, I feel that details on the inner working and discussion of the limitations of this tool are missing from the paper. Some related work should also be taken into account. In particular Wrzodek et al. 1 and Bchel et al. 2 which generate qualitative models in SBML qual format 3 from KEGG pathways. My main concerns are detailed in the following text, none of them would be blocking taken separately, but my overall interpretation is that this work requires deep changes to become convincing. I installed the BioNSi tool in Cytoscape 3.4. The documentation states that building a network from KEGG pathways requires the selection of a folder containing one or several KEGG xml files and a CSV file with expression data. I tried to provide a folder containing two KEGG pathways and an empty CSV file, but it did not work (error message: "number of expression files is not 1"). I had the same problem with Cytoscape 3.6. KEGG pathways often "merge" multiple biological entities in a single node, the paper does not say how this case is handled, the documentation only states that ellipsis dots are removed from the name. Does it mean that these groups are preserved? How does this affect merging multiple KEGG pathways? It can be a concern as the same entity could be involved in different groupings in different KEGG pathways. More generally, it would make sense to separate the transformation of KEGG pathways into discrete models (taking into account previous work 1 , 2 ), and the merging of multiple discrete models, which is a more general problem, and could be used to integrate several existing models with new models generated from pathway maps. The import of initial states from experimental data, and in particular the discretization step deserve further discussion. For a generic tool, I suspect that it uses a simple method where the full range of values for all genes is scaled to 0-9, defining 9 evenly-spaced thresholds. Is it the case or are the thresholds based on the range of each gene separately? As mapping experimental data on the model is one of the two core aims of this paper, it should at least review the alternatives, give proper details on how this is handled and state that alternative mapping can be integrated as a preprocessing step. Mapping entities in the model to entities in the experimental data is not discussed either, does the tool convert KEGG identifiers to official gene names, does it require the user to do the mapping in advance, does it provide a GUI to fine-tune the mapping afterwards? The paper does not state what is the objective of using an experimentally measured values as initial state. The experiments presented here seem to represent "steady states" of the biological system, the simulation leads to a steady state which can be compared to the experimentally measured one. Differences between the experimental and computed states can be of two types: (i) inconsistency showing that the model needs further improvement, and (ii) effect that is not measured in the experiment: for example change of phosphorylation which is not measured by expression data. As this is the very core of the paper, a discussion on the possible biological meaning of the results seems required. The BioNSi tool, which this work extends, supports simulations of qualitative (discrete) models. Its capabilities are summarized in this paper, and it is briefly compared to other tools for qualitative modelling in Table 1. A minor typo in this table replaced BooleSim with BoolSim (there is also a tool called BoolSim in this field: it is the command line tool handling the Boolean part of SQUAD). The paper describes BioNSi (and some other tools) as doing synchronous and asynchronous simulations, but misuses the term "asynchronous". Here asynchronous refers to synchronous with delays or priorities (i.e. all transitions do not happen at the same speed, but are still using the same clock), however it usually means independent trajectories, leading to non-deterministic behaviour. Using the classical asynchronous updating of qualitative models, a state can have several separate successors, each corresponding to the update of a single component. This allows to study systems where the relative speeds of transitions is not known, but introduces numerous concurrent trajectories, making the analysis much harder. GINsim is the only tool in the provided list implementing asynchronous updating, it also supports priorities, but not delays. BoolNet 4 , PyBoolNet 5 , and Boolsim 6 support asynchronous updating. To handle this complexity, some tools such as BooleanNet 7 or MaBoSS 8 perform random walk in the asynchronous dynamics. In BioNSi, inhibitions have negative weights, while activations have positive weights. These weights are multiplied by the level of their source nodes, the resulting weighted sum is then used to define the evolution of the target element. While this allows to quickly define a model, I am concerned by the lack of flexibility: some inhibitors only block the effect of one of the activators, some regulators have a cooperative effect, some act independently. I agree that the simple weight system used in BioNSi is convenient when these fine-grained mechanisms are unknown: it provides a good first model. However, the KEGG pathways mostly describe processes which have been deeply studied, and for which such an approximation could be avoided. There is some value in a simple system based on weights, especially as it fits better for integration into cytoscape, but building more precise functions through the use of intermediate nodes representing cooperative effects should at least be discussed as a common refinement. Some minor points: Missing closing of 2 parenthesis on page 2, another on page 3 Page 6: "138 nodes with 8 nodes or less" is confusing. I suspect it means 138 nodes within sub-networks of 8 nodes or less? The first paragraph on page 6 ("simulation of different experimental conditions") repeats the last paragraph of the methods. 