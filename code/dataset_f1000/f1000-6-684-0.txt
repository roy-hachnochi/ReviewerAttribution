The submission describes an open source R software package for managing, visualising and analysing data from oral glucose tolerance tests (OGTTs). The aim of the work in providing open source tools for the analysis of OGTT data is highly commendable. From a technical standpoint, the package clearly follows good software development practices by using existing data management infrastructure and extensive automated testing. The authors make a strong effort to make the results reported in the paper reproducible by providing code for reproducing half of the figures. The package includes a vignette that provides some example workflows that seem potentially very useful. While these basics are well covered, the package still has quite a few rough edges that may make it more difficult to adopt for potential end users. I believe these should be addressed to make the submission scientifically sound. 1. Installation of the package on a fresh R 3.4 according to instructions fails, presumably due to inability of devtools::install_github() to install required dependencies: ERROR: dependencies ‘S4Vectors’, ‘MultiAssayExperiment’, ‘Biobase’, ‘SummarizedExperiment’, ‘parody’, ‘ggbiplot’ are not available for package ‘ogttMetrics’ 2. After manual install of the required Bioconductor packages, installation still fails because ggbiplot is not available in any standard repositories but only on GitHub. 3. Installing the package using suggested approach after a manual install of all missing dependencies seems to fail to install the vignette. (Not visible in the listing provided by vignette().) 4. Running the examples provided in the paper produces some errors: QCplots(obasamp) Error in experiments(oc) : object 'obasamp' not found After fixing the command the first run gives: QCplots(obaSamp) ... Error in UseMethod("depth") : no applicable method for 'depth' applied to an object of class "NULL" Oddly enough this works when used later. 5. Additionally, when reading the example from the PDF, the command plot_OGTT_fit contains 'fi' ligature which breaks copy-paste of the command from the PDF. 6. Running "R CMD check" produces notes and a warning, which probably would not be acceptable at the major repositories: * checking for missing documentation entries ... WARNING Undocumented data sets: ‘omnicCG_samp’ ‘omniccG_samp’ ‘omniccg_samp’ All user-level objects in a package should have documentation entries. See chapter ‘Writing R documentation files’ in the ‘Writing R Extensions’ manual. 7. These fairly trivial technical issues aside, I am unsure what is the intended audience of the package and how useful it would be for that audience. The authors present a smooth workflow for analysing pre-packaged data from existing large studies, but instructions for importing new data are limited to one sparsely documented example and it is not immediately obvious how to e.g. compute the minimal models for this example. The vignette contains some code snippets that are likely relevant, but more comments and explanation would be needed. I tried a little but could not get this working easily. In general the vignette would need to be clearer to be useful to new users. 8. Related to the above note, the csvImport format should be documented better. The vignette could contain an example with different time points. A hard-coded default of time points seems difficult for something where there probably is no generally applicable default. 9. The minimal model code contains a number of magic constants with some assumed default values. It would be very good to document with proper references where these come from. It is especially unclear where the constant 420 in the integral in Programming considerations comes from and if that can be safely used for data with a different sampling period. 10. The implications of the piece-wise linear model using a different model before and after 120 min for data with different (either shorter or longer) sampling period and times should be discussed. Can the model be safely applied in these cases? Are there other hidden assumptions that could impact the end users? 11. The unit for BMI in "Application to a cross-over trial" is reported incorrectly (25kg=m^2, units incorrectly in italics). Further suggestions: 12. It is good that the code contains many stopifnot() sanity checks, but more informative error messages suggesting how to fix things would be useful for the end users. 13. The specification of the model might benefit from more consistent notation for derivatives. (Now sometimes d/dt, sometimes G' and X'.) 14. It would be good to include a copyright notice with author and license information to each source file. See https://www.gnu.org/licenses/gpl-howto.html 