The authors present a new R package developed to support the use of DICOM and NIfTI files from the R environment. The authors rightfully discuss the popularity of R and the need to support image processing tasks in this environment. The argument for development of the proposed package, radtools, is that "[...] no existing package makes image metadata conveniently accessible. Extracting image metadata, combining across slices, and converting to useful formats can be prohibitively cumbersome, especially for DICOM". The resulting package is available from CRAN, and this reviewer confirmed its installation and basic functions. The major issues that need to be addressed to make the article sound are the following: Justification of the development of a new package for working with DICOM, or with NIfTI, is not sufficient. No details are provided about how the functionality was tested, and about the capabilities and limitations of the package in terms of supporting specific DICOM objects. Related to 2), no details are provided about how the DICOM files are handled "under the hood", i.e., whether all IO functionality was implemented from scratch, or the package is using some other DICOM libraries. Through the text, the authors reference other R packages for similar tasks, and most notably oro.dicom and oro.nifti 1 . Those packages have been around for quite a long time, are broadly used, based on citations of the corresponding articles, and arguably provide the functionality of the proposed new package (loading data in the aforementioned formats, examination of the attributes, visualization of the images), plus more (e.g., writing of the NIfTI data). DICOM is a complex standard, with a lot of ways information can be stored. For example, there are different methods to encode the content (transfer syntax), different character sets that can be used, private attributes. Therefore, often the quality of a DICOM implementation is defined to a large degree by the data that was used to test the implementation. The quality is also usually improved over time with the usage of the implementation. The proposed package is not accompanied by any details about what types of DICOM objects are supported, what was tested and how. Given it is a new package with a short development and usage history, one has to make a very strong argument for introducing such new tools in presence of existing alternatives. Other suggestions: The discussion of the DICOM objects is an oversimplification, which is reflected in the implementation of the functionality. The standard defines various types of objects that can be serialized as files, but those objects are not limited to images. As an example, DICOM defines Structured Reporting object, which will not have PixelData. The proposed package fails to read such object. The authors can find sample SR objects in the familiar to them TCIA (e.g., see QIN-HEADNECK collection). "smooth" is a subjective qualifier that is redundant in the title and the text. I will be happy to reconsider this article after the authors address the above concerns. But my current opinion is that oro.dicom and oro.nifti set a rather high bar for any new implementation of similar functionality. 