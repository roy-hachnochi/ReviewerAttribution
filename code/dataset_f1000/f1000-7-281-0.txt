The python package seqfam is a collection of genetic association analysis tools, some but not all tailored for familial data. The instructions provided by the authors allow for a successful installation of the seqfam package. Example scripts provided with the package perform the analyses described in the manuscript. This manuscript, however, also raises concerns with these reviewers. Tools performing similar tasks already exist in other computing languages (PLINK/R) and are widely used. The gene dropping and filtering based on pattern of occurrence in families implemented in seqfam differ in some respects from approaches implemented in other packages, which have been thoroughly assessed for their statistical properties. As this is a software manuscript, an assessment of the statistical properties of the seqfam approaches is not required, but we note that it will be very hard to convince a practitioner to use this approach if no consideration of power for various settings is given. Moreover, we are also of the opinion that some of the seqfam tools should not be used as currently proposed. Major concerns: Referring to gene dropping and the application of variant pattern of occurrence rules in families, the authors state in the abstract that they are "unaware of other software which performs these tasks in familial cohorts", but unfortunately missed a somewhat large body of literature. A reasonably thorough review of the literature is imperative for any manuscript. Most applicable in our opinion for testing rare variants are RareIBD (Sul et al. 2016 1 ) which uses the number of affected relatives carrying a rare allele similar to the allele frequency used in seqfam , and GESE (Qiao et al. 2017 2 ), based on the probability of multiple affected relatives sharing a rare variant, which we proposed in a recent manuscript that the authors do cite (Bureau et al. 2014 3 ). Of note, we have since expanded our approach to gene-based analyses, refined the rare variant definition based on haplotypes, and introduced a partial sharing test based on rare variant sharing probabilities for subsets of affected family members (Bureau et al. 2018 4 , posted online after the seqfam manuscript was submitted, so the authors could not be aware of it). Another alternative is testing of co-segregation of variants with disease under a parametric linkage analysis as in the pedigree Variant Annotation, Analysis and Search Tool pVAAST (Hu et al. 2014 5 ). There are also other implementations of variant filtering based on proportions of affected and unaffected carriers, e.g. the R package Mendelian of Broeckx et al. (2015) 6 . The inference of the seqfam gene dropping test depends on knowledge of the variant allele frequencies in the study population. Methods that depend on such knowledge tend to be extremely sensitive to deviations from the truth (see for example the above mentioned Qiao et al 2017 and Bureau et al 2018 papers). In most instances we have only a very rough idea about exact allele frequencies (especially for rare variants) when big population-based studies of said population already have been carried out, or we have no knowledge at all if a new population is investigated. Thus, methods that do not depend on knowledge of allele frequencies are to be preferred, but at a minimum the authors must report the impact of allele frequency misspecification (as for example done in Bureau et al 2018), and the size of the control group from the appropriate population which is needed to obtain reliable allele frequencies for the proposed method (as for example done in the Qiao et al paper) to guide the user. There is no notion of error control due to multiple comparisons in the manuscript. And with the number of variants present even in whole exome sequencing data, the recommended number of iterations of gene dropping (10,000) most likely will be inadequate to estimate the p-values with sufficient precision. For example, even if none of 10,000 iterations yields anything more extreme than observed in the actual data, the upper bound for the 95% confidence interval for the true p-value will be 0.00037 (for example type binom.test(0,10000)$conf in R). Thus, with a couple hundred variants assessed, the upper bound for the confidence interval would not beat the Bonferroni threshold to declare significance. The inference based on so-called "patterns of occurrence in families” (POFs) does not quantify the total evidence for linkage/association per se (see for example the RareIBD paper by Sul et al) but investigates user-chosen patterns instead. This could be powerful if one knew exactly what patterns to look for a priori, but we cannot imagine this ever being the case in practice, nor is any guidance on this offered in the manuscript. The example script involves specifying the pattern of occurrence rule with example families, but in practice family samples contain various family structures, so it is not clear how it generalizes. Why not simply input values for A.carrier.p and AN.carrier.diff? As it stands, it is left to the user to tinker with the vast number of possibilities. In that sense, inference based on these specific patterns should at best be considered secondary analysis. No functionality is provided in seqfam to apply the gene burden test to familial samples. As the authors rightly point out, the test is valid with unrelated subjects. As it stands, users must extract unrelated subjects from familial cohorts outside of seqfam . This function should offer the option to perform selection of unrelated cases from familial cohorts, or otherwise it should be removed from seqfam . The authors should also mention that in many family-based sequencing studies genotypes of founders are unavailable (as for example DNA is not available from family members several generations ago), and quite frequently only distantly related subjects are sequenced. That means that for these studies only a single unrelated subject can be extracted from each family, limiting the scope of the gene burden test substantially. When executing the test program, the p-value of the LR test is identical with or without covariates, so adjustment for covariates does not seem to do anything. The expressions “log-likelihood ratio test p-value with/without covariates” for llr_p and llr_cov_p are ambiguous. In the output, the llr_p test is missing when one of the variant classes is empty, while llr_cov_p is always reported. Is llr_cov_p a test of the covariates? There are also some more minor concerns and questions: For the gene dropping test it is not clear in the manuscript whether the variant frequency is computed only for affected family members or all family members together. The gene_drop.py module would be more useful if it took genotype data as input like the gene_burden.py and pof.py modules and computed the cohort allele frequency for every variant. The authors state that the gene_drop.py module performs gene dropping “for each variant of interest”, but this is misleading, as the gene_drop method takes as argument the frequency of a single variant. Users must write a script to loop over variants in their genotype file (pre-filtered by population allele frequency and possibly other annotations), compute variant frequency in their cohort, and pass it to gene_drop . By contrast, competing packages GESE, RareIBD, pVAAST and our new Bioconductor RVS package process genotype data. They also offer the option to perform analyses at the gene level, while the gene_drop.py module is restricted to single variant analyses. Filtering of variants (e.g. those predicted to be pathogenic) is critical and relies heavily on available annotation. However, this information is largely available only for exomes. Filtering of variants by annotation should be discussed. Is seqfam foremost a package for targeted sequencing studies (i.e. exome sequencing)? If yes, this should be stated. Otherwise, some guidance on application to whole genome sequencing studies should be given. What exactly is the additional value of relatedness.py ? For example, the GENESIS Bioconductor package allows for the fast calculation of genetic relatedness matrices (GRMs), which can easily be subsetted using the cut-offs suggested by the authors. It is unclear whether relatedness.py also updates the pedigrees accordingly (which can be done using kinship2 in R). Also, what happens if founders are found to be related? This should be part of the quality control and considered in the inference. The relatedness.py module could be generalized by allowing input from other kinship computation packages than King. The program for computer cluster job creation can be a useful utility program complementing the seqfam analysis tools, but it has no specific connection to family sequencing studies. It does not deserve to be featured as a main user function in the manuscript, and instead should be mentioned as a utility program. There is no mention of dominant and recessive inheritance patterns, which are often encountered with rare causal variants. The gene dropping statistics is likely better suited for dominant variants, while different POF in families could be defined for dominant and recessive variants. This should be discussed. 