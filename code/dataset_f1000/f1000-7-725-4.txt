The paper entitled " Identifier Mapping in Cytoscape: idmapper " by Adam Treister and Alexander Pico presents a new implementation of id mapping available directly through Cytoscape with no additional configuration. There is a lot of discussion throughout the paper about BridgeDB. It is not clear what the relationship between idmapper and BridgeDB is. It is understood that idmapper is a simplification and alternative of the aforementioned tool but does idmapper rely on BridgeDB? Do they share a codebase? One thing that might be a good addition to the implementation section is a short discussion on the backend. Where are the mappings coming from? Is the app dependent on any online resources or are the mappings static and stored within the Cytoscape instance? This is related to the previous BridgeDB question as given that there is no discussion about the backend I thought maybe the info was coming from BridgeDB and that was the reason it was included. In the implementation section, Table 1, it might be useful to have a column specifying the data source names that the app recognizes. (for example in the table one of the data sources listed is "Uniprot TrEMBL" and later in Case 2 in the command the map.from(RCy3) and source_selection(py2cytoscpae) the db is specified as "Uniprot - TrEMBL" (with a dash)). Given that this is the implementation section it might be good to list the regular expressions that each identifier recognizes (provided that they aren't too messy) and any exceptions they look for. Later on in the case 1 you mention an exception to the basic regular expression behaviour for yeast. Are there more exceptions that the app handles? It is also unclear why the "Code" column is required. Might be nice to separate the data sources that can handle any species and those that are species specific. In the use cases section "The default Species is determined by the previous selection made per network, providing a "smart and sticky" behavior. " It is unclear but the previous selection was? In the use cases section in the specific cases two example use cases are presented, species specific and protein to gene conversions. It would be helpful to list these and other common use cases at the start of the use case section as well. One of the most common use cases being going from non-descriptive identifiers (like entrez gene ids, and ensembl ids) to something more understandable such as species specific IDs (HGNC or MGD, Is it possible to map to proper gene symbols?) In the use case section it is stated that if the ID maps to multiple identifiers there is an option, " Force single ", that when selected the app selects the first result. How are the returned IDs sorted? Is the first match the "best" match, alphabetical, random? In the Cytoscape automation section in the parameters section for the species option all the available mappings are listed but for the mapFrom and mapTo no options are listed. (if the recognized data source name is add to Table 1 you can just reference the table here or if the first column of Table 1 are the recognized names it would be good to reference it here). Also, the parameters listed for Cytoscape automation section are very different from the parameters used in the use cases which can be very confusing. Maybe adding an example using the RCy3 commandsGet option under RCy3 and py2cytoscape examples just showing how the user can use all the parameters as specified using the command directly. Minor comments/questions: In the introduction "Uniprot and various specied-specific sources" should be "Uniprot and various specie s -specific sources" In the implementation section "The app looks at the first ten entries and choose the source" would be better as "The app looks at the first ten entries and choose s the source" In the implementation section - "This number of identifiers iteratively sampled is set by a static variable called N_Iterations . The algorithm for inferring the data source is implemented in IdGuess.java ." - This is a little confusing why this is needed. Is this a parameter the user can control or tweak? In Use cases section - "As such it usage in Cytoscape via" should be "As such it s usage in Cytoscape via" In use case 2 "you may want to translate to gene identifiers" might be better as "you may want to translate protein identifiers (for example: Uniprot-TrEMBL) to gene identifiers" Can idmapper convert a list column? (in the example use case where the network is an enrichment map and each node contains a set of genes as opposed to each node being a gene) What is the resulting column name? What if a column with that name already exists? 