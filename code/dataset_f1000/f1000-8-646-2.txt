In this paper the authors describe the NOCAD toolbox developed for the analysis of some aspects of networks as, for instance, structural controllability and observability. The topic of the paper is not only very interesting but also timely as issues relating to controllability and observability of networks could be fundamental in a number of practical situations. Hence to have a nice set of tools to analyze dynamical networks is welcome. The toolbox described is useful in a specific range of problems. Here we focus on the controllability and observability properties of networks, as prompted by the title. The tools presented focus on structural controllability and observability of linear systems. The assumption of linearity is not mentioned in the abstract. As a matter of fact, the opening phrase of the last paragraph in the introduction should be copied to the abstract. The nonlinear case and other definitions of controllability and observability, such as, dynamical and symbolical are not mentioned in the paper nor are handled by the toolbox. This is an important remark as it is now known that some algorithms underestimate the cardinality of the set of sensor nodes when applied to nonlinear systems. The paper In the second paragraph of the Introduction, the authors mention the importance of “determining the proper driver nodes”. We wonder if the average reader would know what that is. In clarifying this point the authors would like to address first what is “a” proper set of driving nodes (e.g. one that will guarantee full controllability). However, in order to specify “the” proper set, possibly some more detailed measure of controllability should be employed. For instance, suppose two sets of driving nodes S1 and S2, both with the same cardinality, such that the network is fully controllable either from S1 or from S2. Hence S1 is “a” proper set of driving nodes (assuming that by proper the authors are referring to full controllability) and S2 is another one. Now, it could well be that using S1 less energy is required to drive the network from one state x(ti) to another x(tf) when compared to S2. In that case, S1 and S2 are not totally equivalent. Structural controllability and observability are unable on their own to provide this distinction. Following the same vein, we wonder if the average reader of F1000Research would know the distinction of static and dynamic networks. A word about this would be profitable, especially because the toolbox refers mainly to the second class. In some parts of the paper the authors refer to matrix A as the “state transition” matrix. In continuous-time this is incorrect. In discrete-time this is only correct for a transition time of one sampling period. Matrix A is called the “dynamical matrix”. State transition matrix is something else. Relevance to the journal The MS introduction is written in such a way that it instigates interest from the target audience of this journal (mathematical biology). However, the techniques implemented in the toolboxes are usually found around the network science community, which includes several other fields that range from power systems to social networks. To show more coherence to this journal, the authors should provide some example of application on a “real-world network” under a biological context. This is also interesting to show how the results provided by the toolbox can be useful to draw conclusions under a practical context other than a “toy problem” as presented. Background The MS content is not sufficient to understand the techniques implemented in the toolbox. We know that the paper does not aim at providing extensive background, but some could be helpful. A reader coming from a control theory background might expect the toolbox to provide results based on Kalman’s definition of controllability and observability. However, the toolbox is based on Liu and coworker’s maximum matching algorithm which is based, in turn, on Lin’s structural definition (1974) (which is not even mentioned in the MS). Which definition of controllability and observability the toolbox is based on should be crystal clear in the main text and abstract. Moreover, the notions of structural controllability and observability should be presented to the reader and how they interplay with the more well-known notion in Kalman’s sense (e.g. Lin’s definition is only a necessary condition for Kalman’s definition). Although we think that the definitions of controllability and observability should be mentioned on the main text, the authors provide some background on the implemented maximum matching algorithms in the toolbox. This, however, should be mentioned explicitly in the MS. Examples The paper furnishes examples to illustrate some of the features of the new toolbox. The network topology is the same in each example, which facilitates understanding and comparison. In some cases, more discussion would be welcome. For instance, in the last example (Figure 7) not all the indices are clearly defined to the user, for instance the critical nodes are given as x2, x4 and x7. From the context it seems that if any of these nodes is lost, the network would become uncontrollable, but this is not directly stated. In referring to Figure 5 the authors speak in terms of Reachability matrices: Rc and Ro. It is clear from Figure 5 that Rc shows which nodes have a path to node i (the ith column). As for Ro, it seems that we should look row-wise instead of column-wise, is that right? Anyhow, we do not think it is adequate to say that Rc shows which nodes can be controlled from another one. The word “control” is perhaps too general. We would suggest just to say that Rc shows which nodes can be reached from another one. Toolbox The toolbox is subdivided in three modules. The first one, “network mapping module”, implements the maximum matching algorithm (and related modifications) to return a structurally controllable (observable) network with the smallest set of driver (sensor) nodes. This is a welcome feature, especially for a MATLAB environment, which we are unaware of any alternative. The second module, “system characterization module”, provides several graph measures that are available on other MATLAB-based toolboxes, but are indeed useful to assess the network controllability and observability properties of a system. Thus, its presence is justifiable. The third module, “improvements and robustness module”, is a set of functions which specifically implement previous results of the authors (e.g. Refs. 20 1 , 21 2 ). It seems quite specific, but nevertheless the toolbox relevance is justifiable in great part for its module one. The toolbox seems fast and no bugs were found in its implementations as far as the MATLAB environment is concerned. See further comments on some compatibility issues when using Octave. The target audience of the toolbox The toolbox is applicable to any kind of network (graph), be it directed or undirected, weighted or unweighted, and so on. However, although general, the authors should discuss in the MS what are the kinds of networks where a structural analysis of controllability and observability are more useful. For instance, a linearization of a power system model modelled by interconnected Kuramoto oscillators yield a dynamical matrix “A” whose corresponding adjacency graph is not only highly connected but also undirected. Consequently, the toolbox points out that only one driver node is needed to structurally control the network, independently of its size “n”(which is true in this case according to Lin’s definition). However, this does not give insight to the problem since basically any node can be chosen as a driver node, and only one node being sufficient seems quite unrealistic. The question is: For what kind of networks is the structural approach more interesting (and hence the toolbox)? It could be that the toolbox could be extra-helpful in the context of more sparse and directed networks (with higher hierarchy). Some nitpicking: Sometimes it is not clear whether the authors refer to the dynamical matrix “A” or the adjacency matrix “A^T”. We recommend that different nomenclatures be used, such as “A” for the dynamical matrix and “A_{Adj}” for the adjacency matrix. This should be changed in the MS and manual. Regarding the installation of the NOCAD toolbox. We noticed that the NOCAD already comes with a “octave-network-toolbox” folder which does not have all the necessary functions to use Module 2. Thus, we had to download the “octave-network-toolbox-master” folder in Ref. 22 to have access to all needed functions. Is this necessary or is the NOCAD toolbox really missing some functions? Some statements in Section “Use Cases”, Paragraph 5, are redundant with the information already present in Fig. 4. Instead of repeating the same information, it might be more interesting to make some comments on how useful some of these network measures can be to design better and more robust networks from a control and observation point-of-view. There are some issues in the Octave version of this toolbox. For instance, function “heatmaps” has some bugs in Octave but works well in MATLAB. This happens because the function “colormap” from Octave accepts the argument “hot” but not “Hot”. The authors should do a careful review of the Octave toolbox and check for further compatibility issues. 