This article presents the BiocPkgTools package, which provides an R API to the various package metadata that is available mostly in human-readable formats on the https://bioconductor.org/ website. By providing an R API for accessing package metadata, the authors argue that "data mining and value-added functionality such as package searching, text mining, and analytics on packages" may follow. I believe that this package will add value to the Bioconductor community and beyond. It is likely that the package will lower the threshold for doing "data mining" on Bioconductor packages. The reports that are based on these metadata and produced by this package are likely to inspire others to produce other types of reports and interactive tools. Having said, I do think there is room for some immediate improvements to the article, which might also spill over to the package itself. Major: The role of the package: It is not clear whether this package is to be considered a Bioconductor core package or a user-contributed package. That can only be inferred/guessed from authors list and possible from the package name. If it is an official core Bioconductor package (similar to BiocManager) supported and maintained by the Bioconductor Team, then I think it would be of value to make that explicit. This would change the expectation on the package and its long-term support, e.g. will it break or not when the Bioconductor website changes, what should be documented as part of the package and what should be documented on the Bioconductor website., etc. The questions in the following section illustrate this. Description on the metadata: There is no explicit reference to the source data, e.g. is this package using a public or a private Bioconductor Online API to gather the data. Is this API, or URLs official and stable, or is this package meant to play that role? Is there another reference from where one can learn more about how the data is collected? Are data from other Bioconductor mirrors included in the download stats? The download stats do not contain information on the package version, which is mentioned in the package vignette. However, it's not clear whether it is only downloads from the current release branch that are counted or not. For instance, if I download a package for a legacy Bioconductor release version or the current developer version, will that add to the data? Minor/trivial: API: Given the package title 'Collection of simple tools for learning about Bioc Packages' and description, the `biocBuildEmail()` function seems to be an odd-one-out. Typos/spelling: Section 'Introduction': "a open source software" - "an open-source software". Section 'Features and usage': missing "the" in "to expose [the] Bioconductor project". Section 'Features and usage': "software cate[r]gory tags". Section 'Discussion': ... Bioconductor sof[t]ware... Table 1: biocbuildReport - biocBuildReport. Table 1 caption: "all Bioconductor pac[a]kages". Grammar in Section 'Introduction': Should "suggest" be used instead of "suggests" in "The current size and growth of the Bioconductor project suggests"? In addition, `spelling::spell_check_package()` on the package itself reveals several mistakes. Nomenclature: Bioconductor is sometimes referred to as 'bioconductor' (lower case) or just 'bioc' and 'Bioc' (the latter is even used in the package title). Figures and tables: Figure 1: It's not clear what the different parts of this figure are. As I understand it, the left part (the hex logo) represents the package itself, and the middle part (five blocks) represents the "web-accessible resources" that the package queries. What does the table and the edges in the right part represent? Is it meant to illustrate that the package pulls data from 5 different sources and joins them into a single table? The caption also tries to mention "Interactive package exploration is also available" which makes it harder to understand the figure. Maybe it's the ordering of these three parts are confusing. Maybe it would be more clear if the edges from the hex logo to the web resources would be dropped. Maybe it would help if the empty table could be populated with something else than just "..." entries. Alternative, maybe something like this would clarify the flow of the data? Package/examples: Section 'Implementation': "All functions are documented and include examples." Maybe rephrase so it doesn't sound that there are examples for *all* functions, which is not the case. Coding Convention: The package vignette and examples, and the example code snippets in the article, use `a = b` for assignments rather than `a - b` that is the recommended coding style for Bioconductor, df. https://www.bioconductor.org/developers/how-to/coding-style/ . EXAMPLES: The presented output of the `dlstats = biocDownloadStats()` example is outdated; it shows other fields/columns that what the current BiocPkgTools 1.2.0 outputs. In addition to the above, I've identified other package-specific issues that I reported directly to the package's issue tracker ( https://github.com/seandavi/BiocPkgTools/issues/34 ). 