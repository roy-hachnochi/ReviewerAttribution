Thodberg and Sandelin present CAGEfightR, a new Bioconductor package suited for analysis of 5'end oriented datasets, derived from CAGE-seq and similar techniques. Although similar Bioconductor packages exist (icetea, CAGEr, TSRchitect), the greatest strength of CAGEfightR is unique in its ability to call or predict putative enhancers based on the bidirectional transcription initiation signature, thus filling the gap in the current R-based toolkit for CAGE-like data analysis. In addition, using CAGEfightR, hypotheses of enhancer-promoter interactions based on co-expression levels can be easily set and visualised. The package is well-documented, and the step-by-step protocol well written and easy to follow. I only have a few minor comments which could benefit the general reader: The introduction and abstract could state more clearly that CAGE allows TSS mapping of only RNA polymerase II transcripts. Though this is implied through usage of cap-trapping, I would keep in mind that this workflow might be used by general readers not so familiar with TSS-mapping techniques. Considering the advent of technologies that capture RNA polI-RNApolIII transcripts, expected to be much noisier, it would be better to make it as clear as possible. If the authors believe CAGEfightR could be of use on noisier data, from experimental methods based on negative selection (such as TSS-seq), it would be worth testing this and including a few sentences, as this would promote CAGEfightR usage on any TSS mapping technique. I support comparison of existing packages in the form of Table 1; however, I would expand this comparison to include unique features that perhaps CAGEfightR does not have - e.g. icetea and TSRchitect support paired-end data, CAGEr has TSS-shifting discovery function and implemented G-correction function to remove mismatching G’s from 5’ends of reads. Common problem with CAGE and CAGE-like data which is obtained through reverse transcription, is the addition of a G, or so called G-bias upstream of the true transcription start site. It would be beneficial for general readers as this is a step-by-step protocol to discuss how to generate BigWig files from fastq files, and how to address the G-bias problem/i.e. remove the mismatching G’s at the 5’end of the reads. The authors prefer to use the term TSS regions or TSSs in place of tag clusters as aggregated CTSSs, and even TSSs as a broader term for CTSS while CTSS is just a CAGE-supported TSS. This becomes very confusing for a general reader, especially page 36: “Now we look at differential TSS usage at two-levels: Whether an individual TSS shows differential TSS usage (TSS-level) or whether a gene show differential TSS usage in any way (gene-level). First we can look at individual TSSs (TSS-level differential TSS usage).” I would suggest usage of CTSS for individual CAGE-supported TSSs, tag cluster - for an aggregate of individual CTSSs based on distance based clustering or whatever methodology, and tag cluster can be interchangeably used with promoter where needed. Interquartile range should probably be interquantile range as it spans middle 10-90th percentile of the signal. It would also be beneficial to explain why is it used instead of all signal (more robust measure that excludes outliers and is less sensitive to sequencing depth etc). I am a bit surprised the authors use such harsh filtering step before plotting distributions of IQR (Figure 5, TPM =10), I would assume that the problem is in tag clusters which seem sharp - single bp, and therefore it would perhaps be beneficial to add a more stringent filtering step only to single bp tag clusters to be retained only if highly expressed (= 5 TPM), while a lower threshold can be applied on broad tag clusters as multiple CTSS within a tag cluster give more certainty that it is not just noise. 