In this paper, the authors present a cookbook for analyzing CAGE data mainly through their own Bioconductor package, CAGEfightR, applied to sample data, which were analyzed and published by their group previously. By following the given source codes, readers will be able to learn how they can obtain various kinds of information rather easily. Thus, I feel that this publication will be useful for those who want to learn how to analyze CAGE data quickly. On the other hand, it will not tell us how to solve our deeper problems in research. I know that this is out of the scope of this tutorial but I can’t help but feeling, for example, how the given procedure for reducing batch effects can be justified (see below). Thus, here are some of my suggestions for its further improvement: In our realistic situations, the EDA approach is quite important. In this sense, I appreciate their demonstration on how to remove batch effects from the expression data between various samples, using ComBat (Figs. 9 and 11). However, most researchers will not be satisfied with just seeing that the PC1 has become to separate positive and negative groups; it is natural that they would like to confirm if the correction was enough or not; they would also wish to see what the new PC2 as well as the old PC1 represent. Therefore, I recommend the authors to extend Table 2 for characterizing each sample from various features (e.g., experimental conditions and data size) and to use such features for the interpretation. More discussion and/or additional attempts to clarify the most probable main reason for the initial batch effects would be desirable. Similarly, since the first author does not seem to have been a member of the previous analysis, it is interesting to see the consistency between the two studies. For example, the observation that inflammation-related genes were activated seems to be the same in both analyses. Then, are the genes with differential TSSs likely to explain the phenomenon? How much are the detected enhancers contributing to the differential expression? Do these enhancers (or newly activated TSSs) share any over-represented motifs? From the same reason, I recommend the authors to avoid using (ugly) chromosomal coordinates to represent genes/promoters/enhancers, wherever possible. It would be great if the authors can show that they could perform deeper analyses this time. For the convenience of wider readers, it might be useful to show the way how to obtain BigWig files from rawer data (BAM or fastq, if possible). Similarly, a summary table of used tools (except CAGEfightR), containing their input file information as well as their main purposes might be useful. Also, it might be useful if there is a summary on what CAGEfightR can do/cannot do. For example, is it possible to combine different sources of CAGE data with this workflow? One of my students tried to follow the workflow. At first, she failed to install some of the packages. It was because the version of R she used was R3.5. Thus, this point should be clearly noted. In addition, she reports that to run the code “Fit and shrink DE model”, the installation of “statmod” and “BiasedUrn” was necessary. Perhaps, some additional information on how to setup initial environment would be useful for beginners. As a cookbook, it is desirable that users can find their necessary items more easily (via a table of contents with clearer headers, perhaps?). There seems to be some confusion on the versions used: As for the mouse genome sequence, (1) both mm9 and mm10 are used. (2) Why didn’t they use the latest version of JASPAR (Jaspar2018)? The manuscript seems to contain many typos. Here are some that we found (there are likely to be more): (1)This is workflow is a case study on (2) CAGE dusters (3) can be speed up (4) novel TSSs are expresse d (5) to try infer (6 )this is a just a very quick (7) The returned GRanges contains the the location (8) going from clustering, to spatial analyses to differential expression. 