In "An environment for sustainable research software in Germany and beyond: current state, open challenges, and call for action" the authors identify challenges for research software sustainability in Germany and beyond. They examine the current state of research software sustainability and challenges in motivating sustainable research software development, selection criteria for funding, personnel, funding, infrastructure, and legal aspects, and offer recommendations for addressing these challenges. These sections are accompanied and with a story using a fictional character Kim which helps to relate these aspects to typical career stages of a research software engineer. The article is thoroughly researched, well-written, and offers an excellent overview of the challenges when building an environment for sustainable research software. Most of the discussed challenges and recommendations carry beyond Germany and are relevant and transferable to other countries. Below I give few (minor) suggestions for consideration when improving the manuscript. Regarding the list of challenges under "Why sustainable research software in the first place?" (pages 5 and 6): Infrastructure issues: One design choice that often limits the use or usability of local infrastructure resources is that they are often bound to institutional user accounts and thus limit collaboration possibilities with collaborators in other institutions and countries. On the other hand, pooling of infrastructure resources which could enable collaboration across organizations can be limited by lack of authentication and authorization infrastructure (AAI) or legal constraints. Later in the paper the authors indeed mention AAI (page 12) but this could already be pointed out and connected earlier. Legal issues: Not only licensing is an issue but legal constraints or uncertainty about legal boundaries and identity federation can also limit the deployment of infrastructure services. Often the deployment and operation of infrastructure services is given to technical teams who may lack the legal support or expertise to clarify legal and privacy terms for the storage of data and processing of data. Funding issues: The challenge is not only that funding is scarce but also that it does not align well with pricing models of cloud infrastructure providers. It can be easier for research groups to spend a larger chunk of the budget towards the end of a year for hardware compared to pay possibly relatively modest monthly fees for a cloud service, which however may not fit into the budget forms. These budget constraints may also limit the possibility of pooling resources and sharing them with other research groups. Software cloud infrastructure is often not considered at all in the proposal. There is also a resistance among some of my research colleagues to pay 20-50 USD/ month for an infrastructure service which is sometimes solved by reinventing the service locally "for free". Another mismatch between traditional funding models and support of software which "must continue to exist" to be sustainable (page 5), is the experience that it can take months or years until the software is picked up by other groups and contributions and questions start to roll in. But by that time the funding of the project stopped, the developer (team) may have already moved on to other positions and projects, and may not have the time to react and help, even though they still may have interest and the knowledge. Our traditional funding models consider the software to be "done" by the end of the project. Selection criteria for "How to decide which software to sustain?" (page 9): The authors mention "usage and impact", "software quality", as well as "maturity". But I would like to see also "openness and transparency" among these. The reason is that we can expect the research community to adapt to these or any metrics and we will over time observe what we measure. Any set of metrics could be criticized as to some extent being arbitrary but the advantage of including "openness and transparency" is that the community as whole would benefit from such a metric [Enrico Glerean, "Responsible conduct of research and questionable research practices", presentation, slide 47 1 ]. Regarding "Who sustains research software?": The authors discuss the lack of recognition and awareness, as well as lack of career opportunities. It is also about respect and I was happy to see the sentence: "Not all researchers that think of themselves as RSEs pursue a faculty position as their main career goal." I have experienced that RSEs are sometimes regarded as those who somehow "failed" to obtain a faculty position whereas many RSEs have chosen this position over a faculty position because it was a better fit for their career goals. This misunderstanding can lead to a lack of respect towards this position and this career choice and can lead to excellent personnel leaving the academic environment towards commercial employment, possibly not primarily for financial reasons but sometimes to be more respected and recognized. Archiving and software preservation (page 13: The authors mention Docker but also Singularity should be mentioned as a tool since it is getting traction in particular on many-user systems such as higher performance computing clusters. Legal aspects (page 14): Re-licensing is mentioned in the story box and the text starts by pointing out that licensing is often not considered early enough in the project. Indeed re-licensing later in the project can be not only legally, but also organizationally very tricky, in particular for projects which developed over many years and involved many contributors in different organizations. This could be pointed out in the text as additional motivation to consider these very early in the project. I very much like the recommendation of providing a legal help desk for research groups to avoid the problem that out of uncertainty and fear of making a legal mistake some research groups end up not choosing any license at all which may limit further reuse of the software. The manuscript presents a decision tree for contributors (Figure 1) and also discusses contributor license agreements. It could be useful to point out that without clear policies or legal help desks, individuals or organizations may be hesitant to contribute to a project because they may not feel confident having enough knowledge or authority to sign such agreements and too many legal steps and question can also raise the barrier to contribute, in particular for smaller projects. Also here clear guidelines and a support desk can help removing these barriers. 