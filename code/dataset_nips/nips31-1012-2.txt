This paper introduces a way of doing Bayesian optimization over neural network architectures. The core of the method is a new distance measure that the authors introduced to measure similarities between different architectures. Given this new distance measure, one could then define a 'kernel' which could be used in a traditional way to perform Bayesian optimization.  This work is novel and quite impressive. The experimental results backs up the claim of the paper. The paper is also well-written.   I, however, have a few questions for the authors: 1. How does the EA algorithm used in the paper compare to other evolution based methods like: https://arxiv.org/pdf/1802.01548.pdf. 2. Can the proposed approach be used in conjunction with population based training in order to reduce overall compute time. 3. How would a pre-defined distance function compare to a learned distance function by optimizing the marginal likelihood. Can this approach be combined with learning?