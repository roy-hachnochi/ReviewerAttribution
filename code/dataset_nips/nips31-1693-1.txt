The paper 'Probabilistic Matrix Factorization for Automated Machine Learning' proposes to use a Gaussian process latent variable (GPLV) model together with the expected improvement criterion to perform algorithm selection from a finite set of machine learning pipelines by transferring knowledge from previously evaluated datasets. GPLV is fitted on a large set of meta datasets via stochastic gradient descent, and the latent variables describing the different machine learning algorithms are then used inside a Gaussian process to predict the performance of a known, but not yet evaluated configuration on a new dataset (given that there are a few observations already). In a comparison against Auto-sklearn, Random Search, 2x Random Search, 4x Random Search and factorized multi-layer perceptrons the paper demonstrates that the proposed method is indeed capable of selecting algorithms which perform better than the algorithms selected by the competitors on a large set of 100 datasets.  Novely:  The idea of using non-linear matrix factorization for Bayesian optimization is novel, as well as its application to Automated Machine Learning.   Clarity:  The paper is written very clearly and easy to understand. However, the authors should not use references like [12] as nouns, but rather write 'Malitsky and O'Sullivan (2014)'.  Correctness:  The paper appears to be correct except for a few very minor things which should be rather easy to fix.   * The paper misses a discussion of 'Selecting Classification Algorithms with Active Testing' (Leite et al., 2012), which tackles the problem of selecting an algorithm from a set of algorithms given function evaluations on the same algorithms on a large meta dataset. While the proposed paper uses pipelines as algorithms in contrast to Leite et al. (2012), I do not think that this inhibits the applicability of active testing as a competitor.  * In the 2nd paragraph the authors might want to mention 'Learning Hyperparameter Optimization Initializations' by Wistuba et al., which is the most advanced method to warm-start Bayesian optimization. * Section 3.3, shouldn't it be \bm{x}_m instead of \bm{X}_m to highligh the fact that these are vectors, not matrices? * Section 4.1, the definition of balanced accuracy appears to be incorrect. The balanced accuracy is the average of the class-wise accuracy (see [6]).  Methodology:  The paper uses a scalable and probabilistic method for continuous algorithm selection which is interesting and novel. The limitation to a fixed set of machine learning pipelines is well motivated and should only hurt mildly in practice.  * The biggest methodological drawback is the fact that the paper uses a total of 42000 * 464 * 0.79 or 42000 * 464 * 0.1 previous function evaluations to make the system work. This is quite a lot and might hamper the practical usefulness of the proposed method. It would be great if the authors would study the impact of increasing the sparsity of the observation matrix to a level which is realistic in practice (for example 200 as 200 runs are conducted in the experiments). * Currently, the paper presents the usefulness of the model on a single benchmark. It would be great if the authors could run their method on a different benchmark, too, such as the ones given by Schilling et al. (2015) for which the required data for the proposed method is available online. * This is not relevant for the rebuttal, but would be interesting if the paper is accepted: how do the different methods compare in the long run, for example after 500 or 1000 function evaluations?  Further:  * Is the fmlp implementation the original implementation of [20]?  Overall, the paper is well-written and proposes a novel method which is of interest to the AutoML community and should be accepted.  Minor: * arg min is typeset in a suboptimal way on the first page (it is better on the 2nd). * line 50, it seems there should be the word 'hyperparameter' before the bracket * line 49, I suggest to write 'the hyperparameter search dimensions' to make it clear what dimensions are discussed here. * When presetnig two methods next to each other, one legend should be sufficient (for example in Figure 3).   Comments after the rebuttal: Dear authors, thank you very much for the answers. I am looking forward to seeing bullet point #2 and bullet point #3 being addressed, either in a NIPS publication or a resubmission. I do not see a reason to change my score as answers to my points are deferred to the future.