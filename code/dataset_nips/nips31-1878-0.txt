This work extends the ProbLog language and uses the distribution of grounded facts estimated by the ProbLog to train neural networks, which is represented as neural predicates in the ProbLog. Meanwhile, the DeepProbLog framework is able to learn ProbLog parameters and deep neural networks at the same time. The experimental results show that the DeepProbLog can perform joint probabilistic logical reasoning and neural network inference on some simple tasks. Combining perception and symbolic reasoning is an important challenge for AI and machine learning. Different to most of the existing works, this work does not make one side subsumes the other (e.g. emulating logical inference with differentiable programs).  Instead, the DeepProbLog handles perception and reasoning with neural nets and logic programs separately.  Following are my major questions: 1. The paper says that the DeepProbLog is able to perform program induction (in experiments T3, T4, T5). However, the experiments (T1-T5) and the supplementary materials show that only neural predicates are learned from the data, while the ProbLog programs are fixed as pre-defined background knowledge; the experiment T6 learns the parameters of probabilistic facts.  Is it possible for DeepProbLog to learn logic program (i.e. the logic rules)? 2. My major concern is about the scalability of DeepProbLog. Before calculating the gradients, the learning process of DeepProbLog is based on a grounding procedure, which may produce a large number of weighted logical facts. Will the scale of task affect the learning performance heavily? The experiments of combining logical reasoning and deep learning are conducted on relatively small tasks (digits of lengths ranging from 1 to 3), how would DeepProbLog perform if it is applied on domains with longer digits? Can this framework be extended to a more complex perceptual domain? 3. Finally, although this paper has covered a broad range of related works, I would like to invite the authors to comment on some other related works that may have missed by the authors. In particular, a recent paper that trains deep neural network and learns first-order logic rules jointly: Wang-Zhou Dai, Qiu-Ling Xu, Yang Yu, Zhi-Hua Zhou: Tunneling Neural Perception and Logic Reasoning through Abductive Learning. CoRR abs/1802.01173 (2018) (https://arxiv.org/abs/1802.01173) I think its motivation and techniques are very close to this work, the authors should consider comparing against or relating their method to this work. Works on Bayesian Programming by Josh Tenenbaum also learns human understandable probabilistic programs and subsymbolic perception models (although not neural nets) at the same time, which should be related to DeepProbLog as well. Minor questions: 1. The presentation of the experimental results could be improved, e.g., use task notation (T3, T4) in Table 1. Results of T5 is hidden in the text, it would be better if include them in a table. 2. For task T3-T5, are the inputs to neural predicates MNIST images? 3. The ProbLog codes in supplementary materials are confusing, please include more explanations to make it clearer.  ============ After reading the rebuttal, I think the authors still have a little over claim about the contribution. "Using ProbLog to train neural predicates written in a template" is not equal to "program induction".