Main Idea This paper analyzes a novel setting of interactive learning where the user gives a discriminative feature as feedback in addition to the labels. The setting is quite simple: we suppose data points form m clusters, where each cluster is pure in its label. The discriminative feature feedback is defined as the feature that differentiate two clusters. The paper shows that under this setting all possible classifiers can be represented as a certain kind of DNF, and gives an algorithm with regret at most m^2. Comments Overall, the paper is written nicely and easy to follow. However I am a bit concerned about its contribution in terms of theoretical results: The setting here seems quite simplified and resulting algorithm is not practical for most interested applications. E.g., in the Siri example in section 1, the feedback of human for why he likes the movie might be of many reasons, and the resulting feature space will be very large and sparse (and therefore there will be a large number of clusters). In this case it would be prohibitive to make up to m^2 mistakes. It is therefore important to analyze cases where (1) clusters are not pure, (2) human are not perfect, and (3) features are continuous. Minor comments  1. It will be interesting to know some lower bounds of a general algorithm in this setting.  2. Line 179: It should be "total number of conjunction terms [in] F_{y,i} is m"  Quality  The paper is well written and the analysis seems complete. Clarity The paper is mostly clear.  Originality The paper is original. Significance The paper analyzes the important problem of learning with discriminative features. However, the setting seems too restricted and simplified. --Update-- Although the authors argue that their algorithm can work under even an infinite number of features, it is not shown that how the number of groups behaves in such settings. The paper can be more influential if, e.g., the authors can related the number of groups to sparsity conditions and/or logarithm of # features. I'm therefore not changing my review score. --update 2-- After seeing discussions I would raise my score by 1 in this situation.