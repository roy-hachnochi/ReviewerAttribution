Post-rebuttal: I thank the authors for the informative rebuttal and apologize for overlooking some details. Considering the rebuttal, I think the paper is rather on the accept side.  ---  The paper proposes two modifications to end-to-end disparity estimation pipelines: bottleneck matching module and “sub-pixel MAP” approach to computing the disparity from a predicted distribution over disparities. The method is evaluated on FlyingThings3D and KITTI’12 and ’15 datasets. The first modification reduces the computational requirements (in particular, memory). The second one improves the performance.   Pros: 1) The modifications are simple and seem efficient. I have not seen these in previous works, although I must admit I am not intimately familiar with the details of loss functions of all recent disparity estimation works. 2) The second contribution (“sub-pixel MAP”) is evaluated quite thoroughly and provides improvement relative to a simpler SoftArgmin-based alternative. 3) The method’s performance on FlyingThings3D is significantly better than prior published work, on KITTI - roughly on par with prior published work. 4) The paper is written quite clearly.  Cons: 1) Basically, the key contribution of the paper is “sub-pixel MAP” and “sub-pixel cross-entropy” loss. The first is smoothed argmax. The second is cross-entropy loss where the target delta-function is smoothed with a Laplacian. These are reasonable engineering decisions, but they do not necessarily offer much generally relevant scientific insight. 2) The experimental results are good, but on KITTI the method is not clearly outperforming existing methods, for instance it’s close to GC-NET (ICCV 2017). On FlyingThings3D the advantage is much more visible, but FlyingThings3D is not a real-world dataset, so the results there have somewhat smaller weight. 3) Some aspects of the experiments are confusing:   a) lines 181-186 mention ignoring large disparities in evaluation and argue that this is made to be compatible with PSM. However, PSM was not officially published at the time of submission, so does not serve as an actual baseline: actual baselines are prior published methods. The comparison should be fair with respect to those, but is it? If not, this is a problem. Ideally, both numbers can be reported: ignoring or not ignoring large disparities.   b) What is the relation between Figure 5 and Table 5? In Figure 5 Sub-pixel cross-entropy is much better than L1 in terms of 3PE, reaching roughly a value of 3. In Table 5 it has 3.80 3PE and the difference with L1 seems somewhat smaller. Why is this? 4) The “bottleneck matching module” is almost not discussed and not evaluated. How much benefit exactly does it bring? Does it affect the performance? It is nice that it allows training with larger images, but more details are needed. 5) Writing is sloppy at times (proofreading would help). In particular:   a) It seems there is some confusion between argmin and argmax in the method description: the “baseline” approach is referred to as SoftArgmin, while the illustration and the formulas for the proposed method show argmax. This is probably because of some slight variations in the formulation, but would be nice to make this consistent.   b) Training details are missing, such as the used optimizer, the learning rate, the duration of training, etc. This makes the results unreproducible.  To conclude, the paper describes two improvements to end-to-end disparity estimation systems which allow to improve the performance and reduce the computational load. The improvements seem to work well, but they are quite minor and incremental, so it is unclear if they will be of interest to the NIPS audience. I am in a somewhat borderline mode. 