The authors propose algorithms for online convex optimization where the feasible solution set is speficifed by convex functions g_i's as S = {x | g_i(x) <= 0 for all i}, aiming at not only minimizing the regret, but also minimizing the cumulative violation of constraints of the form \sum_{t=1}^T ([g_i(x_t)]_+)^2 or \sum_{t=1}^T [g_i(x_t)]_+ for all i, where [a]_+ = max{0,a}. The authors claim that these results improve existing constraint-violation bounds, which bound just the sum \sum_{t=1}^T g_i(x_t). The authors also give an O(log T) regret bound with O(\sqrt{T log T}) violation when the loss functions are strongly convex. Probably, this is the first result of O(log T) regret in this setting.  The result (in Section 3.2) for strongly convex loss functions are nice, although the algorithm proposed is a natural variant of Algorithm 1 with the idea from [8] taken into consideration.  However, I am afraid that the results for convex loss functions (i.e., the main part of the paper) seem to be derived by the existing methods by just redefining g_i's as    g_i(x) =  [g_i(x)]_+, which induces the same feasible set S. Note that the function [g_i(x)]_+ is convex and L-Lipschitz whenever the function g_i(x) is. Moreover, we can further redefine g_i's as    g_i(x) = c g_i(x) for a sufficently small constant c > 0, so that g_i(x) <= 1. This also preserves the convexity and the Lipschitzness. So we can assume w.l.o.g. that g_i's are defined in this way. Then, we have ([g_i(x)]_+)^2 <= g_i(x), and so the bound obtained on the squared violation \sum_t ([g_i(x)]_+)^2 is meaningless.  Another concern is that it seems that the time horizon T is given to the algorithm, whereas in the previous work, T is not given. If the algorithm knows T, then we could set g_i(x) = o(1/T) by redefining g_i's as, say, g_i(x) = (1/T^2) g_i(x). So, I'm afraid that if T is known, then it would be meaningless to discuess the trade-off between the regret and the amount of constraint violation. 