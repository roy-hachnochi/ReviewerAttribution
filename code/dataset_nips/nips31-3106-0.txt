A method for learning deep policies from data recorded in demonstrations is introduced. The method uses exponentially weighted learning that can learn policies from data generated by another policy The proposed approach is interesting and well presented. it opens the possibilities for future work, more specifically to RL, as stated in the conclusions.  Theat would be even more interesting than this presented imitation learning scheme, however the paper gives the introduction, background and discussion for that future work.  How is generated the data for the HFO environment?  Why  is not used PG, PGIS in the experiments with Torcs and king of Glory?  I suggest to specify in Table 1 that B=0.0 is the case of IL.    Since the approach is considered Imitation Learning. I consider sensitivity analysis (like the carried out for HFO in Fig 1) of noisy data very important, because most of the time that is the case with the Demonstrations. I suggest to include it for the Torcs and king of Glory environments.  I found very troublesome that in section 6.3 the Table 2  shows results of EWIL1, EWIL2, IL2, and IL2, however it is never mentioned what are the difference in those settings between the case 1 and 2, i.e. that does not contribute anything. I consider the section 6.3 can be eliminated since  the results are not illustrating something richer than: EWIL is somehow better than IL. If it had comparisons with other methods and also varying parameters like section 6.1 that would be better.  Similarly to the previous comment, experiments with Torcs could have shown more interesting observations, so those results are contributing very little. Additionally, it lacks of conclusions about the results, based only on that table, to me it seems that playing with that parameter is worthless since the best score is with the highest value of B=1. Does it always happen for all the learning problems?. Does it have any disadvantage to set B=1? Again more results and analysis could have been taken with those environments used in the experiments. 