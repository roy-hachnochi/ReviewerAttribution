This work proposes an approach to model the output structure inside the neural network to be optimized and treats the prediction output as an "intermediate" layer, which is further transformed in order to model any global interactions between sub-parts of the structured output. This paper is heavily motivated by the idea behind Structured Prediction Energy Networks(SPENs), but is different mainly in implementation. While SPENs rely on making the output space continuous in order to be able to differentiate wrt output to estimate an approximate maximum scoring output under current parametrization and then define a loss on this estimate for estimating the parameters via backprop; this paper in contrast proposes a lagrangian relaxation (and a further LP relaxation) based procedure that poses loss augmented inference as a relaxed discrete optimization and uses it to compute a margin loss that is used for training the weights of the network. They perform experiments on three tasks comparing to "Unary" models and "DeepStruct" (fixed unary + learned pairwise) models and showing improvements.  My main concern is that more details are required for differentiability of the inference procedure. Going from eq 4 to 5 for example involves a relaxation of a discrete objective, which makes it very similar to SPENs as they rely on continuous relaxations as well. Is \hat{x} explicitly identified? How is it identified from the dual variables \mu, \lambda, y yielded by algorithm 1? It seems like \hat{x} in the primal problem is important so that the loss L(x,\hat{x}) can be computed as well. How are you incorporating the loss into the inference procedure? Are their any assumptions on the loss function for tractable/practical inference? I couldn't find such details in the paper. This detail is also important because it is important to identify if there are any discontinuous operations in the inference procedure which would not be amenable for backpropagation. SPENs pay careful attention to the differentiability of the whole procedure for end-to-end backpropagation and other work (Goyal et al.,2018) on beam search aware training of neural models also proposes continuous relaxation of the beam search procedure to make end-to-end backpropagation possible. With a discontinuous inference procedure, the optimization of neural network parameters would be blind to training signal from the inference procedure. From the text in the paper, I am not sure how this issue is being addressed in the proposed approach. Also, I couldn't find "multilabel classification" numbers in the paper. Am I missing something? For DeepStruct model, why are the pretrained unary potentials fixed? Previous work has shown that finetuning (or further training wrt the unary potentials) is helpful. This is important because this might lead to a stronger baseline to compare against. Overall, I liked the motivation behind the problem and the proposed approach and experiemnts seem sound. However, some important details are missing for a more thorough assessment of the paper and the baselines could be stronger.