This is nice theoretical work that establishes a relationship between the architecture of a fully connected ReLU network (namely, depth and width of its layers), and the early behavior of the gradient descent training. This early behavior in particular considers the probability of having an extreme case of exploding or vanishing gradients for random initialization of the network and shows that the variance of gradients in a fully connected ReLU net is exponential in the sum of the reciprocals of the hidden layer widths and not dependent on the biases and weights.  The main strength of this work is that it provides an understanding of how architecture choices impact the training stability in non asymptotic settings (unlike previous works that discussed practically infinite layer widths). The preceding discussion suggests that to avoid the EVGP (in the annealed or quenched senses 159 described above) in deep feed-forward networks with ReLU activations. The authors state that it is best to let hidden layers grow as a function of the depth. However, two points that could be improved are the following:  (1) The work right now is purely theoretical, without any empirical example or evidence. It would be good to add some example/s demonstrating the applicability of the presented theorems for tuning the architecture of a network, especially when balanced against other problem-related criteria. (2) The paper focuses on a specific, somewhat oversimplified, network architecture (i.e., feed forward, fully connected, ReLU-based networks) How do the results relate to other architectures that were proposed - the authors mention in passing that the result does not apply, for example. to convolutional or recurrent networks, but still some further discussion about this point and the impact of such design choices on the presented bounds would be useful for the readers.  The paper is clear and well written. 