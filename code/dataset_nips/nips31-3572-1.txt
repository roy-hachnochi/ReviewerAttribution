The main idea of this submission follows in line with Amos et al.'s OptNet architecture, where a numerical (often iterative) routine is formulated in a differentiable manner with respect to its inputs. In this case, the optimization routine is an LCP solver, which is commonly used for solving for equations of motion, subject to friction and collision, in rigid body dynamics.  Forward prediction using the differentiable LCP solver can be performed in a latent space, allowing rigid-body prediction from images.  Strengths: - The paper is well-written, and I appreciated the literature overview of model-based RL and intuitive physics and differentiable optimization. kudos to the author's writing ability!  - The use of an LCP solver to infer mass from interactions is clever. - I am surprised that the system works on a discrete-time system like Breakout  Weaknesses: - Regarding novelty, I would like to see a comparison of the proposed method with simply using Mujoco's solver derivatives instead, which could conceivably be dropped into a neural network as well http://www.mujoco.org/book/programming.html#saDerivative and applied using the chain rule (some work required to wrap the C++ interface into a Pytorch layer, but I suspect it would yield a similar result).  Questions: - To what extent can the rigid-body assumptions of LCP be relaxed, to afford better adaptation to model-free learning or real-world data (which does not conform well to LCP assumptions?) - My understanding is that rigid contact dynamics with nonlinear complementarity constraints are not invertible, and yet the LCP solver presented here has derivatives. Is there some relaxation going on here similar to the one proposed in Todorov '11 and Drumwright & Shell '09? 