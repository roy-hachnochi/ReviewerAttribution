This paper proposed a distributed algorithm for a multi-player game of resource allocation. The algorithm repeats three phases: exploration phase, GoT phase, and exploitation phase.   The paper is easy to read. I don't have time to check all the details. But the considered the game is interesting itself, and the algorithm is intuitive to some extent. However, the bound log^2 hides a lot of factors (as seen in Eq.(23)), which makes the reader less easier to understand the bound more deeply. For example, how is the bound dependent on the \Delta, or (J1-J2)/N defined in Lemma 1? As I can see, if (J1-J2)/N is very small (compared to 1/sqrt(T)), the regret bound can become totally vacuous because one can never ensure Eq.(12) hold with high probability. Then what is the regret in this case? Note that in the traditional N=1 case, we can always get the regret bound of min{logT/Delta, sqrt{T*logT}}. So I think to make the analysis more complete, the author should also try to get some bound when Eq. (12) cannot be totally ensured.   I find the game setting itself to be interesting, and I'm eager to see more following works in this direction.   Other comments: - Proposition 1: should use \Omega notation for a lower bound instead of big O 