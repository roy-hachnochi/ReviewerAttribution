This paper deals with combining quantization with decentralized SGD in order to design algorithms which work well in networks with both high latency and low bandwidth. The authors propose two extensions of an existing decentralized SGD algorithm where the model updates are quantized, and analyze their convergence guarantees. Some experiments illustrate the approaches.  The problem tackled in this paper, namely how to combine decentralization and quantization, seems interesting from a theoretical viewpoint. This is motivated by learning on networks with both high latency and low bandwidth. Can the authors give some concrete examples of machine learning problems/use-cases where one has these conditions combined?  The effect of quantization is studied through high-level assumptions on the schemes, such as unbiasedness and independence across nodes and time (Assumption 1.6), low variance (Assumption 2), and a quantity related to a signal-to-noise ratio. This has the merit of generality, as it abstracts away the details of the particular quantization scheme.  The authors present two algorithms to achieve the same goal. My main concern about this paper is that I do not see any argument in favor of Algorithm 1 compared to Algorithm 2. As stated by the authors, the convergence of Algorithm 1 is conditioned upon a hard assumption on the quantization strength, suggesting that it diverges if the quantization is too aggressive (and this is actually confirmed in the experiments). On the other hand, the convergence rate of Algorithm 2 smoothly degrades with the quantization strength, which is natural (the quantization noise should eventually dominate) and much nicer. Again this is confirmed numerically. In the end, all results (theoretical and empirical) show that Algorithm 2 is better, which makes Algorithm 1 useless. This raises the question of whether Algorithm 1 should be presented at all.  I am also not fully convinced by the experiments: - The authors skip the comparison to a centralized but quantized algorithm, which they justify by the fact that "the difference between decentralized 8bits and centralized 8bits would be similar to the original decentralized training paper". However the centralized version may withstand quantization better as it averages more updates, which would make the proposed algorithms less appealing. - Experiments with a network of only 8 nodes is a bit disappointing, as an important motivation for decentralized algorithms is to scale to large networks. Having both low bandwidth and high latency on such a small network may also seem unlikely. It would be much more convincing if the authors provided evidence that their algorithm still performs well on a much larger network (this can be simulated if needed).  Other comments: - Algorithms 1-2 should probably have a for loop over the workers - What is the quantization scheme used in the experiments? - In Section 5, there are many occurrences of the term "Allblackuce" (which I guess refers to Allreduce)