The paper introduce a coordinate descent algorithm with an adaptive sampling Ã  la Gauss-Southwell. Based on a descent lemma that quantifies the decay of the objective function when a coordinate is selected, the authors propose the "max_r" strategy that iteratively choose the coordinate that yields to the largest decrease. The paper follows recent developments on coordinate descent notably (Csiba et al 2015), (Nutini et al 2015), (Perekrestenko et al 2017) with an improved convergence bounds.  As for previous adaptive sampling, the proposed method require a computational complexity equivalent to a full gradient descent which can be prohibitive in large scale optimization problem. To overcome this issue, the authors propose to learn the best coordinate by approximating the "max_r" strategy. The idea is to delay the updates of the duality gap (needed for max_r) along epochs and sample the coordinates by mixing uniform selection and steepest descent selection (with approximated marginal decrease). This attenuates the computational complexity while maintaining fast convergence.   The proposed method is novel and simple, it will be beneficial to community of optimization for machine learning. It applies for a large class of problem and shows interesting direction for adaptive sampling techniques.  In remark 2, showing that max_r coincide with Gauss-Southwell for (one particular example !) Ridge regularization is not sufficient to conclude that it is a "generalization". So this claims should be removed or properly justified.  The proof of theorem 1 suggest that selecting the coordinate with largest marginal gap decrease is sufficient. Hence if max_r outperform ada_gap, then the complexity bound in theorem 1 is not tight and does not reflect the actual performance.  In theorem 2, eps_p(x_0) is not needed here.  In section 2.4, the mix of algorithm and main text is pretty unpleasant for reading.  Should be nice to include more experiment of the effect of c(E, epsilon) at least in the appendix.  In definition 3, the first inequality should be a strict inequality.  There is a missing term "-eps_p(x^t)" in equation (21) ?