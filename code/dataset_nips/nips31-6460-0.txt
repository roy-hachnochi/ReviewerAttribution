The paper defines a new type of reinforcement learning algorithm, which takes account of the imperfections of the function approximator and tries to obtain the best policy available given these imperfections rather than assuming no imperfections exist, thus avoiding pathologies arising when we assume a flawed approximate is perfect.  The quality of this paper is really good. It introduces a new type of RL algorithm, which is clearly motivated and solid.  The weaker points are:  1. The complexity of the defined algorithm seems too high for it to be immediately applicable to interesting problems. However, the authors honestly acknowledge this and provide a bound saying that, even though costly, the algorithm is still polynomial as opposed to exponential, as might have initially been expected given the doubling property of the equation below line 191.  2. The authors do not study the kind of task where I think their ideas would have the most use: tasks where we have a lot of computation when the policy is being prepared but very little when it is executed (for example because it has to be embedded in a cheap hardware item). The proposed algorithm is super-well suited for this because the learning is expensive put the obtained policy is very small / has a low degree of complexity.  The potential significance of the paper is large (although significant obstacles remain to make this practical). It is definitely a good match for NIPS.  The clarity of the language and the exposition of the math is very good.  On the balance, I feel that this paper would clearly benefit the NIPS community despite the mentioned shortcomings. At the end of the day, the paper introduces genuinely novel concepts and I strongly believe that it would be unfair to demand an empirical evaluation at the same scale as papers which make relatively minor adjustments to existing techniques.    I hope more follow-up work is published exploring this type of ideas in a more practical setting, but the current paper is already so packed that it would be disproportionate to expect such work to be included in this submission. Moreover, I hope that he authors will also submit this work (or an extension) to a journal and possibly spend some more time outlining the intuitions, possibly with a visual walk-through showing how the proposed algorithm partitions the parameter space for some toy problem. 