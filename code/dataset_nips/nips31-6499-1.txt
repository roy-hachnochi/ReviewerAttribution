This paper studies how to improve the test performance of an already trained model for image recognition, without retraining or fine-tuning. The motivation is based on an empirical observation that the layers close to the output may contain independent, easily extractable class-relevant information of target images. Thus, this paper extends a simple cache model, first published in the reference [3], to the image recognition tasks, and discusses several insights about the proposed image recognition model. The empirical studies on three classic datasets demonstrate the effectiveness and robustness of the proposed method.  Positive points: 1. The proposed method succeeds to exploit the information from the layers close to the output, through a simple cache technique, to improve the performance and robustness of image recognition models. 2. The analyses about the adversarial experiment and regularizing effect are insightful.  Negative points: 1. The originality of the proposed method, to some extent, is limited. 2. The empirical observation about the superiority of high-level features is not new, since several existing studies have found it and took advantage of it.  [1] Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network [2] Perceptual Losses for Real-Time Style Transfer and Super-Resolution  3. It hard to choose the number of layers to concatenate the activations. 4. The analysis, i.e., the discussion of superficial similarities, about why the layers close to the output contain class-relevant information, is insufficient and lacks depth. It would be better to analyze this empirical finding deeper. 5. Although the adversarial experiment, to some extent, shows some generalization performance, the persuasion is insufficient. In my view, the success of the cache technique mainly attributes to the transferability of the intrinsic discriminative spaces between training and testing data. Hence, whether this method can generalize to the case, where the training and testing data come from different datasets, is important and remains unknown.    Suggestions: 1. The scheme of the cache model is not clear enough. It is better to improve it. 2. Typos: in the bracket of line 199, (ResNet32-Cache3; black) seems to be (ResNet32-CacheOnly; black). 