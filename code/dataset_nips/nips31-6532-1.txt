This paper addresses the question of learning to learn (LTL) in the situation where the datasets come in streams. The model assumes a common mean vector that has to be learning throughout the process. To this end, each training dataset is split into a training and a test dataset. The dataset is used to learn the common mean, using a stochastic gradient method. Theoretical results on the excess risk are provided.  The paper is well-written: - organization is good - depiction of the algorithm is precise and concise - theoretical guarantees are provided - empirical evaluation (even though more results could be provided) is provided.  This work raises three questions: - instead of a stochastic gradient method, wouldn't have it been possible to implement a passive-aggressive (Crammer and Singer) scheme. It seems it might be appropriate to carry over the idea of having a common mean between tasks, and it could have helped provide regret-like results on the training performance (in short, just to be clearer, such a strategy would consist in seeing each dataset as a training instance); - also: what about using fast Loo error estimation for the stochastic gradient strategy in the present ridge-regression-case? This would help having an algorithm independent of $r$; - how is it difficult to state the results for other kinds of inner training procedures, e.g. SVM?  Overall, a very interesting paper.   Typos ==== will be useD sacrify -> sacrifice returns always -> always returns an important aspect -> an important feature bring similar -> brings similar in a such case -> in such a case which will addressed -> which will be addressed As regards the term -> Regarding the term where we K_\rho -> where K_\rho investing empirically -> empirically investing we have presentED which highlightS   