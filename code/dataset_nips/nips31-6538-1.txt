Edit: I read the author response. The additions and clarifications they promise to make further strengthen my opinion that this is a very good submission that will be of value to the community.   The work presents an analysis of the impact of the hyperparameters in stochastic gradient (SG) optimization on the excess risk of empirical risk minimization problems using random features to approximately minimize least squares regression problems in a Hilbert space. This is part of a recent stream of work at NIPS level conferences that has investigated the generalization error of least squares problems in Hilbert spaces using dimensionality reduction techniques (Nystrom, uniform sampling, random features, etc.).  To my knowledge the work is novel in that it characterizes the dependence of the excess risk on specific hyperparameters of SG -- iterations, step-size, mini-batch size--- in addition to the number of random features used. Prior work that I have seen focused more on the impact of the number of random features than the impact of SG using the random features. All the works I would have expected to seen referenced are there.  Strengths: - a clean characterization of the excess risk of SG using random features in terms of specific hyperparameters of the algorithm - the proof sketch is straightforward and gives the reader insight into how the effects of the different hyperparameters were teased out - the paper is well-written in that it gets across the results and the ideas of the analysis in a way that should be understandable to a NIPS audience (as opposed to say COLT), and the authors clearly state in Corollaries 1 and 2 what concrete hyperparameter choices are suggested by their theory - a short experimental section shows that the theory bears out in practice  Weakness: - would like to have seen a discussion of how these results related to the lower bounds on kernel learning using low-rank approximation given in "On the Complexity of Learning with Kernels". - In Assumption 5, the operator L is undefined. Should that be C?