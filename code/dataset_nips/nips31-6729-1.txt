 The paper "The Sparse Manifold Transform" discusses a combination of sparse coding, SFA-like learning and manifold learning to represent sensory data (with a focus on images). The approach is motivated, derived and finally tested on video.   Evaluation  The paper addresses important research questions and a challenging task. The big picture question is how complex sensory stimuli can be represented using low complexity representation for the important causes of the data. The general idea is that data such as videos are ultimately caused by regular movements of usually just a few objects. If such regularities can be captured, reasoning about the data is becoming easy which makes an approach as developed here very worthy to follow. Sparse coding is traditionally seen as a first processing step capturing low-level image components such as edges, so I also think that its use here makes sense. Sparse coding is then coupled to a manifold representation to realize a low level representation of objects. This is usually difficult by itself and the generalization using sparse coding also makes sense, I believe. Finally, using temporal information also makes sense. In general, this approach is a combination of different ideas, and I like that the used concepts are not just combined in successive order but that they are coupled through changed objectives and learned simultaneously on data. To realize the whole combined approach such that it can be applied to real data and produces results is an achievement. Having said so, it is difficult to come up with a quantitative evaluation, and this difficulty is connected to how this approach shall be evaluated in comparison with other approaches. As there are different types of learning concepts involved, and as for each learning concept different alternatives could be used, a number of design decisions had to be made here. It is simply very difficult to say which decision has what kind of impact on the actual learning and results. To start with the first concept. On the one hand, a standard sparse coding approach is used, i.e., the objective in supplement eq 1 corresponds to a Laplace prior (L_1 sparsity). On the other hand, the paper emphasises the encoding of objects as discrete elements a several points. Wouldn't a sparse coding objective be more suitable that does reflect such a desired discreteness (e.g. Henniges et al., LVA 2010, Titsias, NIPS 2011, Sheikh, Lucke, NIPS 2016 or any deterministic L_0 sparse coding approach)? The main merit here is the combination of a sparse coding objective with manifold learning (eq. 2 of supplement), but there isn't anything specific to L_1 sparse coding that is conceptually important here. On the other hand, other sprase objectives may aimpact the spherical projection operator used. Shouldn't there be a hard-sparse selection here anyway before \Phi is applied? Close to zero basis functions would be amplified otherwise (but I may miss something here).  Regarding manifold embeddings, the linearity assumption of points moving on the manifold makes sense for smooth changes, but especially occlusions mentioned in lines 124-125 do result in potentially strong non-linearities (that are btw also difficult to model with standard manifolds). A new object may suddenly appear. How would your approach react? Connected to this and sparse coding, the linearity assumption of standard sparse coding may be regarded as one reason for the sparse coefficients being non-smooth. After all, sparse coding adds and substracts basis functions with the objective of reconstruction. If occlusions play a role, alternatives to linear approaches (e.g. sigmoid belief nets or explicit occlusion models (Jojic and Frey CVPR 2001; Williams and Titsias Neural Comp 2004; Bornschein et al. PLOS 2013) may make sparse coding activities much smoother and easier to track using pooling. Regarding pooling, I think it is nice that pooling is learned from data (which is a difference to some but not all contributions mentioned below).  Regarding the numerical experiments, as stated before, a difficulty is the comparison. Many approaches have addressed the problem of learning more structured representation not least deep neural network approaches. Considering the results of Fig. 5, I was missing discussions with some other relevant contributions. Also, the fields that look very localized may actually be caused by the here implicitly assumed binary units, but I am not sure (compare fields in Bornschein et al., 2013). Curved fields are nice but they are also not necessarily a result of hierarchical coding (Olshausen SPIE 2013, Sheikh, Lucke, NIPS 2016 and refs therein). What I was maybe missing most, though, were discussions of hierarchical coding and pooling, e.g., as suggested by Hinton et al., ICANN 2011, or Sabour et al., NIPS 2017. Also style and content models (e.g., Tenenbaum & Freeman, Neural Comp. 2000, Berkes et al., PLOS 2009) discuss results closely related to Fig. 3. In general, could you think of any quantitative evaluation of your approach, e.g., compared to these contributions?     In summary, I think addressing of a very challenging task has to be appreciated, and the simultaneous learning of manifold learning and sparsity with feature slowness on video is challenging. The evaluation of the approach and comparison with others is very difficult.   UPDATE (after author responses): Answers to my questions were given partly. I had hoped for a suggestion of a more concrete metric for comparison with competing work, though. My concern, therefore, remains what to make of the approach especially in comparison with others. I agree with two other reviewers that the paper is difficult to follow but it also addresses a topic which is difficult to present. Still, the authors should be very motivated to further clarify their approach. I am not more confident or more convinced after the response. Promised additional discussion of previously work will be important, clarification / discussion of binary latents vs. continuous latents, and the other discussed points etc. 