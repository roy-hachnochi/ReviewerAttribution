This paper provides an efficient method for certifying the robustness of a neural network to various forms of perturbations. This approach is much more efficient than AI^2 (the prior state of the art, to the best of my knowledge) on standard fully-connected neural networks, and is effective even with convolutions when AI^2 is not. This approach is effective on neural networks with tens of thousands of neurons, a significant improvement on prior work.  This paper further extends prior work by allowing both sigmoid and tanh units. While these are not extensively used in neural networks, it is still a worthwhile contribution to provide this analysis.  Given this efficiency, I wonder why the authors only evaluate on 10 different starting input images. This seems like a good place to try and evaluate on many more (100? maybe more?) samples to produces more significant results. Similarly, for some figures (e.g., Figure 3) it would be useful to continue the plot further to the right. At what point does the robustness begin to decrease? eps=0.085 is very small on MNIST, when typically the adversarial example literature uses eps=0.3. It does not look like runtime increases substantially as eps is increased, it would be interesting to see if this holds true for larger budgets.  Figure 4(c) would be especially interesting. Does the 400_200_100_100 network continue to take longer to run when the verification bound increases? Given that it reaches 0% accuracy at eps=0.024, does the runtime increase for larger epsilon values?  This paper could be further improved by giving upper bounds on robustness with PGD (or other optimization-based attacks). If the certifications in this paper are lower bounds, an upper bound through an optimization based attack would provide evidence that the lower bounds were precise --- in particular, it may even be the case that it is 100% precise in some cases (where the lower bound and upper bounds might give the same results).  For example, that analysis would help discover if the tanh networks are the least robust, or if it is just that they are the hardest to prove robustness bounds for. (The 400-200-100-100 network, for example, can give 0% certified robustness at eps=.008 -- is this because the robustness is lower or just that it is harder to prove properties on). 