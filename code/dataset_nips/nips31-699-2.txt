This paper considers graphs that are partitioned into two separate components called a "core" (C) and a "fringe" (F), where all edges have at least one endpoint in C. The partitioning is supposed to be unknown, and the goal of the paper is to come up with an algorithm that recovers it.  Strong aspects of the paper are:  - The paper first performs a theoretical analysis, deriving various conditions for the set C and upper and lower bounds for its size under various assumptions. Based on the theory, it then proposes an algorithm for recovering C, and shows that this algorithm outperforms various baselines.  - The theoretical analysis is sound and intuitive. The theory nicely and naturally leads to an algorithm that is indeed surprisingly simple and performs well empirically.   - The paper is very well written, the motivation is clearly explained, the theoretical results are clearly structured and nicely followable. Most of the theoretical results are relatively straightforward with a few exceptions (Lemma 3 and Theorem 2).   - The considered problem is a special case of "core-periphery" structure identification in networks (e.g. Zhang et al, 2015, Phys Review E; their ref 61). The contribution rests on the assumption that no links at all exist between nodes in the periphery. This assumption leads to an elegant algorithm that can convincingly outperform others when the assumption holds. The techniques are potentially of interest for other researchers in the networks field.  I have three main criticisms:  - The restriction to no edges in F seems very restrictive and I am not convinced by the given examples that this is a problem that would be of interest in the real world. In the used datasets, the authors dropped the available labels of C and F. In the motivation given in the beginning, they say that in some applications these labels are lost, but can they point to any real datasets that have this property or even better, analyze one and present the results?   - It is perhaps not too surprising that the proposed algorithm outperforms baseline given that the baseline methods were developed for a more general scenario and thus do not take advantage of the absence of edges in F. It would have been interesting to see how the proposed algorithm would fare on more general community structure detection problems such as the blog link data shown in Zhang et al, 2015, Phys Review E. Would the algorithm still provide a useful approximation in this case, or would it break down completely?  - Finally, I wonder if NIPS is the appropriate avenue for this research area. Networks has traditionally not been a topic with a very strong presence at NIPS as far as I am aware, and more appropriate venues that would might to mind would be KDD, ICDM. A possible sign of mismatch is that the paper does not cite any paper from NIPS or any other ML/AI venue. Perhaps the authors can explain in their rebuttal why they chose this specific conference?   Minor points: - I would have liked to see more justification for the choice of the number of clusters to be generated (fixed here at 300). Is this important for performance? Under which circumstances would I need to set this higher or lower?  - It was hard to compare the numbers in Table 2 due to different units, can this be standardized to one unit or alternatively, can at least the fastest algorithm be highlighted in each row?   = After author response =  The authors have presented some new data that addresses my second criticism and since no other reviewer had any doubts about suitability for NIPS, I retract that criticism as well. The authors cite personal communications as evidence for the importance of the considered setting, which still does not convince me entirely. However, I am satisfied with the response overall and will revise my score up by 1. 