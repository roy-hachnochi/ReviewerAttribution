I appreciate the contribution of introducing the new problem framework of graph exploration. The proposed GNN-based RL algorithm is also well designed and reasonable.  My major concerns are as follows.   1) It is unclear why the proposed framework is better for specific tasks and whether this graph exploration framework, in general, is expressive enough to adapt to task-specific characteristics. Initially, when I’ve seen the title with the term “transferable”, I’ve expected that the graph exploration is transferable between different `tasks’. However, the authors use the term “transferable” in the sense that their trained agent works for `unseen’ graphs in the same task.  In this sense, I think many task-specific methods in the literature would also be transferable. If so, I am not sure what is the advantage of the proposed graph exploration network than a task-specific method. E.g., does the other maze exploration or fuzzing methods generalize to unseen data worse than the proposed one? I think this needs to be clearly justified.   2) The baselines are too simple and no comparison with any state-of-the-art method for each task is provided. For maze exploration, there are many recent methods, (e.g., Mirowski et al., Learning to navigate in complex environments, ICLR 2017), but this paper does not compare with them. For fuzzing, the paper only compares with random strategy and an expert-designed heuristics even though there are many methods for fuzzing (e.g, Godefroid et al, Learn&Fuzz: Machine Learning for Input Fuzzing, AES 2017, and Liu et al, DeepFuzz: Automatic Generation of Syntax Valid C Programs for Fuzz Testing, AAAI 2019).   3) Minor comments  - For equation (4), if you use the padding of one extra bit c_t(v), it would be more helpful to add this term explicitly.  - How do you initialize node embedding for program testing and maze exploration? Is it done in the same way for each dataset?  - In maze exploration, it would be more informative to show the detailed trajectory of each agent so that we understand how the network explores the maze. 