*Originality* This paper introduces a new approach for language-based image retrieval in a multi-turn setting. The method is built on Visual Genome, using image region descriptions as placeholders for sentences in a multi-turn setting. The concept of updating an external memory has been explored extensively in the past (another relevant paper is Kiddon et al. 2016, neural checklist models). Dialogue in image tasks has been explored previously, so my understanding is the main contribution of this paper is a new way of encoding dialogue turns. Distinguishing the paper’s contribution with memory networks (with respect to the sentence encoding) would be important to add to the paper. Another related paper is Visual Dialog (Das et al. 2017).   *Quality* Most experiments were conducted on Visual Genome, which was not built for this task. While some conclusions (such as learning capacity with different encoders) could perhaps be drawn using this data, conclusions about the general task or how humans would interact with a retrieval system are less supported by the experiments on Visual Genome. Claims about HCI should be cited (e.g., “users naturally underspecify in their queries by referring to local regions of the target image”, L104).   Critical experimental details are missing (or I couldn’t find them). For example,   (1) How is the order of region descriptions chosen during training or testing?  (2) How is the subset of 10 region descriptions chosen?  (3) Why are images with fewer than 10 region captions removed for training, but during human evaluation, dialogues can reach only up to 5 turns?  (4) From what set of images are images retrieved -- the set of all image in the dataset, or just the testing set? Is it different during human evaluation?  (5) How are images scored for retrieval -- is inference run over all images in the candidate set and the highest returned? Is the set of candidate images narrowed as more sentences are provided?  (6) Are result in Figure 3 shown on the development or testing set?  There seems to be a correlation between the number of placeholder vectors and performance (as shown in Figure 3). Accordingly, there are a few experiments that I would like to see:  . Using the same number of placeholder vectors as sentences. (Based on how placeholders are sampled, this would be equivalent to applying a transformation on each sentence encoding). . Instead of using placeholder vectors, just directly computing attention with the sentence encodings and the image regions. Is learning the extra parameters for encoding into a placeholder necessary? I suppose it makes the attention computation more cost-effective for very long dialogues, but if dialogues range around 5-10 turns, then it doesn’t seem justified. . Similarly, the logic that always samples an empty placeholder while one exists seems unnecessary -- why not just allow the model to sample whichever placeholder it wants? It seems like sampling empty ones first could cause weird ordering effects (because the first N may not use the same placeholder).  Some comments/questions about the human evaluation:  . Why limit up to five turns? If evaluating with a 5 x 256 model, this just means each of their utterances is encoded in a different placeholder. . Did you evaluate the language used by the humans and how it differed from the Visual Genome data? I imagine it would be quite different because it’s highly conditioned on the distractors that appear in the first few queries. . How many queries are required (on average) before the target image is in the top N? . Human evaluation shouldn’t be done on the test set of the data -- this is a form of peeking.  *Clarity* The paper was easy to read. Some details are missing (see above section), but the contribution is clear.   Some small points: . L20: “We focus in” → “We focus on” . L45: “vector .” → “vector.” . L48--L50: This sentence should be split into two. . Is the FasterCNN updated during training? . The notation in Section 3.4 is confusing. \phi is commonly used for word embeddings, not RNNs. . L166: “computational” → “computationally” . Using two different notations for max in Eq 4 is confusing. . HRED stands for hierarchical recurrent encoder-decoder. This method doesn’t have a decoder. . Table 1 is very difficult to read with so many slashes.  *Significance*   The proposed method is easy to understand and could be applied to other tasks using sequential language understanding for vision (e.g., Visual Dialogue). However, using Visual Genome as a placeholder for the real task of image retrieval is not convincing (it was not annotated with this task in mind, and sampling a subset of region descriptions in no specific order means this method was not evaluated with ordering information in mind, as would be present in an image retrieval system). Also, important questions remain about the evaluation (missing baselines and the candidate set for retrieval).   *Update after review* Thanks for including details about the inference and evaluation details in the rebuttal. These should be added to the main paper. After reading the rebuttal, my main concerns are that (1) Because the data wasn't created originally for a sequential language understanding task, it's hard to draw conclusions about the proposed method for such a task, though using human evaluation is a great way to do it. (2) Some choices about the architecture (e.g., learning placeholders rather than doing simple dot-product attention with encoded captions) should be motivated through more detailed experiments as described earlier in my review.