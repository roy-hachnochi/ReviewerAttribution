In recent years, several papers have employed deep learning methods to decode various classes of codes (turbo codes, linear codes, polar codes). This work focuses on turbo codes, and has the more ambitious goal of providing joint training of the decoder and the encoder (which means that the resulting code will not be a turbo code in the traditional sense). The authors borrow some ideas from the turbo coding literature (e.g., interleaving) and use CNNs to design decoder and encoder (as opposed to RNNs used in several other papers). The proposed TurboAE algorithm achieves performance which is comparable to state-of-the-art codes (see Figure 1). This is quite impressive, even though the code length is quite short (i.e. 100 bits). In fairness, this is common issue as deep learning techniques tend not to scale well with the block length. The authors also consider non-AWGN channels and compare with the original turbo decoder and with DeepTurbo proposed in [26].  Overall, the paper is interesting, clear and well-written. I have the feeling that the authors emphasize a bit too much their results (which are quite good anyway), and some detailed comments are in the 'Improvements' section.  