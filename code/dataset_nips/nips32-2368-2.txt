It is hard to say what constitutes a good prediction, and loss functions matter more than model architecture development now that we have neural networks and auto-differentiation. All the losses we use are some proxies inspired by loss functions in ML that were developed because they were easy to optimize a model for. So adding new, intuitively appealing loss function is significant.  The paper is well written and enjoyable to read.  The evaluation is fairly comprehensive and looks soundly executed. For completeness, you might use STDL as an evaluation loss as well. Are you able to summarize generic conclusions about features of the time series that will be the individual losses train well vs poorly? E.g. "MSE rounds sharp level changes".  It puzzles me why people consider ECG a time series prediction task. It is commonly used as a dataset but in what real world scenario would you want to predict it?  How fast is the computation? The dynamic programming looks pretty complex. You only give the speedup - what is the absolute number? Is its evaluation of the loss a bottleneck in the learning?  How do you set \delta s in your experiments?