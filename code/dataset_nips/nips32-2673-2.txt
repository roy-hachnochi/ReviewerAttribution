The paper studies a version of multi-armed bandit in which when arm i is pulled, it cannot be pulled again for at least d_i rounds.  While the problem itself is interesting, I have some doubts about the results. My most important concern is about the lower bound for the offline version of the problem. I am suspicious about the reduction from this problem, named MAXREWARD, to another problem called PINWHEEL SCHEDULING (the reduction presented in the appendix). Here is why: an instance of PINWHEEL SCHEDULING turns to an instance of MAXREWARD with size \Pi_i d_i = d_1 * ... * d_k (because T has to be this large in order to distinguish YES cases from NO cases). On the other hand, it is not hard to see PINWHEEL SCHEDULING does admit a dynamic programming algorithm whose running time is polynomial in \Pi_i d_i = d_1 * ... * d_k. Therefore I am not sure what conclusion this reduction is supposed to make.  ---- UPDATE AFTER REBUTTAL: Here is more details on my comment and my confusion regarding the lower bound:  For the lower bound, a decision version of the problem in the following form is studied: "Given an instance of the The PINWHEEL SCHEDULING and T, is the optimal reward T?" and it is assumed that T is given in binary format so a "poly running time" is expected to be poly in log(T). ----  Also there are minor issues in the paper which makes it a bit hard to read. One of them is in the definition of \tau_{i, t}. Is it defined correctly? I guess the authors actually meant to replace min_{t' >= 1} with max_{t'<= t}