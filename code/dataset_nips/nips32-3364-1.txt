Label noise learning is a hot topic now as the datasets grow bigger and the labels are becoming noisier. How to learn the optimal classifier w.r.t. the clean data from the noisy data is challenging. To guarantee to learn the optimal classifier, many robust learning methods have been proposed. To the best of my knowledge, they all need the information of the transition matrix, learning which could be challenging. This paper proposes the first loss function that is robust to instance-independent label noise without knowing the transition matrix. Thus, making a significant contribution to the community.  My main concern is that once the latent true variable Y is not identifiable, e.g., there exists another latent variable Y', which also has a transition relationship with the noisy label. How to find the optimal classifier for Y? This case generally exists when the transition matrix is not identifiable.  From the experiments, we find that the proposed method doesn't perform well when the noise rate is low. Intuitively, the proposed method should work well for clean data as well. The authors are suggested to do some comparisons on clean data and explain why it doesn't well well on small noise.  === After seeing the rebuttal, my main concern hasn’t been well addressed. The current paper has an issue that it is unclear if the latent true label Y is identifiable in the proposed method. It seems that if there is a latent variable Y’ which also has a constant transition matrix with the noisy labels. The proposed method cannot distinguish Y and Y’. The authors response that the proposed method will learn something more informative about X. This is reasonable, but it also implies that if Y’ is more informative about X. The proposed method will lead to wrong predictions. For example, in the case that instances potentially have multiple classes and there are constant transition relationships among them, it may be very hard for the proposed method to distinguish them. It seems necessary to illustrate if the proposed method works well on clean data. If it did not work well on the clean data, it may be caused by the reason that the proposed method finds a Y’ instead of Y. I am worrying that the authors avoid learning the transition matrix but were introducing a harder problem of identifying Y.