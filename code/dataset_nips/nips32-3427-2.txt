This paper proposes a Bayesian approach to learn a SPN model from data. Unlike the existing methods that jointly estimate the computational graph and scope function, the paper separates the two tasks, and claims that the first task is similar to neural network structure validation. The paper assumes the graph is given, then parameterizes the scope function and SPN distribution so that a Bayesian generative model can both sample SPN parameters and determine the scope function. Then a Gibbs sampling algorithm is developed for the posterior inference, which in turn result in the learned SPN model and parameters. The experiments verified the effectiveness of the proposed approach.   Overall, this is a piece of interesting and solid work. The ideas of using induced trees to parameterize SPN distribution and using regional graphs to parameterize the scope function are amazing, because they render a Bayesian model formulation that can include both the SPN distribution parameters and the scope function. My major concern is another task --- the identification of the computational graph. Although it is reasonable to separate the two tasks, the paper seems to overlook the difficulty or importance of the structure identification. In fact, identifying appropriate NN structure is non-trivial and require massive computational resources. The authors are referred to the recent work of AutoML. Listed are my detailed concerns and suggestions.  (1) Although the authors claim that they decompose the SPN model learning into the two tasks, they never give a detailed solution of the first task, i.e., computational graph identification. They always assume the graph is given. A natural problem is, once the scope function is learned for a particular graph, what is the next step?  Do we have an iterative procedure to switch to a better graph, and then learn the scope function again? Although the first step is not the major focus, the paper should at least discuss possible methods.  (2)  Since there have already been prior work that jointly learn the graph and scope function, it seems unfair to fix the graph structure during the evaluation. The authors probably can embed the scope function learning approach into an existing framework that can search for graphs and then compare with the existing approaches. Then the comparison results will be much more convincing.   