This paper introduces a new search approach to learn data augmentation policies for image recognition tasks. The key difference between this paper and AutoAugment is that the augmentation policy is applied to the validation set rather than the training set during the augmentation policy learning phase. This modification removes the needs of repeated weight training of child models, thus improves the search efficiency.   The paper is clearly written. The experiments seem sound and are similar in setup to previous work. The performances are comparable to AutoAugment on three image classification datasets (ImageNet, CIFAR, and SVHN). Regarding the results on ImageNet, it would be interesting to see the performances of the proposed method on other types of neural network architectures (e.g., DenseNet, MobileNet, ShuffleNet, EfficientNet, etc.).  However, I have a concern about the proposed method. It is not clear to me why augmentation policies, which are optimized to match the density of two training data splits, can improve the generalization performances.  To my understanding, applying strong data augmentation will increase the distance between augmented dataset and original dataset, which however is very useful when training large neural networks. In Equation 2, the model parameters are trained on the original training (not augmented) images and the augmentation policies are applied to the validation images. However, when using learned augmentation policies, the model parameters are trained on augmented training images and the validation set is not augmented. This inconsistency looks weird to me. I am not sure whether the good results come from the proposed method or the good search space. I hope the authors can provide more theoretical or empirical analysis, explaining how the proposed method leads to better generalization ability.  [Post-Author-Feedback-Response] I increase the sore from 5 to 6 based on the author feedback. But I think more thorough comparisons between FAA and random baselines must be provided in the revision.