# Basic idea is cool I think the basic idea is to do stuff like this:  def compute_differentiable_quantile(Xs, quant, epsilon, n_iterations, metric):     P = sinkorn(Xs, [0,1,2 ..., len(Xs)], epsilon, n_iterations,metric)      return (Xs @ P) [int(quant * (len(Xs)-1))]      Note that this is differentiable w.r.t X.  What's more, as long as the metric is translation-invariant, it turns out you get exact quantile computation in the limit as epsilon ->0 and n_iterations -> infinity.  I suppose as epsilon -> infinity you'll get the mean of the Xs.    This is cool.  I don't think you needed to motivate it as much as you did, first describing the exact OT and proving the connection to quantiles and then loosening it to sinkorn.  Instead, if you just write the procedure down and then say "hey look this is a quantile when epsilon -> 0" and prove in the appendix, everyone will be just as happy.  I actually found the motivation distracting, I'm afraid.  Anyway, idea is cool.    # A question left undiscussed So your set \mathbb{O}_n seems really important.  In the exact OT case I see that it doesn't matter, but in Sinkhorn land it seems like your choice could be really important.   Maybe I'm missing something, but I'd like to see this discussed.   # Results Not great, but that's ok.  This thing seems so general that its got to have a use somewhere.    