- The authors present an algorithm (based on an analysis of the pseudoinverse of a graph after randomly perturbing edges in the graph) that can simultaneously be used for graph sparsification and graph coarsening.    - Is it clear that $w_e\Omega_e$ will not equal 1 to ensure finiteness in (4)?  - I am having trouble following the claim made in Eq. (6).  The $M_e$ are fixed matrices with $M_e=w_e (l_i-l_j)(l_i-l_j)^T$ where $l_i$ is the $i$-th column of $L^{\dagger}_G$ and $e=(i,j)$.  The randomness lies with the $f$ distributions   (which can be assumed uncorrelated) or are you saying it is reasonable to assume a generative process on $G$ that would lead to uncorrelated $M_e$?  - In Figure 1, $\beta_{1d}=\emptyset$ for nodes.  How are we to interpret the split in the intermediate range in this case?  - Can you provide details (either a citation or a derivation in the appendix) of the claim that $d_h(L_G \vec x, L_{\tilde{G}}\vec x)\leq\log(1+\epsilon)$ implies that $\tilde{G}$ is an $\epsilon$-approximation of $G$.   This is a key property of the proposed hyperbolic metric, as it ties the classical work to the present experimental comparisons.  - When you introduce the problem of graph coarsening, you list a bevy of citations from the literature [9, 10, 3, 11, 12, 13, 14], yet your experiments for graph coarsening only compare against [47] (a paper from 1998) and [24] (an unpublished arXiv preprint).  It is hard to gauge if these are sufficient; I understand that more comparisons are included in the appendix (to [24] again and to another unpublished arXiv preprint).  Comparing against more algorithms would be helpful in gauging the effectiveness of your approach.  - Similarly, for graph sparsification you compare your approach against [20], an algorithm from 2011.  Comparisons against more (and more recent) approaches would be helpful in gauging the effectiveness of your approach. Figure 3 in the Appendix (referenced as evidence that sparsification preserves the spectrum) shows that coarsening preserves the spectrum.  - It is not clear why Algorithm 2, as presented, avoids the pitfalls of Algorithm 1 (graph becomes disconnected, contraction issues)?  Your appendix section A.2 seems to suggest that a non-uniform sampling of $s$ (an independent edge set) is sufficient to ensure no disconnectedness/pitfalls, yet in your main algorithm you have $s$ being selected uniformly-at-random?    - Small typos: Equation (11): I believe there is a "-" missing in the numerator of the third term.