Originality: It is a neat idea to introduce a different proximal term of the continuous variable w, which may help to improve the efficiency of the algorithm. This idea in a high level works in a similar way as that of screening elements and keeping a small active set, e.g. the one adopted in reference [25]. Other analysis and discussion seem to be a natural generalization of previous works, e.g., [15]. Therefore, I think the originality is around the borderline.   Quality: The submission is technically sound. Regarding the novel term on w, the authors provide a relatively complete discussion on how to handle it, although some techniques are overlapping with those adopted in the previous work [15].   Clarity: The clarity of this work is not very good. As a reader that is very familiar with the important references, I have to read through Section 3 several times to get a clear outline of how the overall algorithm works and where the potential improvement comes from. The problem is caused by the fact that there are too many formulations including discrete, continuous ones and different algorithms for different setting proposed by the authors. I think it would be difficult for a non-expert/practitioner to follow the idea clearly.   Significance: I think the significance of the work is not extraordinary but okay. The idea is good. Although it is a small idea and kind of overlapping other ideas at a high level, it is good to see in this particular setting and indeed improves the algorithms.  ---After reading the rebuttal --- I agree with other reviewers that the contribution of this work is solid although the change is slight. However, there is one additional minor comment: Since the RBCD methods proposed in [17,18] hold theoretical characterization of the number of iterations needed while the cyclic BCD used here does not hold the similar result (also questioned by Reviewer 4), why not directly use RBCD?   A table to list the whole algorithm can be rather helpful. Please provide the evaluation over the cases with more complexity potential functions as promised.   