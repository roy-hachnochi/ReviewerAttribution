**SUMMARY * Goal: Extend the naturalness of hyperbolic spaces for encoding tree- and graph-structured data, observed with standard NNs, to Graph NNs. * Model innovation: Given: a graph and a Riemannian manifold M. Each node of the graph is annotated by a point of M. For all nodes in the graph, [carry out the standard linear operations for aggregating messages from neighboring nodes] in the tangent space T_x of the same point x on the manifold: the origin. This means the point of M annotating a node needs to be mapped to a vector in T_x, which is done by M's log map. The resulting vector in T_x is multiplied by a (relation-specific) learned weight matrix and a modified version of the graph's adjacency matrix. The new vector is then mapped back to a point of M by M's exp map. There it is subjected to a non-linear map from M to M. Classification and regression are performed on a transform of the set of final annotations of all graph nodes [137]. A set of n reference points in M is chosen [by a method not described -- update, the authors' reply indicates these are learned, which is nice, and should be made more explicit in the paper] and for each annotation a in M, a vector in R^n is produced by listing the distance of a to each reference point. Node-level prediction is performed by taking this transform of a node's annotation and computing: a linear functional of it (for regression); or the softmax of a linear transformation of it (for classification). For graph-level predictions, the same operations are applied to the average of the transforms of the annotations of all the nodes in the graph. * Complexity: No formal analysis is provided, although, non-technically speaking, the new method is quite complicated, especially in the Lorentz model where it is necessary to map over to the Poincaré ball to perform the nonlinearity, and then transform back. [See my comment in 5 below: I am fully satisfied by the authors' response.] * Tested models: This method is applied to two isometric hyperbolic manifolds, the Poincaré ball and the Lorentz model, which are compared to the Euclidean manifold of the same dimension.   * Tasks: A synthetic task of determining which of 3 graph-generation algorithms produced the data [168]; properties of molecules (ZINC dataset) [190];  "predicting price fluctuations for the underlying asset of the Ethereum blockchain" [228] * Results: The Lorentz model is shown to outperform the Poincaré ball which outperforms the Euclidean case.  **REVIEW * To a reader familiar with GNNs and Riemannian manifolds, the paper is clear. * The work seems quite original. * The experiments are presented clearly enough and the results seem rather good: e.g., on the task of predicting 3 molecular properties, with 256 dimensions, the SoTA/new model error values are: 3.2/2.4, 6.4/4.7, 9.1/7.7.  ** TYPOs etc. * In line [113], presumably the norm intended is presumably the Euclidean norm; it would be worth making this explicit given that it's in a section devoted to defining other norms. The "unit ball" \mathcal{B} is not a unit ball in the space being constructed, of course. * In Eq 14 and following, presumably "d_{1j}" should be "\psi_{1j}" 