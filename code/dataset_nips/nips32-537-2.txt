Motivated by the APCG method for empirical risk minimization, this paper proposed an an accelerated decentralized stochastic algorithm for finite sums. An augmented communication graph is proposed such that the original constrained optimization problem can be transformed to its dual formulation, which can be solved by stochastic coordinate descent. The proposed method employs randomized pairwise communication and stochastic computation. An adaptive sampling scheme for selecting edge is introduced, which is analogous to importance sampling in the literature. The theoretical analysis shows that the proposed algorithm achieves an optimal linear convergence rate for finite-sums, and the time complexity is better than the existing results. The experiments on logistic regression show that it outperforms the related methods and is robust with different network sizes. Overall, I think the theoretical results are novel.   It would be better to provide some intuition of the algorithmic design. In particular, the choice of stepsize and R_{k,l} are not well clear. How do we obtain W_{k,l}\Sigma^{-1}y_t in Step 6?   Step 9 in Algorithm 1 looks problematic to me. Shouldn't it be v_{t+1}^{i} = z_{t+1}^{(i)} - z_{t+1}^(i, j) + v_{t+1}^{(i, j)}?  What is the purpose to have \mu_{i, j}? At the first glance, I thought \mu_{i, j} appears in the communication matrix A, but I get confused when I see (W_k\Sigma^{-1}y_t)^{(k)} \propto \mu_{k,l}^2 in Line 188.   The homogenous setting may not be very interesting. One particular application of decentralized computing is mobile computing, in which different users (nodes) have different local sample sizes and networking conditions also vary in different regimes. Thus, I think the paper can be improved if varying local sample size and networking conditions can be considered in the paper.    As the proposed ADFS method requires a number of hyper-parameters, how to choose them in practice? I don't find detailed description in either main text or supplementary material.   Minor comments: 1. If I understand correctly, the inequality in Line 91 does not hold when batch computations are faster than communications. In this case, "communications are faster than evaluating a single proximal operator ... "  would be wrong.  2. There is no definition of Vec(X_{i, j}). 3. The definition of \kappa_{min} in Section D.4 is missing.  ******************************************* I have read rebuttal, and my options remain the same. I still encourage the authors to perform experiments on larger datasets (more samples and higher dimensionality). 