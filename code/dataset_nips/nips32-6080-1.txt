 CLARITY  The text is nicely written, understandable, and up to a number of minor issues (see details) clear.  QUALITY  I didn't find major flaws in the claims.  Some details are listed below.  Experiments are performed on hand-crafted circuits.  These may not be representative for practical circuits (see also comment on significance).  It may be better to report "speedup factor" rather than "Improve %" (which is near 99% always here).  ORIGINALITY  To the best of my non-expert knowledge the contribution seems to be original.  SIGNIFICANCE  The paper motivates the problem by arguing that the algorithm of Darwich (2001) is too expensive.  Still, Darwich (2001), which focuses on d-DNNFs rather than general circuits) states that making a circuit smooth is reasonable for circuits occuring in practice, in particular it says "These operations preserve both the decomposability and determinism of a DNNF. They may increase the size of given DNNF but only by a factor of O(n), where n is the number of atoms in the DNNF. This increase is quite minimal in practice though.".  It may be useful to clarify this difference in opinion on whether this smoothing is problematics.  Another issue is that the proposed algorithm requires a structured circuit as input but doesn't preserve structuredness.  Line 266 lists some tasks which don't need structuredness, but doesn't discuss how much other common tasks depend on structuredness.  If only tasks not needing structuredness should be performed, then getting the circuit into a structured form (to be able to apply the proposed algorithm√† may come with an additional cost.   REPRODUCIBILITY The checklist asserts all information on the used data is provided, but the paper doesn't give details.  The supplementary material is a zip file, but most directories seem to contain code.    L 120 : please specify whether the m in O(m) gives the number of variables or the number of literal or ...  If you intend to use m as a global variable throughout the paper, then please make this very clear at the beginning of the section.  My guess is here that m is the number of literals. (e.g., hiding the specification of m and n in the caption of Table 1 is not sufficient)  * L 159 : the definition suggests that a smoothing gate algorithm could output a circuit which is not logically equivalent to the input circuit.  Is that the intention?  * L 177 : it seems that for the internal x-gate, c1 and c2 could encode non-trivial circuits, and _replacing_ them with SG(u_{vl}\setminus u_{\rho(c_1)}) and SG(u_{vr}\setminus u_{\rho(c_2)}) gives a non-equivalent circuit.  Maybe you want to add children to the gate?  * L 181 : in contrast to L 120, it seems here m is the number of intervals (hence L 120 needed a specification of the meaning of m).  * L 186 : what is the meaning of n here?    * L 204 : thm 4 is ill-formulated.  It says "there exists intervals such that .... takes ... time".  However, once we know the intervals we can pre-compute the sums.  I guess you need to say "for all algorithms, there exist m intervals such that ... takes ... time."  * L 211: please define accurately "the class of smoothing-gate algorithms,"  * L 253 : here, m and n are nicely defined.   ------------------- I appreciate the informative author feedback.   