I thank the authors for their response, and would like to maintain my overall evaluation.  =====  The paper is generally well-written, and addresses an important problem. In the literature on kernel two-sample tests, apart from the quadratic-time maximum mean discrepancy (MMD) test which computes the RKHS norm of the mean embeddings, [5] examined a test statistic based on the L^2 distance of the empirical mean embeddings, and gave the asymptotic null distribution in terms of Chi-squared variables. The current work generalizes this approach by replacing the L^2 distance with general L^p distances, and prove that for p >= 1, the resulting metrics dominate weak convergence. For the test based on the L1 norm, the paper further derives the asymptotic null distribution in terms of Nakagami variables, and proves that it achieves lower type-II error than the test based on the L2 norm.  Overall, I feel that the paper makes an interesting observation and a valuable contribution. More specifically, I have the following questions/comments:  - How does one choose the distribution \Gamma from which the T_j's are sampled?  - It would be helpful to clearly state the computational complexity of the proposed tests in terms of N1, N2 and J.  - In the experiments, to fully verify Proposition 3.1, I think it would be helpful to have a comparison of the Type-I and Type-II errors of all the tests without optimizing for test locations, since the latter introduce an additional source of confounding.  - In the second panel of Figures 1 and 2, why are the ME lines missing?  - Table 2 is rather confusing as I'm not sure which entries represent Type-I errors and which represent Type-II errors. It might be better to create two separate tables and defer e.g., the Type-I error one to the supplementary material.  - Since the Nakagami distribution may not be familiar to most readers, it would be helpful to provide its pdf in the main text or supplementary material to avoid confusion regarding its parameterization.  - I would recommend the authors to release code for implementing the tests and for reproducing the experiments.