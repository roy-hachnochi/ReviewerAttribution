This paper considers a "fair" variant of the nearest-neighbor problem: given a set of points D, one aims to build a data structure so that, given a query point q, and a radius r, the data structure can be used to return an (almost) uniform at random point of the intersection between D and the ball of radius r centered on q.  Such a data structure could be used to avoid "unfair" applications of nearest neighbor approaches (e.g., applications were the same point was to be returned at every query).  The authors present a reduction showing that, if one has a LSH that returns a c-approximate NN in time T, using space S, then one can turn that algorithm into one that returns an almost UAR point in the (approximate) ball of the chosen radius with space O(S) and expected time O(T).  To prove the reduction the authors introduce a new problem that they solve efficiently: a collection C of sets is given at the outset, and given a subcollection S \subseteq C, one has to return a UAR element from the union of the sets in S. The authors show that one can answer such a query in time O(|C|), by rejection sampling (together with an efficient algorithm for approximating an element degree). The authors then apply the solution to this problem to the fair NN problem, obtaining the aforementioned result (together with some variants).  Finally, the authors test their algorithm on a number of datasets.  I think this is a very neat paper, and I recommend acceptance.