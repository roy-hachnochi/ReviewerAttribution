-------post-rebuttal comments The authors' response addresses all of my minor improvement suggestions. So I am still very positive about this paper.  -------pre-rebuttal comments I vote for accept this paper due to: 1) the authors proposed a reasonable hypothesis that impose multiple constraints on DNN weights to bound its norm can get empirical generalization errors closer the theoretical bounds, and also improve performance. 2) they designed a novel algorithm FG-SGD to achieve the goal, while they addressed a lot of technique difficult problems. 3) They conducted solid experiments to support the superior of the proposed method. See details breakdown comments into review rubrics below.  1. Originality - 9 The proposed FG-SGD algorithm is novel. There are also a lot of non-trivial technique contribution of the work to make training with complicated constraints over POMs feasible, in which it cannot be done by simply applying existing techniques.  2. Quality - 9 Although I didn't follow all the mathematical details carefully in the paper, the overall story is sound and the mathematical analysis seems to be very solid. The author also conducted extensive experiments over widely used ResNet50/101, ResNext, MobileNet and DeepRoot architecture on multiple datasets Cifar-10, Cifar100 and Imagenet to support the claim of the paper, and the superior of the proposed method.  3. Clarity - 7 This paper is very mathematical dense and heavy so that it takes effort to follow, even though the authors spent a lot of effort to provide high level ideas in the main paper to help readers understand it. It will also be great if the author can release the code to help other people to understand and implement the algorithms, and reproduce the results.  4. Significance - 8 This works seems to be applicable to all the existing NN learning problems. The only question is whether the extra training time caused by the complexity of the proposed algorithm pay off. If the authors can integrate this algorithm into standard ML library like TensorFlow or PyTorch, I am sure it will help people to use it.