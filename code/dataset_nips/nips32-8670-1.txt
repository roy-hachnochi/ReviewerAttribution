The author(s) propose a variational method, pSVN. Compared to its parent algorithms, SVGD and SVN, pSVN is faster to converge, has higher accuracy, and offers a complexity independent of parameter and sample dimensions.  The authors do a very nice job of covering the basics of Stein variational methods before diving into the derivation and exposition of their algorithm. Overall, the theory is well presented and seemingly sound.  I believe there is a small typo (extra 'is') in lines 98-99.  The experiments are well explained. Their results support the claimed advantages of accuracy, speed, and scalability that pSVN has over SVGD and SVN. I was impressed that the author(s) also experimentally characterized the speed gains of the parallelization available to their algorithm.  My only complaint with this paper, is the examples, particularly the nonlinear one, seem contrived and perhaps overly suited to their proposed methdod. The first example being linear makes sense since the authors point out that Hessian-based subspace is optimal for linear f (line 173). Although, from their conclusion it seems these kinds of broader applications are being actively worked on.  Overall, I am quite impressed with the paper, but am left wondering about broader applicability given the limited experimental constructions.  Edit: I've read the response and other reviews and look forward to this being accepted :) 