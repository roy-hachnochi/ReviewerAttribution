Summary: This paper proposes a method using graph convolutional neural networks for finding a good branching policy for brach-and-bound algorithm for solving mixed integer linear programs. In particular, the proposed methods makes use of a bipartite graph representation of MILPs and uses imitation learning and a dedicated graph convolutional network. The approach is novel as far as I know of. The paper is generally well written, provides necessary background and discusses related work in a sufficient manner.   Pros:  - Generally well written paper  - Experimental evaluation compares to other approaches (branching policies)  - Code provided along the submission  Cons:  - Experiments of crafted instances, would be (in addition) interesting to see how the approach works when using "real-life" benchmarks   Minor comments/questions: - In Table 3 there are missing values (set covering, hard, FSB), wrong bolding (set covering, easy, RSB has less nodes that GCNN) and missing bolding (combinatorial auction, easy, wins)  =================== After author response:  The author response further clarifies many of the issues raised in the reviews. For the additional results of maximum independent set it is hard to evaluate whether these are interesting or not, since no details are provided on the instances used (hence please provide more details in the upcoming versions).  I think that in particular the concerns regarding the fairness of the experimental evaluation are very relevant, and  the authors should do their best to address them. The response already provides some answers and clarifications, altough a more thorough experimental evaluation could make the paper stronger. 