This manuscript provides an introduction to, and description of, the JSim modelling system. The authors highlight the general purpose utility of this platform through the use of specific application examples, that are easily understood and followed by the reader and potential JSim users. This manuscript provides all appropriate links and examples that readers would require to get up and running with the JSim software. This paper is well written, with just a few points that the authors may want to consider in future revisions of the manuscript. The authors touch briefly on reuse of existing models/projects and the use of a CVS repository to archive the history of model development, as well as the discussion on modular modelling in the future developments section. The basis for this modularity and reuse seems to result in the development of a new, monolithic MML document for the assembled model. It might be useful to see if there are features in either JSim or MML that allow dynamic links to the source modules to be maintained allowing users to alternate sources or versions of the source modules (rather than the cut-and-paste style described in the manuscript). In addition to the versioning of the JSim input data (experimental data, MML, projects, etc.), it is often the case that a specific piece of work requires some minimum version of the software itself. I wonder if there is any link between project files and JSim releases? For example, are users browsing the Physiome Repository able to determine if they need to update their version of JSim prior to loading a project file (or if in fact the software handles this internally). The manuscript would benefit from a more thorough comparison of JSim to alternative tools, or at least some links to specific tools being contrasted in the article. There is no description of how spatial geometries (finite element meshes or finite difference grids) are defined in JSim. Are the evolving standards for such descriptions (e.g., FieldML or SBML-spatial) being used or are there plans to use such? A comparison with approaches taken by tools like the Virtual Cell or Chaste might be useful. The authors make no reference to the adoption or interchange with the SED-ML standard. It would be useful to discuss any plans in this regard. Similarly, the evolving COMBINE archive format has a large overlap in aims with the JSim project file and the authors might want to comment on any plans to make use of that archiving format or contributions in that direction. In some parts of the manuscript (e.g., the caption for figure 3) the description of the modelling/simulation example seems a bit excessive, and detracts from the primary focus of the article. Minor comments Page 5, column 1, first paragraph: Antimony is mentioned as a model import source format, but that format is not defined previously. Page 10, column 1, third paragraph: "...using several different numerical method," missing 's' on method. 