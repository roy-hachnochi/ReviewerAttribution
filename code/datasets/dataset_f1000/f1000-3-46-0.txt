Reusable libraries for building web applications are very welcome and allow interested groups to build modern, dynamic web tools without losing time to learning new technologies and having to study data access from various different resources. Here, the authors propose a library to query all InterMine repositories. The result is a powerful tool: it is not only the web developers who can use this library to access in theory all the InterMine repositories, but users too can build and update queries as well as table directly from the web page by selecting graphically all fields and columns. The manuscript provides some useful examples of possible queries. Starting from the example at the address http://zenodo.org/record/8301 (selected from the Software Availability section), it is easy to have a running page that can be modified. Nevertheless, starting a page from scratch is not as straight forward as it could be because the availability links and the installation description are confusing. It is not clear what the meaning of the data availability links provided are (there are three links in the abstract under the heading “availability” and two in the Software Availability section). The authors may want to add a short description to each so the user can redirect to the one he/she is interested in. Besides, in the Installation section of the manuscript it is written that the “ last resource contains the definition of the InterMine.Table BioJS component. As it is not available from a reliable third party source, it currently needs to be downloaded from the BioJS registry, and hosted locally ”. This is where the confusion is: what should be downloaded and from where? I didn't find references to the InterMine tables in Zenodo or from the GitHub repository. In the example (Zenodo), it looks like the code is actually inserted in the index.js file. One of the advantages of the library proposed here is that it is based on the InterMine repositories. In the manuscript the authors provide the example of the FlyMine query, but the component should also be able to query all the others InterMine repositories (I was able to find the updated code on GitHub reference to the worm repository). From what I understand from the author’s comments is that a separate article should soon be available and will describe the web service implemented by the InterMine repositories and which are used by this BioJS library. It makes it difficult to understand what queries can be done (i.e. what are the tables and fields that can be queried). Nevertheless, this can be inferred by using the example provided (using the manage columns and adding filter buttons on the example page). The authors may want to provide a supplementary table with the address of the web services that can be queried (or a link to another registry if it exists). In the Supplementary material A section, the last “” should be . To summarize, I believe that this library is useful and works well, and that after a few clarifications in the manuscript it will help the user integrate straightforward InterMine tables into their own webpages.