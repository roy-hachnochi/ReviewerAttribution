Here, the authors publish the BioJS component DNAContentViewer JavaScript widget for visualizing the GC and AT content of an input DNA sequence. This widget is part of the BioJS community effort which I strongly support. Article The title and the abstract are appropriate. The rest of the article is short, what I certainly appreciate. It has, however, both some major and some minor issues. raw sequence(s) is an unnecessary expression, and possibly misleading. A more appropriate reference than Gao et al. 2008 for the importance of GC content should be included. Reference number 4 is inappropriate, not because it is Wikipedia, but because it does not point to the mentioned calculator or to a proper Wikipedia article. Reference number 5 is unnecessary and not particularly useful. The window for the content calculations is not described. The algorithm is not described. The events and methods of DNAContentViewer are listed in the BioJS registry, but I am not convinced that they are demonstrated as is claimed. I am not convinced that details on how to implement an extension of this component are given in its documentation. This is indicative of regions that contain unidentified nucleotides (X or N bases) instead of A, T, G or C. from a practical point of view is a somewhat ridiculous sentence. The purpose of the visualization is not to enable users to hypothesize about unidentified nucleotides which are obvious from the input sequence. Instead, the unidentified nucleotides should be visualized within the graph, in order to enable users to focus on the other, relevant indications. " DNAContentViewer can be easily integrated with other BioJS web components or extended to provide new functionality" isnt really justified. The following sentence may also not be. It would be nice if the DNAContentViewer were used in production, and in that case a production usage example were mentioned in the article. Production usage would serve crucial feedback to the design of the component. On the other hand, I understand that despite its usefulness, production usage is not essential for designing a good component. Widget DNAContentViewer is a very simple JavaScript component for visualisation of GC and AT content of an input DNA sequence. I can imagine scenarios where its simplicity would be appreciated. In its current state, I would consider it a prototype, as I am not sure it is completely ready for publication. To consider the DNAContentViewer ready for production, I suggest addressing a substantial part of the following points: Despite its simplicity, it is quite slow when zooming or panning. Zooming in is not functional below max resolution but still requires all the clicks to zoom out. Unnecessary animation when changing the y axis position, while zooming and panning is far from convenient. It would be much more usable with mouse wheel to zoom (and centralize), and mouse drag to pan. See e.g. http://mbostock.github.io/d3/talk/20111018/area-gradient.html . Reasonable positions on the x axis would be more useful, instead of random-looking ones like now, and not only in kbp range. They would ideally only extend and scroll when zooming or panning, but not change otherwise. Maybe show the sequence when zoomed-in enough. The bits of the sequence should be shown in the view. An option for inverting the y axis upside-down for one of the GC or AT would be useful. Selection of a subsequence by dragging mouse over a different part of the widget than for panning (e.g. at the x axis area while above the axis would pan - or vice versa - in any case indicated by cursor change). Enable zooming in to see the subsequence selected with mouse dragging. Showing the used sliding window size as a scale, and maybe even allowing customizing it if that would be useful. The sharp edges of the graphs or the sparsity of points with values if that is the case look a bit suspicious to me. What are the and where do they come from? And could they be shown in the visualization, e.g. like in http://mbostock.github.io/d3/talk/20111018/area-gradient.html ? Details of the input format are not documented (e.g. character case and allowed characters). Enabling more sequence formats, including a JS string without the need of a file. I dont understand the options. Which selected text do they concern, one on the axes or in the "menu" (why is that useful to do)? Example of integration with another BioJS widget, naturally for example BioJS Sequence or BioJS FeatureViewer . It would be nice to enable at least testing with another sequence, without a need for local installation of Apache etc. BioJS registry I dont know how involved the authors are in the design and the future evolution of the BioJS registry and BioJS itself, and although this may thus not be a suitable place, I have a couple of general suggestions related to the BioJS registry: I havent found an easier way to view the source code of the components, that would be without the need for copying pasting pieces of the URL, or navigating through GitHub. I find pagination at http://www.ebi.ac.uk/Tools/biojs/registry/components.html both useless and inconvenient. In addition it didnt always work well for me with sorting by a column versus the pagination. Examples of integration of multiple components, such as the Sequence and Protein3D example that is only described in the spec - or the even fancier example at http://cdn.f1000r.com.s3.amazonaws.com/manuscripts/3850/22cef3a8-64b5-4189-8c1c-71b545883363_figure1.gif - would be both useful, and justifying the interoperability claims of BioJS. It would be awesome to have an integrated example for each BioJS component easily accessible from the registry. Id love being able to test out at least such simple components as this Biojs.DNAContentViewer in my own HTML, without having to install Apache with PHP locally. Is that possible? If it isnt due to the BioJS itself, at least some interpreter like http://www.w3schools.com/js/tryit.asp?filename=tryjs_lib_jquery would be very nice to have. 