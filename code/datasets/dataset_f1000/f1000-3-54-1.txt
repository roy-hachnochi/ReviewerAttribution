Thanki et al . describe DNAContentViewer , a component of the BioJS collection aimed at visualizing GC and AT content in a string of nucleotides. While we are wholly supportive of the BioJS project, we have some important concerns with the DNAContentViewer manuscript/tool as it presently stands. Manuscript The manuscript starts with an introduction that is vague and difficult to read. The first sentence sets up the importance of GC content, but references an alternate web tool for visualizing GC content (a primary reference should be used). It appears that the authors took the remainder of their introduction directly from an inaccurate and poorly worded Wikipedia entry (complete with the identical references). Compare the Wikipedia entry for "GC-content": "Within a long region of genomic sequence, genes are often characterised by having a higher GC-content in contrast to the background GC-content for the entire genome. Evidence of GC ratio with that of length of the coding region of a gene has shown that the length of the coding sequence is directly proportional to higher G+C content (Pozzoli et al., 2008). This has been pointed to the fact that the stop codon has a bias towards A and T nucleotides, and, thus, the shorter the sequence the higher the AT bias (Wuischick et al., 1999)". to the DNAContentViewer introduction: "Genes are often characterised by having a higher GC content than the rest of the genome. It has also been shown that the length of the coding sequence is directly proportional to a higher GC content (Pozzoli et al., 2008). Stop codons, however, have a bias towards A and T nucleotides and are thus indicative of shorter gene sequences (Wuischick et al., 1999)." The authors then go on to cite Wikipedia itself in the following sentence: "The AT and GC content percentages and ratios can be measured in different ways (e.g., simple arithmetic or using a free online AT/GC calculator (improper reference to Wikipedia "Talk" tab))." Wikipedia version: "the GC-content can be accurately calculated by simple arithmetic or by using the free online GC calculator (web link to http://www.basic.northwestern.edu/biotools/oligocalc.html)." Finally, for reference 5 in the manuscript (the reference to the GC content formula), the authors again use the same reference as noted in the Wikipedia entry (Brock Biology of Microorganisms, 2003), but this time deciding to go with the Spanish Edition (Brock, Biologia de Los Microorganismos, 2004). Other concerns with the manuscript: Despite the limited computation necessary for creating the visualization, the authors have omitted some key information that is essential to understanding how the tool works. For example, the manuscript does not describe how the window size for the calculation is determined. This is particularly important given that it is not a parameter of the existing tool. How was the bin size chosen? How will shorter sequences be affected (i.e., is there a recommended lower bound for use)? Why were bins used rather than a sliding average? While we were able to partially answer some of these questions by digging through the code base, this is important information for users and should be described in the manuscript. The example given in Figure 1 suggests that the 13K mark increase in AT content "may be indicative of a stop codon and a poly A tail". First, it is impossible to discern 2-3 nucleotides in a bin size of 4,600 (the authors should note that the 3 UTR typically sits between the stop codon and poly(A) tail in eukaryotes). Second, is there a poly(A) tail in this region? The authors should either definitively answer this question, or preferably use a real example that highlights the utility of the tool in answering a real biological question (i.e., how does this visualization allow us to see something that is difficult to detect otherwise). Code/Tool The DNAContentViewer component code is overall well-organized and well-documented. We were able to get a working demo up and running on a local server in roughly 20 minutes. That said, several issues should be corrected: If one accesses the demo page at https://www.ebi.ac.uk/Tools/biojs/registry/Biojs.DNAContentViewer.html via HTTPS (which seems to be the default if you get there via Google) the demo will not load due to D3.js being loaded via HTTP and therefore blocked on HTTPS pages. The provided and tags in the installation instructions ( http://www.ebi.ac.uk/Tools/biojs/registry/Biojs.DNAContentViewer.html# ) contain relative URLs. Changing these to absolute URLs would make installation quicker and simpler. The provided tags include jQuery UI before including jQuery itself, causing a ReferenceError: jQuery is not defined error in the JavaScript console of both Chrome and Firefox. Although it seems this error does not prevent the component from working, there is no need for it to be there. Simply switching the order of the tags removed this error. When using the viewer, two errors are thrown in the console whenever a user clicks on the left control arrow. The component still appears to work normally despite these errors and the graph will still shift to the left and render (assuming the user is not already as far left as the graph can go). At most zoom levels, panning left and right actually changes the resultant GC and AT lines (i.e., they do not stay fixed). This seems to be an issue with how the system chooses to bin the data upon panning, and should be corrected. Additionally, a more fluid panning and zooming capability would be preferable (e.g., panning by dragging and zooming with a slider). 