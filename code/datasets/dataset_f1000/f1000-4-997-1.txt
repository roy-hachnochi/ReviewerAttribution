The authors describe NGSeasy, a containerized set of tools for variant calling on high throughput sequencing data. The implementation is open-source, maintained and well documented with instructions for getting started. The paper reports a number of useful practical results, including reproducibility through containerization, validations and timing of analyses. Below are my suggestions for helping to improve the paper and questions about the implementation details. Paper content In the Introduction, you should note that similar Docker-based approaches exist for making Galaxy installation easier: https://github.com/bgruening/docker-galaxy-stable You mention running at non-root in the Docker container but should also discuss that users need root privileges to install and run Docker. This currently limits usability of Docker on shared computing environments since it requires giving NGSeasy root-equivalent permissions. User namespace support is in progress and will help, but is not yet in any released versions of Docker. I agree with your security points once you have the NGSeasy approach setup, but getting there can be a challenge. You do mention this later in "NGSeasy future developments" and that would fit better in the initial installation section. For reporting of download/install times, please also list install times from more standard connection speeds. A majority of users will not have 500Mb/s or better download. Is it possible to download subsets of the data? It looks like it currently grabs both hg19, b37 and hs37d5, tripling the download times and space required. Digging into the code it wasnt clear how to get other mentioned genomes like hs38DH. Validation For the GCAT/Genome in a Bottle validations, Id suggest reporting precision instead of specificity. Specificity is not especially useful for calling since its dominated by true negatives. For example, the precision rates show clear differences between FreeBayes and Platypus, and also differences between novoalign and the other aligners. The specificity numbers do not reveal these. Its hard to judge the results of your validation without comparing to another best-practice pipeline like bwa + GATK HaplotypeCaller. Having these as a baseline next to your comparisons would strengthen the argument that the current implementation does a comparable job to expected best practice. It would be useful to have bwa-mem alignment results also listed in the GCAT validations. bwa-mem is a widely used aligner, separate from stampy. Do you have validation of using non-GATK tools (recab and glia) versus GATK tools in terms of the output quality? This would be useful to report. Ive had good output success avoiding these step entirely but would like to see differences between avoiding the steps and using freely available alternatives. Timings The timing information is really useful and a great addition to the paper. Id suggest adding some caveats to the conclusion and tables to make it clearer about the inputs, since the numbers are exome with only 30x coverage. Most standard exomes would be higher coverage and WGS is becoming increasingly standard. Some of the statements like "alignment and variant calling are no longer a major bottle neck" seem overextended from timings on this smaller dataset. Scaling up is not linear and things get harder for WGS projects like 100k genomes project. Has there been scaling work across non-single machine setups? Our experience is that shared network issues and managing Docker containers can dominate scaling. If the target is single multi-core machines it would be worth specifying this directly. Docker What is your experience with larger Docker containers and Docker Hub? Practically Ive found a lot of timeout issues trying to download and manage larger images. Do you have workaround/experience with these issues? Have you successfully run workflows on non-unix systems with Boot2Docker? You list these as workstations where NGSeasy should work. Weve not had good success with mounting external data into Boot2Docker instances but would have interest in re-exploring if this changed: https://github.com/chapmanb/bcbio-nextgen-vm#mac-osx-docker-support Minor Typo: sudo make INTSALLDIR="/media/scratch" all 