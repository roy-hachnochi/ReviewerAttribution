The article proposes the use of a blockchain as a timestamping service to assure the integrity of clinical trial protocols. This appears to be a specific application of the more general idea of using the blockchain to provide time-stamped "proof-of-existence" of various kinds of documents. As one of many examples, one may refer to the web service http://proofofexistence.com and associated publicity (e.g. https://www.youtube.com/watch?v=6YHiuZeWyrE , which dates from December 2013) to see that this idea has been around for some time before the publication of the present article. The core of the methodology is described in the article as follows: Following a method similar to that described by Carlisle the documentâ€™s SHA256 digest for the text was then calculated by entering text from the trial protocol into an SHA256 calculator (Xorbin) 6 . This was then converted into a bitcoin private key and corresponding public key using a bitcoin wallet. To do this a new account was created in Strongcoin 9 and the SHA256 digest used as the account password to generate a private key 6 . From this Strongcoin automatically generated a corresponding Advanced Encryption Standard 256 bit public key 6 . An arbitrary amount of bitcoin was then sent to a corresponding bitcoin address. I struggle to follow some of the steps described here. Creating a SHA256 digest from a file is OK and straightforward (although this should be done using the file and not via copy and paste of the contents). How this is then "converted into a bitcoin private key and corresponding public key using a bitcoin wallet" does not seem to make sense. Firstly, why involve an untrusted third party like Strongcoin (one of the key goals of blockchain technology being to avoid the need for these)? Secondly, how does the Strongcoin account password relate to the private key generated by Strongcoin? Strongcoin does ask for "A password to encrypt your account" but I should imagine this is only used to protect the wallet, and not to determine the private/public key pair. To test that is indeed the case, I created two accounts using Strongcoin using the same account password (which was the SHA256 hash of the provided document file). I then examined the private key of each account. They are (as one might expect) different. So it seems wrong to suggest that the account password is being used to *generate* or somehow determine the private key. Rather the account password *protects* an arbitrary public/private key pair generated by Strongcoin. The public/private key pair do not themselves seem to be related to the SHA256 hash used as the account password. And so the act of sending an arbitrary amount of bitcoin to the bitcoin address determined by the public key does not seem to fulfill the role of notarising the existence of the document in a satisfactory manner. Nor is there anything in the script/metadata associated with the transaction to link it to the document. Proofofexistence.com for example uses the OP_RETURN field in the script to store the hash of the document in question (see https://proofofexistence.com/about ), which does provide the necessary link. I also do not think that changing the account password would affect the public/private key pair in any way, other than changing the encoding used to encrypt them. In terms of the verification protocol: To verify the existence of the document a second researcher was sent the originally prepared unformatted document. An SHA256 digest was created as previously described. The corresponding private key, public key and bitcoin address were confirmed using the original Strongcoin account and blockchain.info 6 . This is fine as far as creating the SHA256 digest is concerned. Where it seems to go awry is in requiring "the original Strongcoin account" to confirm the corresponding private key, public key and bitcoin address. Other researchers won't have access to this account (and if they do, they can use it to send themselves the Bitcoin that was sent to it in the first place). Further, even if researchers get access to the account (because e.g. the login details are made public), what is there to link the account to the document? Only the password used to encrypt the account (which Strongcoin might already provide a facility to change, or if not, might provide a facility to change in the future). Perhaps I have misunderstood some aspect of this methodology, but I am happy to go on record as stating that it does not seem to me to be correct. I am also struggling to see the insight provided by the content of the paper, even if the methodology can be corrected. In my opinion the whole paper could be summarised in two sentences: "Blockchains can provide timestamped proof-of-existence for documents (see e.g. http://proofofexistence.com ). So for example you might encode the existence of a clinical trial protocol in a blockchain to ensure it is not subsequently tampered with."; since this is arguably the point of one of the references published some years previously ( https://www.bgcarlisle.com/blog/2014/08/25/proof-of-prespecified-endpoints-in-medical-research-with-the-bitcoin-blockchain/ , which incidentally contains an alarming similar methodology), I do not see value in publishing the present work. Nor can I see the value in stating something along the lines of "I used a service like http://proofofexistence.com to upload a hash of a document, which happened to be a clinical trial protocol, onto the Bitcoin blockchain, and then I verified that I could check for the hash of the document." 