Daouda et al. propose a new tool, pyGeno, for the interrogation of proteomics data in the context of genomic sequence variants. General Comment: Several times the authors make reference to ‘precision medicine’ without clarifying what is meant by the term. If the authors have a specific workflow or use case which befits ‘precision medicine’ they need to make it clearer. I note that the authors do not include a ‘Use Cases’ section as suggested by in the ‘Instructions to Authors’. Their previous paper (Granados et al , 2014) would be a great example of how to use pyGeno on real data.The examples provided in the paper are either too vague or too simplistic. Too often new tools come out which try to reinvent the wheel for a small incremental improvement. Here, the authors need to be acknowledged for using well-established systems like Ensembl, SQLite and reading in existing data types (e.g. GFF, VCF, fasta). The paper is too short on specifics and somewhat unstructured. The Methods section is fine although would benefit from an overview- with a Figure and/ or text- as the overall structure of pyGeno is unclear. The Personalized genomes section should be expanded as a ‘Use Cases’ section. The ‘Operation’ section should be part of the Methods. The online instructions are quite clear for installation, however I gave up due to the incredibly slow progress: 20 hours remaining of a full genome ‘datawrap’. Thus, unfortunately, I was not able to test the software myself. Given that pyGeno has been downloaded many times, this might an issue local to me. Overall I do feel pyGeno is a valuable contribution to the community, however the paper needs some improvement to highlight the tool’s usefulness better. Specific Comments: In the third paragraph of the Methods, the authors state that pyGeno is not dependent on any ‘remote REST APIs’. If this is the case how does the pyGeno interact with Ensembl and keep in sync with the regular updates (every 6 months)? The focus on ‘robust and faster processing’ is understandable, but version drift from official sources can be a serious problem. Is version maintenance something end users can do or are they dependent on the authors keeping the versions up-to-date? In Figure 1, a simple example is provided showing a protein sequence with what appears to be two non-synonymous variants highlighted in the protein sequence. How does pyGeno cope with summarising/ visualising; 1) mutually exclusive variants at a single amino acid (e.g. two non-synonymous variants at different positions of the codon ), or 2) more complex variants like splicing-affecting changes and loss/gain of STOP codons? Similarly does pyGeno accept phased haplotypes thereby allowing inspection of both protein products from each of the individual’s alleles? What are the hardware requirements for running pyGeno and associated analyses? Is a well-specified workstation with several GB of RAM, fast cpu and terabytes of diskspace required or can it be run on a laptop? The final paragraph does not contribute anything to the paper, I suggest the authors remove it and end the article with something more succinct and pertinent. References 1. Granados DP, Sriranganadane D, Daouda T, Zieger A, et al.: Impact of genomic polymorphisms on the repertoire of human MHC class I-associated peptides. Nat Commun . 2014; 5 : 3600 PubMed Abstract | Publisher Full Text Competing Interests: No competing interests were disclosed. I confirm that I have read this submission and believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard, however I have significant reservations, as outlined above. Close READ LESS CITE CITE HOW TO CITE THIS REPORT Cole C. Reviewer Report For: pyGeno: A Python package for precision medicine and proteogenomics [version 2; peer review: 1 approved, 2 approved with reservations] . F1000Research 2016, 5 :381 ( https://doi.org/10.5256/f1000research.9391.r15427 ) The direct URL for this report is: https://f1000research.com/articles/5-381/v2#referee-response-15427 NOTE: it is important to ensure the information in square brackets after the title is included in all citations of this article. COPY CITATION DETAILS Report a concern Respond or Comment COMMENT ON THIS REPORT Views 0 Cite How to cite this report: Coller HA. Reviewer Report For: pyGeno: A Python package for precision medicine and proteogenomics [version 2; peer review: 1 approved, 2 approved with reservations] . F1000Research 2016, 5 :381 ( https://doi.org/10.5256/f1000research.9391.r14063 ) The direct URL for this report is: https://f1000research.com/articles/5-381/v2#referee-response-14063 NOTE: it is important to ensure the information in square brackets after the title is included in this citation. Close Copy Citation Details Reviewer Report 31 May 2016 Hilary Ann Coller , Department of Molecular, Cell and Developmental Biology, University of California Los Angeles, Los Angeles, CA, USA Approved VIEWS 0 https://doi.org/10.5256/f1000research.9391.r14063 This is manuscript describes the development of a valuable new Python package that provides the user with an environment in which they can explore multiple different large datasets related to a single gene. The software maps genes back to Ensemble, ... Continue reading READ ALL 