This article describes bcbioRNASeq, an R package for analysis of RNA-seq data for which gene expression estimation and quality assessment have been done via the bcbio pipeline. The package contains functions for generating plots and performing downstream analysis as well as Rmarkdown templates for generating stand-alone reports of the quality control, differential expression analysis and functional analysis steps. In general, I find the article well written and easy to follow. The included functionality covers the most important parts of a typical RNA-seq analysis, and the package is likely to be a useful tool for bcbio users. Also, the provided templates are easy to extend with additional analyses if necessary. Following are some suggestions for improvement of specific parts of the article. 1. It would be good to indicate any dependencies on particular versions of R/Bioconductor/specific packages, and preferably also give the session info for the session with which the manuscript was generated. I ran the code with R v3.4.2 (Bioconductor v3.6, DESeq2 v1.18.1, bcbioRNASeq v0.1.2), and while most of the code executes correctly, there are some lines that do not. In particular: normalized - counts(dds, "normalized") ## dds doesn't exist tpm - tpm(txi) ## txi doesn't exist writeCounts()(raw, normalized, rlog, tpm) ## formatting error resTbl - resultsTables(res, lfc = 1, write = TRUE, dir = deDir) ## deDir doesn't exist Other lines only execute properly with a functional internet connection, which could perhaps be indicated in the text: plotVolcano(res) resTbl - resultsTables(res, lfc = 1, write = TRUE, dir = ".") Finally, in some places, executing the provided code does not seem to generate the same results as in the article. More precisely: plotPCACovariates(bcb, fdr = 0.1) does not generate Figure 7 (the asterisks are missing). alphaSummary(dds, contrast = c(factor = "group", numerator = "day7", denominator = "normal")) does not generate the numbers in Table 1. resPatterns - degPatterns(counts(bcb, "rlog")[significants(res, ], metadata = colData(bcb), time = "group", col = NULL) does not generate Figure 12. As a consequence, subsetting to cluster 8 also doesn't work. topTables(resTbl, n = 5) does not generate the numbers in Table 2. 2. If I read correctly, the "tximport" slot of the bcbio object contains length-scaled TPMs, not aggregated transcript counts from tximport. This should be made clearer in the article. Is there an explicit choice in the bcbio pipeline that determines the type of count-scale abundances that are generated? 3. It would be useful to indicate in the beginning of the article where the metadata is stored in the output from bcbio. I.e., where should one look for the values available to supply to the "interestingGroups" argument of loadRNASeq()? 4. In the object description, it would be worth explaining a bit more clearly how the values contained in the slot "-tmm: trimmed mean of M-values, calculated by edgeR" were calculated. 5. In the object description, devtools::sessionInfo() should be devtools::session_info() 6. In the Use case, "Also accessible with tpm()" should presumably be under point 3. 7. Regarding the visual thresholds in the plots (warning thresholds and optimal values), how are the default values determined? Are they fixed, or do they depend on some characteristics of the data? And are they particularly suitable for data generated under specific conditions, in specific organisms or with particular protocols? I am also wondering whether the use of the word "optimal" to designate one threshold may cause confusion. For example, if the "optimal" total number of reads is ~20M, and the "optimal" mapping rate is ~90%, it may not be immediately clear how one should interpret values exceeding (and potentially far away from) these "optimal" values. Finally, is there a reason for only having one line in the exonic and intronic mapping rate plots, but both lines in the other plots? 8. In the "Model fitting" section, it is suggested that it is important to evaluate the variance stabilizing performance of different transformations before the differential expression analysis. However, the transformed data are never actually used for the DE analysis (which is performed with DESeq2). Thus, it should be clarified how the results obtained here are used to inform the downstream analysis. 9. For the QC and differential expression analysis, the article outlines the analysis steps in detail. However, the functional analysis is only described through the existence of an Rmarkdown template. It would be nice to have at least part of the functional analysis also explained and written out in the article. 10. In resPatterns[["plot"]], the x-axis labels are not centered under the respective boxplots. 11. The package is referred to as a "Bioconductor package", but as far as I can see it is not (yet) in Bioconductor. 12. It seems that zero counts are excluded from the plots in Figure 2. This could be clarified in the text. 13. In some places, "library" is used in the place of "package". 14. For the degPatterns() call, it is indicated that it is "CPU intensive". It might be useful to indicate approximately *how* CPU/time intensive, since all other steps in the workflow execute quickly. 15. In the code blocks, it would be easier if non-code characters like and + were removed, so that the code could be directly copied into an R session. 