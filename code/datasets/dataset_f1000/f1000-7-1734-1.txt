This article presents a new R software package and shiny app called "ranacapa", aimed at producing rapid visualization and exploration of eDNA metabarcoding datasets. Overall I found this software tool to be exciting and user friendly, and the outlined use cases provided good examples of the need for such tools amongst end users including researchers and undergraduate students. The R shiny app was easy to explore using the demo dataset, and the plots were responsive and visually useful. When trying to install ranacapa in RStudio (via install.packages), I am consistently getting an error message stating that "package ‘ranacapa’ is not available (for R version 3.3.2)". Furthermore, ranacapa does not appear to be listed as a package currently available in CRAN (https://cran.r-project.org/web/packages/available_packages_by_name.html#available-packages-R). Further investigation suggests that this package requires R 3.5.0 or higher to run, but this is not obvious for end users with older versions of R installed. Is it possible to add back compatibility to older versions of R? Especially for end users using HPC facilities who may be unable to update the base R version on their cluster. "Taxonomy-by-sample matrix" - since ranacapa uses a non-standard input (essentially an OTU table summarized by taxonomy), it would be useful to provide specific instructions and/or a conversion script where users can take their QIIME BIOM files or tab-delimited OTU tables and convert them into a format that is suitable for uploading into ranacapa. Users with minimal technical expertise may struggle to convert their data in the correct way. Especially useful would be R scripts or package commands (e.g. phyloseq) that will output taxonomy-by-sample-matrixes in the correct format. The R shiny web app does not provide much information regarding file formatting (users must read the F1000 article for specific information). The only documentation online states that the imported files should be in .biom or .txt formats. What format(s) are supported for the header row (commented out vs. plain text)? Are there any limitations on sparse vs. dense or JSON vs. HDF5 BIOM files (e.g. from QIIME 1 or QIIME2)? Detailed information and documentation should be provided on the website itself in addition to the F1000 article. For the metdatata file - can users directly import QIIME-formatted mapping files (e.g. with a header row beginning with #SampleID that has been validated via Keemi)? Or does this file need to be be edited further for ranacapa? For the demo file on the web server - what study did this file come from? It would be useful to have some contextual information about the file, eDNA markers used, questions/hypotheses, and study design so that end users can explore the demo dataset in a more thoughtful way. Some components of the R Shiny web app do not always seem to function correctly over a slow internet connection - it seems to freeze up and require re-loading, and/or users are presented with an error message. This error message sometimes goes away and the plots pop up as expected after a few minutes. Better error dialogs or "please wait" message boxes would be much less frustrating for the end user to figure out what is happening. Sequencing Depth - the rarefaction depth slider bar is straightforward and should be familiar to most users, however, what impact do multiple rarefactions have on the displayed graphs? Are the rarefaction curves averaged somehow before being displayed? Further information on this parameter would be useful to include in the explanatory text. Taxonomy heatmap - when choosing a lower taxonomic level, the taxonomy strings are overlapping and unreadable. Zooming in cuts off some of the categories on the x-axis. It would be better to be able to expand the heatmap along the y-axis (stretch it out) so you can read the taxonomy labels while still being able to view all of the heatmap information. Taxonomy heatmap - when selecting a taxon to visualize, users might want to see more detail at lower taxonomic levels, however, selecting a taxon to visualize and then choosing a different taxonomic rank currently removes this filter choice and reverts back to showing all taxa at that level. Alpha Diversity Plots - what is the difference between Observed vs. Shannon diversity visualizations? The explanatory text only partially explains the difference between these two options, and could be clarified to explicitly state the important differences in these two calculations. Furthermore, what do high vs. low numerical values mean for each of the two indices, in biological terms (e.g. lower number of species)? These kind of diversity statistics may be familiar for ecologists and microbiome researchers, but are likely to be confusing for citizen scientists, students, or scientists outside of these fields. Alpha Diversity Stats - Unless you have a strong statistical background, it is impossible to interpret the numbers and outputs listed in this tab in the ranacapa shiny app. More explanation is needed to guide users in what they should be looking for - what columns are most important in the ANOVA table to see if samples are in fact unequal in terms of their diversity? In the post-hoc tests, should users be looking for P values 0.05 in the last column? Beta Diversity - the Jaccard and Bray-Curtis indexes could be explained more plainly. Jaccard is the simplest measure of shared taxa/OTUs, while Bray-Curtis is an index focused on the most abundant taxa/OTUs in the dataset. Also some explanation of the PCoA axes (e.g. that they explain variation but do not relate to metadata) would be useful. Adding the Canberra index might also be useful here, as this is another useful index which ignores the most abundant taxa and looks at differences across rare species. Beta Diversity Stats - same comment as Alpha Diversity stats (see above). Needs more context and explanation to be accessible to end users without a statistical background. Use Case 1 - how was the UCLA eDNA dataset filtered down to the set of key taxa that resource managers were looking for? Was this done via R command line, or via the R shiny app interface? Custom filtering is likely to be a common use case, and it would be valuable to add in more specific information regarding how this type of taxon filtering can be accomplished for any dataset. 