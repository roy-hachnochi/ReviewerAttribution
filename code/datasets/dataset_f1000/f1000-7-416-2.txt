Huynh and Xu present a new approach, GAEV, to annotate gene models of a given non-model genome assembly. It maps genes to their associated pathway counterpart of model species. GAEV specializes on improving the conventional KEGG analyses and focuses on providing a gene centric view of gene function and pathways. Overall, I think GAEV can be a good addition to the current bioinformatics research community. I recommend indexing of this manuscript once the authors could address my following questions/suggestions. The first sentence of the manuscript confuses me about what problem the GAEV tries to solve. It provides a new and better way to annotate a given genome with pathways, but I don’t think it tries to help de novo assembly per se. I can see a possible role that GAEV plays in evaluating a non-model assembly by looking at how many conservative pathways and genes are completed (for example, using Drosophila’s circadian rhythm pathway to evaluate the newly assembled Daphnia genome). So it would be better if the authors could be clearer what problems GAEV tries to solve. I have tested GAEV using the example data provided by the authors. It worked without any errors. However, I found two typos in the first two options of the menu popping up from typing “python GAEV.py”. Is it supposed to be “Create and generate a new data file and table from a new dataset of KO numbers”? Please fix it if it is the case. GAEV provides an interactive interface to walk the users through the entire procedure. Such a design gives the users certain degree of flexibility. However, if some users need to try GAEV using different parameters or filters (which is usually true when one tries to annotate their genome/metagenome), such an interactive design can be overwhelming. I am wondering if the authors have plans to have an end-to-end automatic version of GAEV? By providing enough options from command line, I think GAEV can be both flexible and efficient. The likely problem with relative/absolute path to input files can also be naturally solved, and the requirement of putting the input files together with GAEV.py is not necessary as well. I am not asking the authors to have an implementation for this publication, but it would be nice to know the authors’ thoughts on this. GAEV implements a Trimming method. However, I cannot find some descriptions of this step. Such information is very important to users to understand what has been done internally and how it has been done. GAEV also supports “BATCH” mode. Could the authors provide some use cases and let the users know what they should expect in terms of the final HTML report? One typo: “MEGAN can achieve overall functional analysisof microbiome …” should be “MEGAN can achieve overall functional analysis of microbiome …”. In the URL formula, it seems that there are extra spaces after “www”. Please fix it if it is the case. 