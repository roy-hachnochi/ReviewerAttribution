Various QDA software provide similar functionalities in terms of coding operations and organization of codes, for instance, RQDA ( http://rqda.r-forge.r-project.org/ ), WeftQDA ( https://www.pressure.to/qda/ ), Py3QDA ( https://github.com/Ronggui/PyQDA/ ), among others. A more systematic comparison of existing tools and WordCommentsAnalyzer will provide a clear picture on the relative advantages and disadvantages of the latter. It seems that WordCommentsAnalyzer mainly organizes the codes and shows the related coded text segments, but does not support coding operations on-the-fly. The operations of coding, remove coding, and re-coding have to be conducted on the Word Processor side. It would be helpful to potential users to describe this point clearly. Since the operation of coding must be done with Word Processor, it seems that coders have to remember and type the names of codes directly or via the copy-and-paste method. It would be valuable if coders can do the coding via WordCommentsAnalyzer. The most obvious advantage of WordCommentsAnalyzer is its easy use, especially for Windows users. Overall, WordCommentsAnalyzer is a valuable new tool for organizing codes based on Word Processor. 