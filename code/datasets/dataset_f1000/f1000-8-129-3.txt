 Summary This workflow paper proposes an interesting approach for prioritizing gene sets in gene set analysis by utilizing network-based algorithms. The author presented a supposedly working code that is reproducible. They proposed focusing on communities of gene sets in order to identify gene sets that are more relevant to the conditions under study. Nonetheless, they show how to explore singletons and binary systems in the list of significant gene sets. Moreover, natural language processing methods were used to annotate the clusters of gene sets. I found this particular extension very useful to summarize gene sets analysis results. However, I didn't get that far in running the code. Please see my comments below for improvements. Major comments Add code to install pre-requisite packages. In my case I had to run the following command to obtain missing packages: install.packages(c("cowplot", "ggrepel", "kableExtra", "igraph", "GGally", "wordcloud", "tm", "SnowballC")) Add code to install the airway experiment package BiocManager::install("airway", version = "3.8") I managed to reproduce the analysis up to the point of generating the first network. First, it was required to install the c("network", "sna", "scales") packages, which was not explained in the text. Then, error raised while invoking ggnet2: Error in ggnet2(net, size = 2, color = "Direction", palette = palette, : could not coerce net to a network object Not sure whether related to the version of R. This is my R session: R version 3.5.0 (2018-04-23) Platform: x86_64-pc-linux-gnu (64-bit) Running under: RHEL Matrix products: default BLAS:****ps/r/3.5.0/lib64/R/lib/libRblas.so LAPACK: ****/apps/r/3.5.0/lib64/R/lib/libRlapack.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C LC_TIME=en_US.UTF-8 [4] LC_COLLATE=en_US.UTF-8 LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 [7] LC_PAPER=en_US.UTF-8 LC_NAME=C LC_ADDRESS=C [10] LC_TELEPHONE=C LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets methods base other attached packages: [1] airway_1.2.0 SnowballC_0.6.0 tm_0.7-6 [4] NLP_0.2-0 wordcloud_2.6 org.Hs.eg.db_3.7.0 [7] AnnotationDbi_1.44.0 limma_3.38.2 DESeq2_1.22.1 [10] SummarizedExperiment_1.12.0 DelayedArray_0.8.0 BiocParallel_1.16.0 [13] matrixStats_0.54.0 Biobase_2.42.0 GenomicRanges_1.34.0 [16] GenomeInfoDb_1.18.1 IRanges_2.16.0 S4Vectors_0.20.1 [19] BiocGenerics_0.28.0 GGally_1.4.0 igraph_1.2.4 [22] kableExtra_1.0.1 knitr_1.20 reshape2_1.4.3 [25] ggrepel_0.8.0 cowplot_0.9.4 gplots_3.0.3 [28] ggplot2_3.1.0 RColorBrewer_1.1-2 loaded via a namespace (and not attached): [1] bitops_1.0-6 bit64_0.9-8 webshot_0.5.1 httr_1.3.1 [5] rprojroot_1.3-2 tools_3.5.0 backports_1.1.2 R6_2.3.0 [9] rpart_4.1-13 KernSmooth_2.23-15 Hmisc_4.1-1 DBI_1.0.0 [13] lazyeval_0.2.1 colorspace_1.4-0 nnet_7.3-12 withr_2.1.2 [17] tidyselect_0.2.5 gridExtra_2.3 bit_1.1-14 compiler_3.5.0 [21] rvest_0.3.2 htmlTable_1.12 network_1.14-377 xml2_1.2.0 [25] slam_0.1-45 caTools_1.17.1.1 scales_1.0.0 checkmate_1.8.5 [29] readr_1.1.1 genefilter_1.64.0 stringr_1.3.1 digest_0.6.18 [33] foreign_0.8-71 rmarkdown_1.10 XVector_0.22.0 base64enc_0.1-4 [37] pkgconfig_2.0.2 htmltools_0.3.6 htmlwidgets_1.3 rlang_0.3.0.1 [41] rstudioapi_0.8 RSQLite_2.1.1 bindr_0.1.1 statnet.common_4.2.0 [45] gtools_3.8.1 acepack_1.4.1 dplyr_0.7.8 RCurl_1.96-0 [49] magrittr_1.5 GenomeInfoDbData_1.2.0 Formula_1.2-3 Matrix_1.2-15 [53] Rcpp_1.0.0 munsell_0.5.0 stringi_1.2.4 yaml_2.2.0 [57] zlibbioc_1.28.0 plyr_1.8.4 grid_3.5.0 blob_1.1.1 [61] gdata_2.18.0 crayon_1.3.4 lattice_0.20-38 splines_3.5.0 [65] annotate_1.60.0 hms_0.4.2 sna_2.4 locfit_1.5-9.1 [69] pillar_1.3.0 geneplotter_1.60.0 XML_3.99-0 glue_1.3.0 [73] evaluate_0.12 latticeExtra_0.6-28 data.table_1.11.8 gtable_0.2.0 [77] purrr_0.2.5 reshape_0.8.8 assertthat_0.2.0 xtable_1.8-3 [81] coda_0.19-2 viridisLite_0.3.0 survival_2.43-1 tibble_1.4.2 [85] memoise_1.1.0 bindrcpp_0.2.2 cluster_2.0.7-1 There are 58 gene sets that are significant in both the uni-directional and bi-directional tests. The former was assumed to be the determinant of the direction of the gene set, which is a bit confusing here. It would be good if the author could elaborate on the reasoning behind assigning the directional status. It would be good to highlight the relationship between the identified clusters and annotations, and the underlying experimental conditions. Minor comments EGSEAdata experiment package can be used to load huge number of gene sets including MSigDB gene sets. This is an example: library(EGSEAdata) library(EGSEA) gset = buildMSigDBIdx(entrezIDs = res$entrezgene, species = "human", geneSets = "c2", min.size = 3) idx = gset$c2@idx gs.libs = sapply(names(idx), function(x) strsplit(x, "_")[[1]][1]) idx = idx[which(gs.libs %in% c("KEGG", "REACTOME", "BIOCARTA"))] Please see this workflow paper for more information 1 . The workflow is tailored towards the camera analysis. What if users want to use this workflow for other GSA methods? A more generic example is needed. Any possibility to wrap the network analysis code and make it easier for users to invoke as a function? Probably, an R package named RICHNET can be developed along with this wonderful workflow. 