The authors describe a framework for constructing sequence graphs, aligning reads, manipulating graph structures, and extracting them into standard formats (e.g., GFA). This framework is available as both a set of command line tools and a python library which wraps much of the underlying functionality. Their implementation unifies the representation of gaps and overlaps as a single linkage type within the graph. This is the primary theoretical advance of the work. This work is scientifically sound but its description as written could benefit from some minor additions. The software is freely available on GitHub and binary releases of the command line tools are provided. These are functional on a modern linux laptop and clear examples with data are provided. The paper includes the outputs of these examples as figures. The python libraries rely on SWIG and are not included in the binaries. While not requisite for publication, providing the python libraries through pip, conda, or another package manager would increase the reach of the framework. This would match the authors' conclusion that the sdg package provides "a useful codebase for all levels of users." The examples provided are clear and scientifically relevant. The graph mapping and manipulation example using E. coli data (Figure 3) and the description of genotyping a simulated yeast trio (Figure 4) are both realistic. However, the authors should provide run times and machine details for these examples. Both are relatively fast as the datasets are small. There is no need for extensive benchmarking; a footnote for each example would address this adequately. A brief 1-2 sentence discussion of a larger scale example the authors have attempted should also be included. In addition, the phrasing "simulated parent-offspring trio" in the abstract should be modified to make it clear that the data is from yeast. As it is written the phrasing implies the framework may work on human/animal-scale data, though no evidence of this has been provided in this version of the paper. Lastly, a brief description of the similarities and differences between the sequence (distance) graph, the variation graph, and the de Bruijn graph from an assembler such as ABySS should be included in the introduction or provided by a reference. This description need not be longer than two to four sentences in length. This should highlight the similar representations of the graphs (e.g., sequences stored in nodes and linkages/paths described by edges) and the different amounts of information content within the graph types. This would strengthen the critical need for the software and is partially highlighted by the example in Figure 3. As it stands the paper is deserving of indexing. These additions would further strengthen what is already an excellent tool description, I hope without adding too much additional work for the authors. 