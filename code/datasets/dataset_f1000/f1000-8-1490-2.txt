The authors demonstrate a new toolchain and data model for working with sequence graphs. This method allows the user to dynamically interact with sequence graphs made in the process of assembly. They provide a number of examples of the use of the method as well as code snippets to demonstrate its functionality. The library is written in C++, but wrapped in python with SWIG, which should make it useful to many researchers for whom C++ is difficult to use. I find only one thing strange about the work. In the beginning, the authors indicate that there are not interoperable methods for working with sequence graphs and alignments to them, but they have in effect created another competing standard. Are there particular limitations with existing data models that they hope to address with the Sequence Distance Graph framework? How is their model different than the variation graph model, in which distances are provided by a collection of paths (or equivalently alignments) embedded within the sequence graph? 