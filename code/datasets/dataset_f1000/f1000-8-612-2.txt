Overall this is a clearly written paper, although I would take issue with the term "Optimized" in the title. What is "optimal functional annotation"? The abstract includes the phrase "precisely tailor the computational analysis of a ChIP-seq dataset to the specific peak coordinates of the data and its surrounding genomic features". This is a complicated objective and can be unpacked in many ways, specifically with respect to "computational analysis". What the system brings to analysis of ChIP-seq data seems to be tunability and inclusiveness, in the important area of combinatorics of binding events and of histone modifications. ("Inclusiveness" pertains to allowing inspection of the order of proximities.) Can these be related to the term "Optimized" in the title? Footnote 35 gives reference to http://www.doi.org/10.5281/zenodo.2646702 which throws a "Bad Gateway" error. Figure 1: Oscillations in a few traces in the left and right panels are probably artifactual. More stable estimates of the relationship between "normalized peak cluster count" and distance from TSS could be obtained using overlapping sliding windows. I do not find Figure 2 particularly illuminating. The relationship of geneXtendeR and differential expression-oriented packages is not clear and is not described in the caption. It might be more informative to schematize the data structures for peak sets and how they lead to multi-sample hypothesis testing (e.g., with edgeR) or ontology/network inference. Figure 3 is difficult to parse. Somehow a comparative interpretation is desirable, but all 4 panels look qualitatively similar. The y-axis ranges are different and perhaps log rescaling would be useful. Are the plotted points estimates, and if so, are uncertainty intervals of interest? Figure 4 is similarly challenging. Are the oscillations seen after the jumps statistically meaningful?The y axis is labelled "differences". This is not explained in the caption. Figure S1 should employ a logarithmic axis. If we try example(makeNetwork) and then example(makeWordCloud) in the same session, a rat GTF is downloaded twice. BiocFileCache can be used to simplify user interactions with servers if these are needed. In fact, the GTF file used by this package is available to Bioconductor users with the AnnotationHub package. ah = AnnotationHub::AnnotationHub() AnnotationHub::query(ah, c("gtf", "rattus", "84")) AnnotationHub with 3 records # snapshotDate(): 2019-05-02 # $dataprovider: Ensembl # $species: Rattus norvegicus # $rdataclass: GRanges # additional mcols(): taxonomyid, genome, description, # coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, # rdatapath, sourceurl, sourcetype # retrieve records with, e.g., 'object[["AH50914"]]' title AH50914 | Rattus_norvegicus.Rnor_6.0.84.abinitio.gtf AH50915 | Rattus_norvegicus.Rnor_6.0.84.chr.gtf AH50916 | Rattus_norvegicus.Rnor_6.0.84.gtf If we use z = ah[["AH50916"]] downloading 1 resources retrieving 1 resource |==========================================================| 100% loading from cache ‘AH50916 : 57654’ Importing File into R .. we have a cached version of the required annotation. Any package code requiring this GTF information can use AnnotationHub::AnnotationHub()[["AH50916"]] to get it. Thus: AnnotationHub::AnnotationHub()[["AH50916"]] snapshotDate(): 2019-05-02 downloading 0 resources loading from cache ‘AH50916 : 57654’ Importing File into R .. GRanges object with 750896 ranges and 24 metadata columns: seqnames ranges strand | source type score ⁠Rle⁠ | [1] 1 396700-409 676 + | ensembl gene ⁠NA⁠ [2] 1 396700-409676 + | ensembl transcript ⁠NA⁠ … The peaks Input function writes a file "peaks.txt" to the current working directory! This is very poor form and could destroy user data. The function does not even include an option to write the file elsewhere. This content is then regarded as globally accessible to functions like make Network. In summary the paper describes a number of utilities of potential interest, but essential statistical considerations should be enhanced. Downstream work such as network construction is entirely dependent on a fixed set of peak addresses, but the addresses must be associated with false discovery rates and/or boundary uncertainties. The discussion starts with "mark-specific complexity" apparent in Figures 3 and 4 but it is not clear that "complexity" is the right concept here. Different factors have different effects in different contexts, and distance to nearby gene is one component of context. To the extent that the paper gives users a mechanism for "determining the optimal alignment of peaks to a GTF file", I feel it is the concept of optimality raised here, and not the various functions that support "exploration", that should be detailed clearly in the paper. The optimization process should not be referred to the vignette. Once this optimality concept is stated precisely, the roles of the various functions can be usefully highlighted. 