Jarlier and colleagues introduce their work on parallelizing popular bioinformatics programs, which have become the bottleneck for the current scenario of massive NGS data generation even in clinical settings. Authors describe two MPI implementations for the alignment and sorting steps used as part of the NGS data preprocessing in order to better take advantage of parallel architectures. Algorithms are well described and the documentation is good, making really easy the reproducibility of their results 1 . In addition, authors provide software containers (singularity), which can be used in controlled environments including HPC installations. Despite the existing benchmarking efforts carried by authors, a scalability study is missing. Ideally, benchmarking should include varying resources allocation so readers can benefit from such comparison. We would like to suggest, as you have done with varying deep coverage sizes, you make the scalability study through a varying number of processors e.g. 4, 8, 16, 32, 64, 128. It would be also interesting to use as a baseline the normal execution of those programs to illustrate the improvement of the MPI implementation regarding the standard approaches. This way, it would be possible to answer the following questions: Is the MPI version faster when using a single node? Otherwise, from which point is better to use the MPI version than the most common software. I.e. in case the MPI is 2 times slower but scales linearly, the execution time would be shorter when giving the MPI implementation at least 2 nodes. This way, the potential users would know better the scenarios in which using this implementation becomes more interesting. You have mentioned there are similar approximations to this problem. However, you just mention them in the conclusions. Wouldnâ€™t it make sense to discuss similarities and differences with other implementations in the text? Apart from the benchmarking component, it would be interesting to further discuss the scenarios where implementations like this one will be used. It is not clear that clinical settings will have internally very powerful computational facilities for their daily use. Finally, we would like to mention some minor points related to the text itself. Abstract: Moving from the general problem to the specific solution without mentioning that the NGS data preprocessing (alignment and sorting) represent major bottlenecks to timely results deliver for diagnostic use. Methods: Alignment . reference genome file indicate a version. Sorting section . Apparently there is a miswriting of the theoretical computational cost of the algorithm O (n log2 n) that is higher than O (n log n). Minor: Introduction : data each day s data each day. Introduction : align and sort the sequencing data, we developed software align and sort sequencing data, we have developed software. Sorting section : by a pair of processors with performs a compare-split operation by a pair of processors which performs a compare-split operation. 