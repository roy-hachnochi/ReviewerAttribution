In this manuscript, the authors describe the GFF Utilities suite, which is comprised of the GffRead, GffCompare, and trmap utilities. These tools long predate the article and have been in relatively widespread use for some time. For example, GffRead is commonly used to convert files to proper GFF3 format (and to record or catalog formatting errors), as well as to extract the sequences of transcripts (or related features) from a GFF file and associated genome. GffCompare is commonly used as a standard tool in the evaluation of genome-guided assembly, to compare predicted transcripts against an annotation, as well as to merge transcriptome assemblies across multiple samples while discarding duplicates. It is valuable, I think, to have an article describing these tools that can also be cited as they are used and built upon in the community. I found the visual description of the different transcript classification codes (Figure 1) particularly useful. I was able to download and build the source easily according to the instructions in the respective README files. In addition to the source and pre-compiled builds, it is worth noting that both GffRead and GffCompare are available through Bioconda, though I am not sure if the authors of the current manuscript are the Bioconda maintainers for these packages. Overall, the article is clear and describes the tools well. I have only very minor comments. pg 6: "produced by programs like StringTie in respect to" - "produced by programs like StringTie with respect to" I tried compiling both GffRead and GffCompare under multiple versions of G++. With G++5.5.0, everything worked well with only two warnings (a strict overflow warning in gfoAdd() and an unused variable warning for isCodonTableReady). However, when I compiled with G++9.2.0, there were multiple warnings in the GVec class about potentially incorrect uses of memset, which should actually not be an issue as the uses are present in a branch that first checks that the type being set is "primitive". Peeking into the Makefile, I noticed that a particular flag is set to disable this warning under newer versions of G++ (presumably, it does not occur in earlier versions). However, in the line of the makefile that checks this, `g++` is hard-coded, rather than making use of the potentially modified `${CXX}` variable. Changing `g++` to `${CXX}` in the lines of the makefiles defining the `GCCV8` variable resolved this behavior. Finally, this is not an issue with the current manuscript, but rather a general note. In addition to powering the GffRead and GffCompare tools, the Gff utilities source code provides a powerful programmatic interface (API) to parse, manipulate and process GFF and GTF files in the C++ language. If the authors feel it appropriate, a similar note or article describing the features and capabilities of that library may be of interest to a related (though admittedly smaller) part of the community. 