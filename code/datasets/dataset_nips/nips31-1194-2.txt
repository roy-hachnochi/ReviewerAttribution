In this paper, the authors study the problem of non-monotone submodular maximization and they proposed an algorithm with slightly worse guarantee but significant less adaptivity. Here are a few detailed comments, 1. The proposed algorithm is paralleled, but I did find the number of machines required. Can the authors make it clearer? It is critical, because one could easily come up with a paralleled exhaustive search algorithm that is 1-adaptive, always finds the true optima but require exponential number of CPU. Also, around line 115-117, how many samples is needed for calculating \Delta? 2. In the Figure 1 and 2, the x-axis is the number of rounds. But different algorithms have different time complexity per round. Can the author make other plots with respect to actual running time and total running time of all paralleled machine?  