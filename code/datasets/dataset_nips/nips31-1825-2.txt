Overview: This paper studies the problem of (realizable-case) Collaborative PAC learning. In more detail, let H be an hypothesis class, and let h*\in H be the target concept. Assume we are given an access to k unknown distributions D1,…,Dk, and that our goal is to output an hypothesis h such that w.h.p the loss of h w.r.t *each* of the D_i’s is at most epsilon.  The main results in this paper are: 1. An upper bound of O((d+k)(log k + log(1/delta))  / epsilon), were d is the VC dimension of H, and epsilon and delta are the accuracy and confidence parameters. 2. A lower bound of Omega(dlog(k) + klog(d)) for fixed epsilon,delta (epsilon=delta=0.005).  The main technical tool is the Multiplicative Weights method, which is applied similarly like in Adaboost (the authors should discuss the connection with Adaboost and boosting in more detail).  The high-level idea is simple: at each round a mixture of the D_i’s is being weakly learned, and the weights of the mixture are updated in a multiplicative fashion according to the loss of the weak learner. Similar arguments like in the analysis of Adaboost yield an upper bound that is weaker by a factor of log(k) from 1 above (such a bound was obtained by Blum et al. in a previous work). Most of the technical effort is dedicated to shaving this factor.   I think this is a nice result, with a non-trivial variant of Adaboost. The presentation and the english can and should be significantly improved.  A comment to the authors: How do the results and techniques in your paper compare to those in “Improved Algorithms for Collaborative PAC Learniing” (link: https://arxiv.org/abs/1805.08356), and also in “On Communication Complexity of Classification Problems” (link: https://arxiv.org/abs/1711.05893), where variants of Adaboost are also heavily exploited to ensure that different parties agree on the same hypothesis which is consistent (or has low error) w.r.t a distributed sample.