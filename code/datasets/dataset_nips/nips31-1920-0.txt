Brief summary: the authors show that the Runge-Kutta method can be used to discretize a particular second-order ODE (essentially coming from the recent work of Wibisono et al. (2016)), in order to get (near-)optimal convergence rates, provided the loss is convex, smooth, and satisfies two other technical conditions (essentially requiring that the loss be sufficiently flat around its minimizer(s), as well as a uniform bound on the norm of the higher-order derivatives of the loss).  A short empirical study is presented to verify the theoretical predictions.  Originality: this seems like good work.  The originality over the paper of Wibisono et al. (2016) is that here the authors stick to a (family of) first-order method(s) achieving (near-)optimal convergence rates.  The proofs used to establish the convergence rate seem to be nonobvious and fairly involved.  Clarity: the paper is generally easy to follow.  Quality: again, the work here seems good, so I have only a few points to raise. - First of all, I think you should clarify whether the soln to the ODE in Eq 11 exists and is unique … presumably this follows more or less directly from Wibisono et al. (2016)? - As each iteration of Runge-Kutta is more expensive than a single iteration of the Euler method (owing to the \sum_{i=1}^S in Eq 6), the rate is a little "misleading" … can you guys comment on this? - Line 136: the statement in bold seems important, but is never really revisited / explained further … can you clarify in the main text? - Do you have any guidance on how to choose the tuning parameter "p" in practice? - Can you please include the details on how you generated the data A,b for the numerical experiments in Sec 5?  (As-is, it seems out of reach to reproduce your experimental results.)  Significance: understanding the links between dynamical systems and optimization is an important topic right now.  This paper makes a nice contribution to the literature, by showing that ideas from dynamical systems can give rise to optimal algorithms for convex optimization … although it's not totally clear to me how practical the algorithm presented in the paper actually is, at the moment.  Update after the author response phase: thanks for responding to my questions.  Please do try to include all those points in the revision.  I also think that it may not be a bad idea to integrate point 3.1 into the revision, as well. 