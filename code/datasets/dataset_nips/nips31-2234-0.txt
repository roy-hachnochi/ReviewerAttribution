The authors propose a method for learning how to propose informative regions to be labelled for matting. The model is based on an RNN that uses a matting solver as a black box. Given that in principle the matting solver is non-differentiable, the authors rely on posing the training process as a reinforcement learning problem.  The problem is interesting, and the overall idea of making the model learn to propose informative regions is nice. However the execution of the idea is unsatisfactory for the following reasons:  The reinforcement learning approach described is based on the direct application of the algorithm developed in ref [3] in the paper. However, this approach is not directly applicable here. The way the adaptation of this approach is done for the matting application is not clear:  - In particular in line 121 it is said that the first term of eq. 4 is dropped. That is equivalent to state that p(\alpha | ...) is not at all dependent on \Theeta. That is a key part of the derivation of the algorithm that seems to not hold with other parts of the paper.  - Related to the previous point, how is the accumulated trimap, s_i, taken into account in the reinforcement learning process? It does not appear in Sec. 2.3 at all.  - Line 114 states that minimizing eq. 2 is equivalent to maximizing log p(...), but this is only right if assuming that p is Gaussian.   Regarding the experimental section, for B2 it is not explained how each CNN produces n different regions at once.  Some parts of the paper lack clarity or contain confusing information. Some examples:  - According to line 91, it seems that l_i is a pixel, but later (e.g. line 116) it is called region, which is rather misleading.   - When explaining the architecture in Sec. 2.2, it would help the reader know which space the feature representations are contained in (e.g. is g_0 a 2D, or 3D tensor?).  - In line 120, when it is stated that "Note that the first derivation in Eq. 4 is", the authors may mean the first term of the r.h.s. of eq. 4.  In summary, it is an interesting problem, but the paper contains too many undefined points as to be considered for NIPS.