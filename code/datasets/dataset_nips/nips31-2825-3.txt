This paper is concerned with the so-called 'sharp Sinkhorn distance', which can be understood as lying in between the Wasserstein distance (no regularization) and the vanilla Sinkhorn distance.   The author's main contribution is having showed the smoothness of the sharp distance (with respect to a vector of the simplex indicating the weights of a fixed support) along with formulae for its gradient. This computation is crucial in cases when one requires to find a barycenter between measures, assuming the support is known.  The authors show the sharp Sinkhorn distance outperfroms the vanilla distance an other methods in the Wasserstein barycenter problem, and in a structured prediction task as well (learning with a Wasserstein loss, which also requires the computation of a barycenter).  My judgement of recommending acceptance is based on my belief the four criteria are met: The paper is clear and easy to follow. It is of high quality and contains a thorough supplement. It is original, to my understanding: I have not seen similar ideas being published elsewhere. It is relevant: they expand the tookit of machine learning by proposing a new algorithm for approximate learning of a barycenter.  That being said, I still have criticism that I hope the authors will address. First, although it is commented in remark 1, I would have liked a more in-depth comparison of complexity of vanilla Sinkhorn, sharp Sinkhorn and Wasserstein. My concern here is that sharp Sinkhorn does indeed seem to be quite consuming as it involves inversion of matrices. Because of this, I tend to believe it may throw us back to the Wasserstein distance. Therefore, my 'dream' here would be seeing a more transparent table showing how much does it take in practice to compute the barycenters (something like an expanded table 1 including time) for all methods. Additionally, the authors do not seem to highlight enough (this is mentioned only in the supplementary material) that in practice none the vanilla or sharp Sinkhorn can be attained as the associated lagrange multiplied \alpha^*, \beta^* can be computed only through a fixed point iteration (Sinkhorn). When stating theoretical results this can be very subtle (see recent papers by Jonathan Weed, Phillipe Rigollet, Jason Alschuler, etc) and one should proceed with care. It would be great if the authors could at least hint on how to proceed there.  Notice also a minor mistake that should be corrected: equations 6 and 7 do not make sense, there is a missing or redundant \min or \argmin sign. 