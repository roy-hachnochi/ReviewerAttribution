Main idea: The paper tackles the problem of scene graph prediction -- a special problem in structured prediction. As in many deep learning models for structured prediction, the central problem is what network architecture should be used. This paper argues that the network should be permutation-invariant wrt inputs, and thus proposes an architecture satisfied such kind of property (+ attention and recurrent forward). Experiments show that the proposed method is comparable with the state-of-the-art.   Strength: - The paper is well written. Most of the details of the model and training are covered. It will be great if the authors publish their code for reproducibility.  - The experiments are well organized. Outperformance has shown in terms of the criterion SGCI.   Weakness:  - The motivation to introduce permutation invariance to structured prediction is not clear. I understand this is a particular inductive bias that the authors would like to impose, but how is this property related to structured prediction? in terms of either learning theory or empirical observations? Or it may be more interesting to know how do the authors come up with this idea. - Error in Theorem 1: The direction (1) => graph-permutation invariant (GPI) is easy to understand. However, I don't think GPI => (1) holds true in general (any GPI function can be expressed as in (1) sounds like a strong statement). The proof for this direction is really hard to follow. Even if this proof is correct, a major revision is needed. As a counter example, let's construct a graph-labeling function with each element of its output the same = \sum_i \sum_{j \neq i} \phi_ij(z_ij). This function is GPI by definition. E.g., let \phi_ij = \phi^{i*j}. Note that in (1), \phi is shared by all ij, and \alpha only takes \sum \phi(z_ij) as its 2nd argument, so we cannot introduce \phi_ij by \alpha. If I'm not mistaken, there is no way to express this counter example in the form of (1).   After rebuttal: The rebuttal addressed some of my concerns, especially the counter example as pointed out doesn't hold true. I tend to believe that graph-permutation invariance could be a case of inductive bias for structured prediction, which deserves to be examined by more audiences. The major concern now is the writing. It still sounds a strong statement to me that any graph-permutation invariant function can be expressed as in (1). Rather than presenting the idea by a compact proof. A major rewriting for showing the intuition of (1) would be very helpful. For example, to show that message-passing algorithms can be considered as special cases. 