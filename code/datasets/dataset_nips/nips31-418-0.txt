The paper studies the problem of maximizing a submodular function on a stream subject to a p-matchoid constraint. A p-matchoid constraint is a system of m matroid constraints such that each element participates in at most p of those matroid constraints. Let k be the maximum size of the feasible sets. The main result of the paper is an algorithm for non-monotone submodular functions that gets approximation 4p+2, improving the previous result of 4p+4*sqrt(p)+1. A by-product of their result is an algorithm for monotone functions that gets the same approximation as previous works (4p) but with faster running time.  The improvement comes from the idea that for every element, one can discard it with probability 2p/(2p+1). Even though we lose because we might accidentally remove elements in OPT, this can be balanced with the gain we get when including those elements (some of these terms were ignored before).  As the matchoid constraint is quite general, the charging argument when the algorithm exchanges existing elements in the solution for a new element is fairly complicated and I have not checked the proof carefully.  Overall the paper has a nice idea to use the gain from having elements in OPT added to the solution at some point to counteract removing elements randomly and achieving the same approximation as before. One downside is that I am not sure why one has to use streaming algorithm for the mentioned applications. It seems in all cases, the data is already stored and not coming online. They also seem small enough to fit in memory at once.