In this paper, the authors are formally defining the problem of core recovery of graphs through the lens of vertex cover. Specifically, the paper makes a connection with real-world applications through the way that most datasets are crawled; there is a set of `core` nodes that are flagged to be collected, and a set of `fringe` nodes that are in the dataset because of their interactions with the core. In the case where the `core` and `fringe` labels are hidden, the authors aim to provide theoretically-sound algorithms for recovering them.  In the network science field, recovering the core of a network is a fairly common task. It helps the analyst gather intuition about which parts of the dataset are crucial and `important`. Oftentimes, the analyst wants to avoid making claims for the fringe nodes, especially since the collection task is not focusing on them. As the authors note, there have been many, mostly heuristic, methods that are trying to approach this problem indirectly. Here, the authors propose an algorithm that is directly dealing with the core recovery. Additionally, the proposed algorithm comes with theoretical guarantees, which make it more elegant and more powerful than adhoc heuristics.  Apart from the elegant formulation and the careful theoretical analysis  that the authors include in this work, there is also an adequate practical analysis of the proposed algorithm on real data. The comparison in the experimental section is made against a large number of well-known heuristics. The results indicate the power of the algorithm, and its advantage over the baseline.  While the paper is written carefully and detailed, parts of the writing can be improved towards an smoother flow. Section 2, which is the core part of this paper, is very dense and contains too much information without a strong storyline. In particular, it is not easy for the reader to guess how each of the theorems, lemmas and propositions will inform the design of the algorithm. In other words, the authors try to enumerate all possible theoretical results and then summarize them into Algorithm UMVC. My suggestion would be that the authors try to hint the algorithm design early on, so that the reader can more easily follow the theoretical analysis; it is always better to understand ahead of time where each theorem will become useful. Specifically, the authors should focus their rewriting in Section 2.2, which is unclear what purpose it serves until Section 3.  Another place that needs more attention is Figure 2 and the text that accompanies it. It is not clear what its purpose is, its legend is not very informative. Additionally, is the "Stochastic Block Model" paragraph of Section 2.4 used anywhere in the algorithm, or is it just an observation?  Finally, it would improve the clarity if the theoretical guarantees of the algorithm together with its runtime complexity are summarized in a Lemma, so that the reader can easily refer to this information without having to scan the whole paper.  Overall, this paper formulates a well-studied problem in an elegant way, and proposes a theoretically-sound algorithm for this problem. In fact, this algorithm will have significant impact in many real-world data analytics tasks. The clarity of the writing, although not bad, has room for improvement. The authors, although targeting for a more theoretical type of writing, include an adequate experimental section  ----  After reading the authors' response to the reviews, I am satisfied with their answers to the very reasonable points raised by Reviewer 3. I am also happy that my own comments proved to be helpful as well.