I really enjoyed this paper. The idea of just simultaneously computing the gradient with respect to model parameters and the input images at the same time is simple and. elegant. It is surprising it works so well. I am also glad now that like the same PGD based technique works well on Cifar and ImageNet.  Few Comments: 1) Since your method is so much faster it would be *great* to have error bars on your main tables/results. I am sure the variance is small but it would be nice to have that in the paper, it is also good practice for the community. 2) I am not sure what figure 3 is supposed to sho, it might be nice to contrast this with a non-robust model to really show the difference between the landscape between the two "robust"models (free and pgd) 3) You say there is *no* cost to increasing m in the cifar-100 section, but this is only true as long as m is less than the total number of epochs. I presume these algorithms wouldn't converge well in a low number of epochs (lets say 1 epoch). In fact it would be good to have that plot/table.  4) It would be nice to see the code to see how the fast gradient computation worked :) 5) Again since your method is so much faster it would be excellent to see how much more robustness you get on ImageNet by training adversarial on the *entire* Imagenet-11k (10 million example) training set. Recent work "Unlabeled Data Improves Adversarial Robustness" By Carmon et al has shown that adding more unlabeled data can improve robustness and "Adversarially Robust Generalization Requires More Data" by Schmidt et al postulates that robust generalization requires more data, so adversarial training on all 10 million ImageNet images which have roughly the same label quality as the standard 1.2 million training set might greatly improve performance. 6) It would be good to try the "stronger" attacks presented in https://github.com/MadryLab/cifar10_challenge just to see if these break your model in anyway 7) A plot like figure 7 in https://arxiv.org/pdf/1901.10513.pdf would be great, just another test to make sure your models are truly robust.