The authors propose a method of combining multiple sub-policies with continuous action spaces by multiplicative composition (instead of the standard additive model in options,etc.). The sub policies are pre-trained with imitation learning. MCP shows competitive or much better results than other state of the art hierarchical and latent space methods on challenging high-dimensional domains (the T-Rex playing soccer!).   Pros: 1) The idea is clearly written and with several details for re-implementation 2) Compelling results on challenging environments 3) Good baseline comparisons with very recent papers 4) The analysis with latent space methods is really appreciated  Cons: 1) I’m not sure how novel the idea is, as there is a lot of literature on using an ensemble or mixture of experts/dynamics models/policies, etc. That being said, the results are very compelling. A possible area of overlap is with the motion generation literature which the paper does not discuss e.g. Riemannian Motion Policies/RMPFlow (Ratliff et.al) are used to combine multiple policies in a modular and hierarchical fashion and transfer between different spaces. Discovery of Deep Continuous Options by Krishnan et al. may also be relevant to discuss.  2) I’m not sure if the option-critic baseline is fair. As far as I understand, OC learns the options (they don’t need to be hand defined) and in MCP there is a clear separation between pre-training the skills and learning the gating. Perhaps a better baseline would be to pre-train the options in OC (in the same way as MCP) and compare against the full MCP pipeline. Then, we can see  3) Do you hand-define the training for the sub policies (its stated that there are 8 sub-skills). For instance, skill #1 is for walking, #2 is using the foot to kick the ball, #3 is for turning, etc.?  4) What are the crucial hyperparameters in MCP? Some insight regarding this would be useful.  5) Since the paper claims to beat recent state-of-the-art methods (e.g. Figure 4) in non-standard environments like the T-Rex dribbling (i.e. its not an open ai gym task), the authors should release code.