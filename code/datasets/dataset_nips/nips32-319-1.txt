The analysis of the main bottlenecks and scalabillity issues of state-of-the-art implementations of sequential and parallel coordinate descent algorithms -- in particular in realistic numa configurations -- is well-organized, clear and the flow of the paper relies on this excellent introduction and description.  The algorithmic techniques proposed in this work seem new, and impactful. First, one of the main issues is accessing the model vector, which can be cache-line inefficient. The authors introduce the concept of buckets, which is new as a tool to solve the latter issue. In addition, this new concept serves at reducing the computational time of randomizing all the coordinates during the optimization. Second, in order to overcome the issue of accessing efficiently the shared predictions' vector -- which, the authors argue, can cause the algorithm to diverge when scaling to a large number of threads, and which effect is accentuated in a numa configuration --  the authors propose a way to replicate the vector across threads. Third, they carefully adapt their two previous ideas to numa architectures.  As illustrated by extensive numerical simulations, they are able to overcome scalability issues of some parallel coordinate descent algorithms.   Finally, the algorithm is proved to converge.  Overall, I think this is a very good paper, well-written, and I recommend it for acceptance.    