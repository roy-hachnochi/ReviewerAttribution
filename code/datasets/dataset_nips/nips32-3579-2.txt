This paper focused mainly on the PAC top-k-subset selection problem in an adaptive round model, which means the authors are not only interested in the sample complexity of the proposed algorithm, but also try to achieve minimal number of rounds used. The motivation of this setting has been stated and the main text is globally well written.  The algorithms are elimination-based that try to kill as much arms as they can in each round to reduce the round complexity. It appears that the query complexity in the fixed-confidence setting stays optimal and shows a good empirical performance as well.  I have a major technique concern, however, regarding the proof of Lemma 1. In equation 7, you are using a union bound over all iterations r. But the Hoeffding bound only holds for iteration r if i^* has been updated at this iteration. What if it is not updated at this iteration? \hat{\theta_i^*} >= \theta_i^* - \epsilon/8 holds for iteration r only when it holds for iteration r-1, but that cannot be true from the very beginning. Maybe I am missing something, but I really need more clarification on this part, which seems to be a crucial lemma in this paper.  Otherwise, regarding the experiments, have you ever thought of comparing \deltaE to some other fixed confidence BAI algorithms and \deltaER to some fixed budget BAI algorithms. Of course, it is not comparable straightforwardly, but have you thought of proposing some naive adaptation of those algorithms to your setting?  Minor: - I would suggest the authors to make the motivation more clear as you only stated the use of muliple testing for several applications but didn't really explain why we need to do so in the real world - The Exponential-Gap-Elimination alogorithm could have been detailed in the paper (or appendix), otherwise the paper is not self-contained  Update after author feedback: I am convinced by the author's feedback regarding the proof, and thus increased the score. In summary, this paper has some strong theoretical results that worth being published in NeurIPS. 