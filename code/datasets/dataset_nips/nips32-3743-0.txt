Review --------  This paper is very well written and easy to follow. The Wasserstein barycenter problem computes the Frechet mean of a set of probability distributions. When the support of the unknown barycenter is fixed, the problem is a LP problem. If not, one can alternatively minimize with respect to the sample points and the probability weights. The authors propose a general accelerated algorithm for both cases with a cubic complexity with respect to the dimension. The main finding of this work is that their method solves the OT problem without strictly convex regularization (such as entropy) to speed up the computation. Thus, they manage to obtain more accurate estimations of the barycenter in a competitive time.  Questions ---------  1. In L.79-80, the authors mention "Our algorithms also inherits 80 a natural structure potentially fitting parallel computing scheme well". What does "potentially" exactly mean ? Since Sinkhorn's algorithm (IBP) is parallelizable on the N axis (across number of input distributions), this statement deserves to be discussed.  2. Perhaps I am missing something but if the complexity of the proposed method is cubic w.r.t to the dimension, how come the plots of figure 4 show a linear rate on the second row ? When varying m, does the dimension of ALL distributions not change at the same time ?  3. the second column of Figure 4 is not clear. The computation time is not already displayed on the first column ? And why not all methods are displayed on the last 3 columns ?  4. On regular grids such as images, the iterations of Sinkhorn's algorithm can be written as Kernel convolutions (if the squared l2 distance is used as a ground metric, which is the case here). This idea was introduced in https://people.csail.mit.edu/jsolomon/assets/convolutional_w2.compressed.pdf but is not very clear in that paper. Briefly, each iteration can be seen as a Gaussian smoothing which -- thanks to the separability of the squared l2 --  can be applied on rows and columns independently. This results in a reduced complexity O(Nm^2) => O(Nm^3/2) of each iteration of N 2D distributions in R^m. This trick is crucial and should have been used when comparing with Sinkhorn. 