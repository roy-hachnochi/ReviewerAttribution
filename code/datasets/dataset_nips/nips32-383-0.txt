This paper was proposed to optimize and simplify network architectures based on a fixed topological structure, i.e., directed acyclic graph. The search space of this paper is the operation combination space. To simplify the structure, some pruning actions are added in to the search space. Further, it is formulated as a reinforcement learning problem, and learnt by graph convolution networks. This paper is not well-written and well-organized. There are some typos and grammatical issues in this paper. Some more details I am more concerned about are listed below: 1. For line 43 of this paper, large search space means large probability to find the better network architecture. Why large search space is a limitation of NAO? 2. Based on the simplification action design of this paper (Figure 2 (c)), how to get the skip connections for the linear network architecture such as VGG? 3. Why the generated networks have two inputs? In another word, “-1” and “-2” mean what in Figure 3, 4? 4. I don’t think the optimization problem formulation (Eq. 2) is reasonable. Because the purpose of NAS is to find the best operation setting for the best structure. But the formulation tends to find the best expected operation setting for all structures. 5. Can you show more details about how to solve three challenges which are proposed in line 131 to 136? 6. On experiments, can you show the training cost of NAT, i.e., extra time cost after NAS phase? 