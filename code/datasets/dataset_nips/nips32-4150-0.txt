Given few RGBD images of a real indoor scene as well as camera locations where these were taken, the algorithm predicts RGBD images takes from different camera locations. The novelty is the use of denoising auto-encoder for a given view and finding latent representations that are consistent for different views.   Detailed comments:  - It would be good if the whole process was described in steps because it wasn’t clear what the overall approach is from the start (may be it would be for someone working on a similar topic). Some figures are good, but could be better - together with such description. Something like the following would be useful for me: A) We are given a set of RGBD views along with camera locations of a given scene. Given a subset of these views we would like to predict the other set (given camera locations) B) For each given view we can map each RGBD pixel into 3d space using plain geometry. C) We can then project these pixels into a new view again using plain geometry. Some of the pixel locations in the new view will not be filled, we called those holes. Some of them will have multiple guess - we use a heuristic that choses these values as … (explain in one sentence) D) For each view we train a denoising auto-encoder to fill missing details of a given view.  E) To make the filled details self consistent we do the following. For each view we modify the latent to be consistent with other views as follows: We take latent of n-1 views, project them to pixels, then extract the 3d locations of these pixels, project them to the remaining view and impose a loss that makes this view similar to that decoded from the corresponding latent representation of that view. We optimise all the latents by gradient descent. There could be a figure going with that ,or perhaps what you already have but with this kind of description in the caption.   86: It would be good to describe g and K of the camera. 94: …describe what are non-holes 102: May be renderer shouldn’t be in the supplement, seems like the fundamental component. May be at least explain intuitively what it is doing (especially for people not familiar with this literature). Why exp(-d) (from supplement)  - so its differentiable? Gan: It is likely that you gan is not well trained and could be made better. It would also be good to train both - simple reconstruction to ground it and create a good representations and then gan to hallucinate the right details.  - It would be good if a simpler solution was found - there are lot of regularisers and choices here. How much hyper parameter optimisation was there.  - Show more source, target and unpainted images (in supplement say) - just to see more results of how well it work.  167: Why only non-holes of the second v since the first one is auto encoded and has values everywhere.   Pros:  Nice use of denoising auto encoder and the self-consistency training Cons:  - Relying on a depth Channel - which provide a clear grounding of each pixel and mapping between different views - it would be much better if such can things can be inferred. - Blurry filling - using a proper generative model would be good (non-gan might work for this as well)  