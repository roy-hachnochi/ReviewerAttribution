Summary: The main points in the paper are: -- expected reward objective has exponentially many local maxima -- smooth risk and hence, the new loss L(q, r, x) which are both calibrated can be used and L is strongly convex implying a unique global optimum. -- experiments with cost-sensitive classification on MNIST and CIFAR -- batch contextual bandits: generalized reward imputation model, and showing that a particular surrogate loss which is strongly convex (under some imputation models) tends to perform better empirically.  Originality: The work is original.  Clarity: The paper is clear to read, except some details in the experimental section, on page 4, where the meanings of the risk R(\pi) is not described clearly.   Significance and comments: First, in the new objective for contextual bandits, the authors mention that this objective is not the same as the trust-region or proximal objectives used in RL (line 237), but how does this compare with the maximum entropy RL (for example, Harrnoja et.al, Soft Q-learning and Soft actor-critic) objectives with the same policy and value function/reward models? In these maxent RL formulations, an estimator similar to Eqn 12, Page 5 is optimized. I would appreciate some discussion on this connection. Second, in both these cases, can we provide some guarantees on the test-time performance and possibly some guarantees outside of the seen (x, a, r_a) tuples? The model q is supposed to generalize over these tuples, but can we say something concretely about the performance of the policy learned using the proposed objective? Empirically, the proposed objectives perform a bit better than the other baselines and outperform methods like POEM on standard benchmarks.   Overall, I like the idea of looking at surrogates for learning from logged data in a bandit setting, but I find some discussion on how this relates to existing works missing -- for example -- regularized MDPs (entropy, or generally, Bregman divergence regularized MDPs). Also, some discussion on how the proposed objective would "generalize" during training, and what considerations we should keep in mind at test time when using their approach would be appreciated. What I mean by this is that some discussion on the guarantees provided on the expected return of the learned policy under an arbitrary context distribution and action distribution of learned policy would be interesting (E_{x \sim p(x), a \sim \pi(x)} [r(x, a)]) and not just the data distribution ((x, a, r_a) \in D).