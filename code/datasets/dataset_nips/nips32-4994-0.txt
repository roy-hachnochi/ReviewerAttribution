This paper studies the metric elicitation problem, a problem proposed by [7] (AISTATS'19 paper). Unlike the previous work on the binary classification, this paper generalizes to the multi-class setting.   The authors defined two types of metrics for multi-class classification, Diagonal Linear Performance Metric (DLPM) and Linear Performance Metric (LPM), and designed algorithms for the two type of metrics respectively. The algorithm for DLPM is relatively simple: just use binary-search like [7] and apply it for (k-1) times. The LPM case is much more complicated - the authors proposed a coordinate-wise binary-search style algorithm based on the geometry of the feasible set. Theoretical guarantees for both algorithms are provided.  About the presentation of the main results: I am a little confused by the presentation of the main results. To me, it seems like the most interesting (and practical) performance metric, is the linear-fractional one in Appendix E.2. Why isn't this (perhaps the most important one) presented and highlighted in the main text? Is there any particular reason for it? Disclaimer: I have NOT checked the (very long!) appendix very carefully.    About the assumptions: the assumptions in the main text (assumptions 1&2) look standard to me. But in the appendix, I am not sure why assumptions 3&4 are necessary - they seem quite unnatural to me. Since these linear-fractional settings are the more important ones, I hope the authors can explain a bit on this.  About the optimality of the bounds: It is nice that the proposed algorithms all have theoretical guarantees. But how good are these algorithms? In [7], there is a simple O(log(1/eps)) lower bound on query complexity for binary classification. However, in this paper, I cannot find any lower bounds. It does seem like the O(k) and O(log(1/eps)) is necessary in theorem 1 (but I still hope that we can have a formal lower bound). But for the dependency on the feedback noise eps_omega, theorem 1 has a \sqrt(eps_omega) overhead on the error, but theorem 2 has a  sqrt(q*eps_omega) = O(k* \sqrt(eps_omega)). Note that this term is important since it does not go to zero when eps goes to zero. How necessary is the extra factor of k here?  Overall, with the concerns above, I think this paper is marginally below the acceptance threshold. But I am happy to increase my score if the authors can address these issues in the response. ======================== After the author response, I think the authors addressed part of my concerns, so I raised my score by 1pt. However, I agree with reviewer 2 that the writing and experiments can be improved, so I won't increase my score beyond that.