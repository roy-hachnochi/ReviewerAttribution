   The paper is clearly and well written and together with the supplement it should be possible to reimplement the renderer and the experiments.   The qualitative experiments on synthetic data are impressive and the quantitative evaluation shows the performance of the proposed system relative to others.   Developing differentiable rewnderers is important to enable the inference of 3D quantities such as geometry, and lighting effects based on 2D image observations. Since rasterization is still one of the most used rendering techniques for various areas of research (excepting graphics) a differentiable model for this renderer is important to advance the state of the art in the community. The authors show that the proposed renderer can be used to take analytic gradients with respect to all commonly used image formation parameters. This is an important contribution.      Some questions:        1) the renderer is called DIB but it seems the propper acronym would be IBD (since it seems to stand for Interpolation-based Differentiable). I would make that consistent.         2) Regarding z-buffering: It seems that in gradient updates to the vertex locations the z-buffering might change (i.e. which primitive is the closest one). Do you recompute the z-biuffering at each gradient step or is it fixed based on the initial view when optimizing vertex locations?         3) In Fig. 2 f) you seem to be optimizing over the pose of the tea pot. Is it simply a matter of taking gradients all the way down to the pose of the tea pot and updating that in a gradient descent fashion?         4) It would be useful to get an intiuition for relative timing between the proposed renderer and others to see that tradeoff and some more reasoning as to why one should us the rasterization based renderer vs the ray tracing one form [15]. Is it simplicity? Computational efficiency? Speed?        5) l 126: I am not sure what you mean b y the alpha channel prediction? Do you simply mean that you store the value of A_i' in the alpha channel a t pixel p_i' ?      