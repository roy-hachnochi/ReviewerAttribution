This paper introduces TFiLM, a temporal extension to Feature-wise Linear Modulation (FiLM) layers which is especially well-suited to sequence modelling tasks. The main contribution is the introduction of a novel architecture that effectively uses convolutional and recurrent layers. Specifically, the authors propose the following processing pipeline: 1) perform a convolutional layer, 2) split the resulting activations in T blocks 3), max-pool the representations within each block, 4) apply an LSTM over the block representations which outputs affine scaling parameters at each step, 5) modulate the representations in each block with the FiLM parameters. The paper evaluates the new architecture on three sequence modelling tasks: text classification, audio super resolution, and chromatin immunoprecipitation sequence super-resolution.   For the text classification tasks, the proposed architecture is compared against an LSTM and ConvNet baseline. The proposed architecture always outperforms the pure ConvNet baseline, and improves over the LSTM when the context is long. For the super-resolution tasks, the TFILM architecture consistently outperforms ConvNet baselines.    Strengths: - The paper is well-written and easy-to-follow - The proposed architecture is easy to implement and performs well across a wide array of sequence modelling tasks  Main concerns: - While the baselines are sensible, the paper doesn’t report the state-of-the-art results for the benchmarks. Reporting SOTA numbers would increase my confidence that you’ve put enough effort into tuning the hyper parameters of the baselines.  - The RNN enforces left-to-right processing. I wonder whether two-way processing would further increase performance, for example with a bidirectional RNN or transformer model.  Did you experiment with this?  Minor: - Missing citations: The self-modulation technique is very related to Squeeze-and-Excitation networks, Hu et al. Also, FiLM layers for VQA were introduced in Modulating Early Visual Processing by Language, de Vries et al.  - l. 109 It is only until this line that you specify that you’re using max-pooling. I’d suggest to specify this earlier in the manuscript. 