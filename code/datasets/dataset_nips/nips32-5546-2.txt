Summary:  This paper considers the problem of recovering multiple sparse vectors from their linear (possibly noisy) measurements, under the setting that one can query a vector and the oracle returns the measurement computed at one of the unknown sparse vectors. Both noiseless case and noisy case are considered, and in each case the authors propose an algorithm and analyze its query complexity. The proposed algorithm has three major steps: first, query the same vector multiple times and separate the measurements corresponding to different sparse vectors; second, identify the measurements of different query vectors with the same sparse vector; third, recover the sparse vectors using the convectional compressed sensing recovery algorithm.  Strength:  The proposed algorithms seems new and has stronger theoretical guarantees (e.g., weaker condition in a more general setting) than the previous work.  Weakness:  - I am concerned about the practical performance of the proposed algorithms. Specifically, Algorithm 1 uses Vandermonde matrix, which is known to be very ill-conditioned and numerically unstable, especially for large $n$ and small $\alpha$. Since $\alpha$ can be as small as $1/k^2L^2$, I am worried that the algorithm may fail in practice even for moderate size $n$, $k$, and $L$. The paper is more convincing if the authors could provide experimental results for the proposed algorithms.  - Section 3.2 (which is claimed to be the main contribution of this paper) skips a lot of the technical details, making it hard for readers to fully understand Algorithm 3. For example, what is the intuition behind the three constants defined in Line 259-261; how do we know when a triplet is good or not (Line 268-270) in practice; the alignment step (Line 274-280) is difficult to follow. I would suggest moving the pseudocode to the appendix, and explain the algorithm in more details in the paper.   - No time and space complexity is provided for the proposed algorithm.   Minor:  In the abstract the author briefly mention the connection between their algorithm and error correcting codes. It would be better to describe that connection in more detail when presenting the algorithm.  -----------------After reading the rebuttal------------------- Thanks for the clarification on distinguishing between good or bad triplets. I understand that this work is mainly theoretical and would still appreciate it if small empirical results (or even toy examples) can be added to help evaluate the algorithm in practice.   Section 3.2 (which is a major contribution of this paper) skips a lot of the technical details. It would be better if the authors can explain the denoising and alignment steps in more details. For example, move Lemma 18 from the appendix to the main paper so that the readers can understand how Algorithm 3 matches two good query triplets.  Overall Section 2 and 3.1 are well-written. The theoretical results are new and interesting. I will increase my score. 