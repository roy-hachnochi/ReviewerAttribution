This paper is generally well-written and quite clear. The contributions seem significant though the setting may be a bit narrow with the squared loss only, no exogenous variables, known variance, horizon and bound on the total variation... I would be interested in more details on real applications (or experiments with real dataset rather same simulations) and with how this setting may be extended to the use of covariates.   Other comments: - In the classical notion of dynamic regret (see e.g., Zinkevich 03), the complexity is measured in terms of the total variation of the comparison sequence (x_t), not the one of the true sequence (theta_t). This has the advantage to provide some kind of oracle inequality. It would be nice to discuss the optimal bound in that case and if the current analysis might be extended to it. - If I understood well, the improvement over Besbe et al. 2015, is due to the squared loss (instead of general strongly convex losses) which allows a bias-variance separation in the analysis. Is this only possible for squared loss or might this be true for a wide class of loss functions (such as self-concordant losses)?  - I did not understand very well how this setting falls into the framework of online non-parametric regression. I would enjoy more explanations. Furthermore, it is mentioned in the introduction (l.148) that the algorithm provided here is the first polynomial time algorithm with O(n^(1/3)) regret though in the Appendix it is said that the one of Gaillard and Gerchinovitz 2015 has a complexity O(n^(7/3)).  Besides, could your lower-bound (with the C^2 term) be re-obtained from their minimax rate? - Would the term C^2 in the lower-bound be necessary if we assumed all the theta to be bounded?  - How the algorithm could be adapted to unknown meta-parameters: horizon (n), noise variance (sigma) and bound on the total variation? I am wondering if a doubling trick or a meta-aggregation using an expert advice algorithm would be sufficient. By the way, sigma should be added as a meta-parameter of the algorithm.    