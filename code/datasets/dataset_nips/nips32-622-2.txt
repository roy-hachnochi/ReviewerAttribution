EDIT after rebuttal:  Overall, I agree that this should be viewed as a theory/algorithm paper; on that note I thought having the same technique apply to more than one related model would definitely help the paper. The authors did say in the rebuttal that their technique extends to two other extensions they consider. I think that definitely makes this paper technically stronger.  In terms of fit, my initial impression was that this could be useful in applications of learning to rank when more information is available or can be obtained cheaply; thus becoming an online combinatorial optimization problem (the typical approach seems to assume bandit feedback). Also, since the algorithm is easy to implement, I assumed that practicality of the algorithm is not much of a concern. But given that I have personally not worked with such applications, I would refrain from making stronger claims. I just chose to give the paper the benefit of doubt.  Nonetheless, the authors could justify the fit better for the reader by coming up with a concrete application and test their algorithm (some of these prior work that uses bandits seem to have them) in the future version.  Post discussion/rebuttal I would still hold my opinion that this is a weak accept; there is something in this paper for a small segment of this community. Just not sure if it will be more broadly relevant.    ------ This paper considers a generalization of the secretary problem called the secretary ranking problem. We have n elements coming online in a random permutation order with inherent ordering amongst them. When an element i arrives, we have an oracle that gives results of pairwise comparison of element i with all elements that have arrived so far. Based on this information, the goal is to assign a rank to element i which is irrevocable. After all the n elements have arrived, the penalty paid by the algorithm is the total number of inversions in the assigned ranks. The authors device an algorithm that is tight and obtains a $O(n \sqrt{n})$ number of inversions. The algorithm is ``simple'' in the sense that it is easy to implement (though highly non-tricial). The analysis proceeds in a fairly natural way connecting well-known concepts. Though the authors claim that they make an interesting connection to linear probing in hashing, it is a fairly straightforward connection in my opinion, given the algorithm which is non-trivial. The authors also prove a matching lower-bound which proceeds by first proving a new anti-concentration theorem for a specific balls and bins scenario via counting (as is the common approach for proving concentration results in balls and bins type problems).    Overall, I think the problem is interesting and am convinced that it has many applications. Given this, this paper is a good start and provides a complete understanding for the exact model proposed. However, my main criticisms are the two points below, on the model itself, which would be natural features when applying this to real-world applications.  One downside is that the authors assume access to *exact* pairwise comparisons; this may not be true with many real-world applications. I suspect that their algorithm and analysis would potentially extend to noisy pairwise comparison after making sufficiently *nice* assumptions about the nature of the noise. I urge the authors to explore this direction and/or comment if this follows from their algorithm and analysis.  Another downside of this model is that the algorithm is assumed to have pairwise comparison with every element that has arrived so far. Thus, overall the comparison oracle is still making $O(n^2)$ comparisons. An extension where the algorithm can choose any number of the previously arrived elements and only compare with those and the goal is to obtain $O(n^{3/2})$ inversions while minimizing the number of comparisons is an interesting direction to consider.   Though this is a theory paper, I would have liked to see some experiments on a real-world application. Even if real-world datasets are not easy to come by that matches the problem setting, running some simple simulations should be useful for readability (and also quickly convincing the reader that the proof on the number of inversions is indeed correct). I would urge the authors to consider doing this in the final version of the paper.  In summary, here are the pros and cons of this paper.  Pros: - Interesting extension of the classical secretary problem - Model has many applications - Optimal algorithm with matching upper and lower-bounds. - Well-written paper and enjoyable to read.  Cons: - Model is a good start but does not fully account for issues in real-world applications. Two important additions could be noisy comparison, and limiting the number of comparisons.  - Lack of simulations or experiments that would be useful. - The analysis of the upper-bound is not particularly challenging. 