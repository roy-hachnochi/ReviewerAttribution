Low-precision training is an important setting to practitioners, which has been shown to be efficient when training neural network. The submission studies the convergence properties of low-precision training, and presents ``dimension-free’’ bounds for both linear quantization and non-linear quantization.   However, the term ``dimension-free’’ is very misleading and may not convey the right message. Indeed the dimension d, though not explicitly shown in the proposed bounds, is hidden in the parameters. The trick the authors use is utilizing L_1 norm as the upper bound of the Hessian while keeping the L_2 norm as the lower of the Hessian. As the authors mentioned, there can be such a gap of O(sort{d}) between L_1 norm and L_2 norm, and actually the O(sort{d}) gap happens in most of the practical examples, so it is improper to state the bound is dimension-free. It is true that L_1 norm can be naturally used to define continuity, for example as the natural norm for greedy coordinate descent, but using two different norms to define the upper bound and the lower bound is a bit cheating especially when focusing on the dimension. Moreover, the \|w_0-w^*\|^2 in the right hand of Theorem 1 itself contains the dimension d, hence the term ``dimension-free’’ is not well defined.  It is true that one can specially design some examples (like those in the experiments section) without such gap between the two norms, but those come from unrealistic models/settings. Usually in machine learning models, the data vector x is not sparse, and even if it is sparse, the sparsity should grow (linearly) as the dimension of the problem grows. I am afraid the result of this example cannot be generalized to any real-world machine learning setting, hence it is not convincing to me.    In my opinion, the key proof technique is Lemma 3, which connects the quantization to l1 norm. This is an interesting observation, and potentially shows that l1 norm is the suitable norm for the low-precision setting. A deeper understanding of such connection may lead to an interesting work. The non-linear quantization part is also interesting. It would be better if there are more discussions on the advantages of non-linear quantization.  Here are some more comments: 1. Write more terms in the definition of dom(\delta, b), otherwise it is a bit confusing about whether you only have the terms \delta*(2^i-1). 2. Having more discussions on what non-linear quantization gain compared with the linear counterpart can be helpful. 3. More numerical examples (for example ordinary least square for which each entry of X is iid Gaussian) can be convincing. And also try decreasing learning rate instead of constant learning rate. 4. The submission seems to contain too many settings (linear quantization, non-linear quantization, convex setting, non-convex setting), so that it is hard to have deeper discussions in a 8-page paper.