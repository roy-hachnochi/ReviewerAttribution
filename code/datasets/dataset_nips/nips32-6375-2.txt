First, I should say that the paper is very novel in comparison to many of the works that apply deep learning for programming tasks. From methodological perspective this may be the best paper in the area for 2019. The idea to train a classifier on whether a test will succeed and then to use feature attribution techniques for localizing the errors in the program is new, original and quite interesting. I also expect that despite the limited use case shown in the current paper, the idea is much larger and should be tried in a broader set of scenarios.  The paper is also well written, well motivated and should be of significant interest to most researchers working on learning for code. Furthermore, it provides good details both on the high-level idea, as well as on the detailed of the neural architecture.  In terms of evaluation, while results are not completely conclusive that the technique is superior to the state-of-the-art in all scenarios, it shows good promise. One should keep in mind, however, that the comparison is not to naive neural baselines, but to complex specialized systems to perform similar tasks.