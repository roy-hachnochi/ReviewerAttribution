The paper proposes a discrete flow model (IDF) based on the ideas from NICE/Real NVP. It differs from another discrete flow model of Tran et al., though the differences in layers construction are not too big. I don’t know what the policy regarding similar ideas is, but this work has strong experiments achieving state-of-the-art results, it seems to offer a better design for the factor-out layers and the latent distribution, and the paper is well organised and clearly written. I think that (discrete) flow model is an important direction to work on and this paper will be used by others.  I think the paper could be much better if it gave intuition on why some choices were made. For example, there is a conditional dependence between the parts of z. How much worse would the model be with independent latents? Another question is how much bigger does the model need to be if only translations are used instead of modulo scaling and translation? Have you tried using a softmax instead of a discretised logistic distribution?  The results in Table 3 are surprising. It’s related to the questions above. Do you know why a simpler model with only translations performs better than Real NVP with both scaling and translation? Would the difference be due to the dependencies in z or a different latent distribution?  Are the models in Table 3 comparable in terms of the number of parameters?  Section 2.2 says that rANS entropy encoder was used in the experiments, so I would assume that compression results in Table 1 are computed after you applied rANS. Is that correct? So have you implemented an encoder-decoder pair that one can readily use as a replacement to lossless JPEG2000 or PNG? How would they compare with respect to computational costs?       Line 244 typo: ‘they are are focused’.   ========== UPDATE ============ The rebuttal was sufficient and I'm happily increasing my score.   