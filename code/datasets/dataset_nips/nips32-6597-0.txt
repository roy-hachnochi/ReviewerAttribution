This paper proposes a reformulation of the dual of the entropy regularized wassserstein distance problem that is amenable to screening techniques. Such techniques allow to reduce the dimension of optimization problems hence reducing the computational costs. Here static screening rule is proposed, meaning that the variables are screened before running the solver which is here an L-BFGS-B quasi-Newton method.  Two screening techniques are proposed, either using a fixed threshold or a fixed budget. The latter appearing easier to use.  A theorem quantifying the error on the orignal problem induced by approximation and screening is provided.  The new solver is then employed in 2 ML problems (WDA and OTDA).  I have no strong concerns about the theoretical derivations that recall the basics of regularized transport and progressively introduces the the contributions.  I am more concerned about the experiments  - The method is not compared to Greenkhorn or any improved solver for this optimization problems.  - The beauty of Sinkhorn is that it can be accelerated by GPU computations. It is unclear how the new algorithm would compete with a GPU-accelerated Sinkhorn algorithm.  - The term "somewhat equivalent" at the end of the paper is not very scientific.  - In Fig 6 even the smallest decimation leads to an immediate drop of performance. This suggests a fundamental and uncontroled difference in the solvers used. This observation is consistent with Figure 7 (low left on OTDA toy) where a decimation of 2 or less is slower to converge than a regular Sinkhorn.  - There are quite weird results in figure 8 too where a decimation of 1.5 or 2 leads to a drop in accuracy while the more strigent decimation factors do not incure any performance drop.  Minor  - For figures when the legend and lines follow an order you should use a continuous paletter of colors and not categorical colors like here. It's then easier to see the gradient of speed gain with decimation.  Typos  - l19 : improve -> improved - quasi Newton -> quasi-Newton - l104: referred as Sinkhorn algorithm -> referred to as Sinkhorn algorithm