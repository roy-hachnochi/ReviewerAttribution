Theorem 1 states “The [Recovery of a binary latent code from a two-layer ReLU] is NP-hard since it could be reduced to MAX-3SAT problem.” For an NP-hardness proof, what one wishes to show is a reduction _from_ the known NP-hard problem _to_ the problem being studied. The proof in the appendix appears to correctly use the proposed recovery algorithm as a gadget in solving MAX3SAT, which would be sufficient for an NP-hardness proof, but the text is inconsistent with the theoretical results given. Additionally, while the binary reconstruction problem is interesting for the purpose of the complexity proof, it would be helpful to the reviewers if the rationale for this choice was made clearer outside of the context of the proof and while it is not strictly necessary for the theoretical results it would be useful if it could be shown that the binary latent variable case was representative of the complexity of the problem in general.  It is unclear where the expansiveness requirement for the generator model fits into the proof of Theorem 2  The only competing method examined is a strawman version of gradient descent, it would be interesting to see how this method compares to other approaches.  Should the inequality in equation 4 be wTz + b <= 0?  I’m confused about the dimensions of W and how it relates to both x and z. When defined on line 138, W is nxk. However in assumption 2, W_(I:) is multiplied by x which is nx1. It is my understanding, given that W is nxk, W_(I:) is m(or greater)xk and therefore couldn’t be multiplied by x as in assumption 2. Additionally, on line 125, we see Wz which gives a further indication that W is nxk. Finally, when Wi is defined in theorem 3, it is n_(i-1)xn_i. Therefore, if this was a one layer network, assuming n_0 = k and n_d = n (as stated in line 66) wouldn’t that mean W is kxn?  Line 154 states “Let error e satisfies l_inf = epsilon” which seems like a typo  Why is epsilon included in algorithm 2 when there’s no longer a maximum value for the error?  On line 223 it is mentioned that the uniform distribution and gaussian distribution are in favor of l_0 and l_1 error bound analysis. Isn’t the error bound analysis for l_inf and l1? Wouldn’t gaussian noise imply an l_2 error?