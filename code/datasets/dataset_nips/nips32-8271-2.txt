The authors propose to use graph neural networks to learn to imitate an optimal auto-vectorizer (ILP). This work is not the first to apply machine learning to auto-vectorization, however, the proposed approach is an end-to-end model for vectorization, whereas prior work focused on predicting performance.  While the proposed approach does not match the optimal solution, it is able to outperform the heuristics of LLVM in a polynomial runtime.  The authors run experiments comparing different imitation learning algorithms to ILP and LLVM. In the imitation learning experiments, different weights are placed on teacher vs student rollouts, and different node traversal strategies are proposed (forward vs backward), and benchmark their results on 3 datasets.    